{"ast":null,"code":"import { reject } from 'ramda';\nimport isFalsy from './isFalsy.js';\n\n/**\n * Creates an array with all falsy values removed.\n * The values false, null, 0, \"\", undefined, and NaN are falsy.\n *\n * @func compact\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.5.0|v2.5.0}\n * @category List\n * @sig Filterable f => f a -> f a\n * @param {Array} list The array to compact\n * @return {Array} Returns the new array of filtered values\n * @see {@link RA.isFalsy|isFalsy}\n * @example\n *\n * RA.compact([0, 1, false, 2, '', 3]); //=> [1, 2, 3]\n */\nvar compact = reject(isFalsy);\nexport default compact;","map":{"version":3,"names":["reject","isFalsy","compact"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/compact.js"],"sourcesContent":["import { reject } from 'ramda';\nimport isFalsy from './isFalsy.js';\n\n/**\n * Creates an array with all falsy values removed.\n * The values false, null, 0, \"\", undefined, and NaN are falsy.\n *\n * @func compact\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.5.0|v2.5.0}\n * @category List\n * @sig Filterable f => f a -> f a\n * @param {Array} list The array to compact\n * @return {Array} Returns the new array of filtered values\n * @see {@link RA.isFalsy|isFalsy}\n * @example\n *\n * RA.compact([0, 1, false, 2, '', 3]); //=> [1, 2, 3]\n */\nvar compact = reject(isFalsy);\nexport default compact;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,OAAOC,OAAO,MAAM,cAAc;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,OAAO,GAAGF,MAAM,CAACC,OAAO,CAAC;AAC7B,eAAeC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}