{"ast":null,"code":"import { ArraySlice, ObjectSlice, KeyValuePair } from 'minim';\nimport { isElement } from \"../predicates/index.mjs\";\nimport DeepCloneError from \"./errors/DeepCloneError.mjs\";\nimport ShallowCloneError from \"./errors/ShallowCloneError.mjs\";\nexport const cloneDeep = (value, options = {}) => {\n  const {\n    visited = new WeakMap()\n  } = options;\n  const passThroughOptions = {\n    ...options,\n    visited\n  };\n\n  // detect cycle and return memoized value\n  if (visited.has(value)) {\n    return visited.get(value);\n  }\n  if (value instanceof KeyValuePair) {\n    const {\n      key,\n      value: val\n    } = value;\n    const keyCopy = isElement(key) ? cloneDeep(key, passThroughOptions) : key;\n    const valueCopy = isElement(val) ? cloneDeep(val, passThroughOptions) : val;\n    const copy = new KeyValuePair(keyCopy, valueCopy);\n    visited.set(value, copy);\n    return copy;\n  }\n  if (value instanceof ObjectSlice) {\n    const mapper = element => cloneDeep(element, passThroughOptions);\n    const items = [...value].map(mapper);\n    const copy = new ObjectSlice(items);\n    visited.set(value, copy);\n    return copy;\n  }\n  if (value instanceof ArraySlice) {\n    const mapper = element => cloneDeep(element, passThroughOptions);\n    const items = [...value].map(mapper);\n    const copy = new ArraySlice(items);\n    visited.set(value, copy);\n    return copy;\n  }\n  if (isElement(value)) {\n    const copy = cloneShallow(value); // eslint-disable-line @typescript-eslint/no-use-before-define\n\n    visited.set(value, copy);\n    if (value.content) {\n      if (isElement(value.content)) {\n        copy.content = cloneDeep(value.content, passThroughOptions);\n      } else if (value.content instanceof KeyValuePair) {\n        copy.content = cloneDeep(value.content, passThroughOptions);\n      } else if (Array.isArray(value.content)) {\n        const mapper = element => cloneDeep(element, passThroughOptions);\n        copy.content = value.content.map(mapper);\n      } else {\n        copy.content = value.content;\n      }\n    } else {\n      copy.content = value.content;\n    }\n    return copy;\n  }\n  throw new DeepCloneError(\"Value provided to cloneDeep function couldn't be cloned\", {\n    value\n  });\n};\ncloneDeep.safe = value => {\n  try {\n    return cloneDeep(value);\n  } catch {\n    return value;\n  }\n};\nconst cloneShallowKeyValuePair = keyValuePair => {\n  const {\n    key,\n    value\n  } = keyValuePair;\n  return new KeyValuePair(key, value);\n};\nconst cloneShallowArraySlice = arraySlice => {\n  const items = [...arraySlice];\n  return new ArraySlice(items);\n};\nconst cloneShallowObjectSlice = objectSlice => {\n  const items = [...objectSlice];\n  return new ObjectSlice(items);\n};\n\n/* eslint-disable no-underscore-dangle */\nconst cloneShallowElement = element => {\n  // @ts-ignore\n  const copy = new element.constructor();\n  copy.element = element.element;\n  if (element.meta.length > 0) {\n    copy._meta = cloneDeep(element.meta);\n  }\n  if (element.attributes.length > 0) {\n    copy._attributes = cloneDeep(element.attributes);\n  }\n  if (isElement(element.content)) {\n    const content = element.content;\n    copy.content = cloneShallowElement(content);\n  } else if (Array.isArray(element.content)) {\n    copy.content = [...element.content];\n  } else if (element.content instanceof KeyValuePair) {\n    copy.content = cloneShallowKeyValuePair(element.content);\n  } else {\n    copy.content = element.content;\n  }\n  return copy;\n};\n/* eslint-enable */\n\nexport const cloneShallow = value => {\n  if (value instanceof KeyValuePair) {\n    return cloneShallowKeyValuePair(value);\n  }\n  if (value instanceof ObjectSlice) {\n    return cloneShallowObjectSlice(value);\n  }\n  if (value instanceof ArraySlice) {\n    return cloneShallowArraySlice(value);\n  }\n  if (isElement(value)) {\n    return cloneShallowElement(value);\n  }\n  throw new ShallowCloneError(\"Value provided to cloneShallow function couldn't be cloned\", {\n    value\n  });\n};\ncloneShallow.safe = value => {\n  try {\n    return cloneShallow(value);\n  } catch {\n    return value;\n  }\n};","map":{"version":3,"names":["ArraySlice","ObjectSlice","KeyValuePair","isElement","DeepCloneError","ShallowCloneError","cloneDeep","value","options","visited","WeakMap","passThroughOptions","has","get","key","val","keyCopy","valueCopy","copy","set","mapper","element","items","map","cloneShallow","content","Array","isArray","safe","cloneShallowKeyValuePair","keyValuePair","cloneShallowArraySlice","arraySlice","cloneShallowObjectSlice","objectSlice","cloneShallowElement","constructor","meta","length","_meta","attributes","_attributes"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/@swagger-api/apidom-core/es/clone/index.mjs"],"sourcesContent":["import { ArraySlice, ObjectSlice, KeyValuePair } from 'minim';\nimport { isElement } from \"../predicates/index.mjs\";\nimport DeepCloneError from \"./errors/DeepCloneError.mjs\";\nimport ShallowCloneError from \"./errors/ShallowCloneError.mjs\";\nexport const cloneDeep = (value, options = {}) => {\n  const {\n    visited = new WeakMap()\n  } = options;\n  const passThroughOptions = {\n    ...options,\n    visited\n  };\n\n  // detect cycle and return memoized value\n  if (visited.has(value)) {\n    return visited.get(value);\n  }\n  if (value instanceof KeyValuePair) {\n    const {\n      key,\n      value: val\n    } = value;\n    const keyCopy = isElement(key) ? cloneDeep(key, passThroughOptions) : key;\n    const valueCopy = isElement(val) ? cloneDeep(val, passThroughOptions) : val;\n    const copy = new KeyValuePair(keyCopy, valueCopy);\n    visited.set(value, copy);\n    return copy;\n  }\n  if (value instanceof ObjectSlice) {\n    const mapper = element => cloneDeep(element, passThroughOptions);\n    const items = [...value].map(mapper);\n    const copy = new ObjectSlice(items);\n    visited.set(value, copy);\n    return copy;\n  }\n  if (value instanceof ArraySlice) {\n    const mapper = element => cloneDeep(element, passThroughOptions);\n    const items = [...value].map(mapper);\n    const copy = new ArraySlice(items);\n    visited.set(value, copy);\n    return copy;\n  }\n  if (isElement(value)) {\n    const copy = cloneShallow(value); // eslint-disable-line @typescript-eslint/no-use-before-define\n\n    visited.set(value, copy);\n    if (value.content) {\n      if (isElement(value.content)) {\n        copy.content = cloneDeep(value.content, passThroughOptions);\n      } else if (value.content instanceof KeyValuePair) {\n        copy.content = cloneDeep(value.content, passThroughOptions);\n      } else if (Array.isArray(value.content)) {\n        const mapper = element => cloneDeep(element, passThroughOptions);\n        copy.content = value.content.map(mapper);\n      } else {\n        copy.content = value.content;\n      }\n    } else {\n      copy.content = value.content;\n    }\n    return copy;\n  }\n  throw new DeepCloneError(\"Value provided to cloneDeep function couldn't be cloned\", {\n    value\n  });\n};\ncloneDeep.safe = value => {\n  try {\n    return cloneDeep(value);\n  } catch {\n    return value;\n  }\n};\nconst cloneShallowKeyValuePair = keyValuePair => {\n  const {\n    key,\n    value\n  } = keyValuePair;\n  return new KeyValuePair(key, value);\n};\nconst cloneShallowArraySlice = arraySlice => {\n  const items = [...arraySlice];\n  return new ArraySlice(items);\n};\nconst cloneShallowObjectSlice = objectSlice => {\n  const items = [...objectSlice];\n  return new ObjectSlice(items);\n};\n\n/* eslint-disable no-underscore-dangle */\nconst cloneShallowElement = element => {\n  // @ts-ignore\n  const copy = new element.constructor();\n  copy.element = element.element;\n  if (element.meta.length > 0) {\n    copy._meta = cloneDeep(element.meta);\n  }\n  if (element.attributes.length > 0) {\n    copy._attributes = cloneDeep(element.attributes);\n  }\n  if (isElement(element.content)) {\n    const content = element.content;\n    copy.content = cloneShallowElement(content);\n  } else if (Array.isArray(element.content)) {\n    copy.content = [...element.content];\n  } else if (element.content instanceof KeyValuePair) {\n    copy.content = cloneShallowKeyValuePair(element.content);\n  } else {\n    copy.content = element.content;\n  }\n  return copy;\n};\n/* eslint-enable */\n\nexport const cloneShallow = value => {\n  if (value instanceof KeyValuePair) {\n    return cloneShallowKeyValuePair(value);\n  }\n  if (value instanceof ObjectSlice) {\n    return cloneShallowObjectSlice(value);\n  }\n  if (value instanceof ArraySlice) {\n    return cloneShallowArraySlice(value);\n  }\n  if (isElement(value)) {\n    return cloneShallowElement(value);\n  }\n  throw new ShallowCloneError(\"Value provided to cloneShallow function couldn't be cloned\", {\n    value\n  });\n};\ncloneShallow.safe = value => {\n  try {\n    return cloneShallow(value);\n  } catch {\n    return value;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}