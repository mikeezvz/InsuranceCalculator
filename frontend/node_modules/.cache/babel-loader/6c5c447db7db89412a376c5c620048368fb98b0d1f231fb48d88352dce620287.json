{"ast":null,"code":"import { Mixin } from 'ts-mixer';\nimport { T as stubTrue } from 'ramda';\nimport { isReferenceLikeElement } from \"../../../predicates.mjs\";\nimport { isReferenceElement, isResponseElement } from \"../../../../predicates.mjs\";\nimport AlternatingVisitor from \"../../generics/AlternatingVisitor.mjs\";\nimport FallbackVisitor from \"../../FallbackVisitor.mjs\";\nclass DefaultVisitor extends Mixin(AlternatingVisitor, FallbackVisitor) {\n  constructor(options) {\n    super(options);\n    this.alternator = [{\n      predicate: isReferenceLikeElement,\n      specPath: ['document', 'objects', 'Reference']\n    }, {\n      predicate: stubTrue,\n      specPath: ['document', 'objects', 'Response']\n    }];\n  }\n  ObjectElement(objectElement) {\n    const result = AlternatingVisitor.prototype.enter.call(this, objectElement);\n\n    // decorate ReferenceElement with type of referencing element\n    if (isReferenceElement(this.element)) {\n      this.element.setMetaProperty('referenced-element', 'response');\n    } else if (isResponseElement(this.element)) {\n      this.element.setMetaProperty('http-status-code', 'default');\n    }\n    return result;\n  }\n}\nexport default DefaultVisitor;","map":{"version":3,"names":["Mixin","T","stubTrue","isReferenceLikeElement","isReferenceElement","isResponseElement","AlternatingVisitor","FallbackVisitor","DefaultVisitor","constructor","options","alternator","predicate","specPath","ObjectElement","objectElement","result","prototype","enter","call","element","setMetaProperty"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/@swagger-api/apidom-ns-openapi-3-0/es/refractor/visitors/open-api-3-0/responses/DefaultVisitor.mjs"],"sourcesContent":["import { Mixin } from 'ts-mixer';\nimport { T as stubTrue } from 'ramda';\nimport { isReferenceLikeElement } from \"../../../predicates.mjs\";\nimport { isReferenceElement, isResponseElement } from \"../../../../predicates.mjs\";\nimport AlternatingVisitor from \"../../generics/AlternatingVisitor.mjs\";\nimport FallbackVisitor from \"../../FallbackVisitor.mjs\";\nclass DefaultVisitor extends Mixin(AlternatingVisitor, FallbackVisitor) {\n  constructor(options) {\n    super(options);\n    this.alternator = [{\n      predicate: isReferenceLikeElement,\n      specPath: ['document', 'objects', 'Reference']\n    }, {\n      predicate: stubTrue,\n      specPath: ['document', 'objects', 'Response']\n    }];\n  }\n  ObjectElement(objectElement) {\n    const result = AlternatingVisitor.prototype.enter.call(this, objectElement);\n\n    // decorate ReferenceElement with type of referencing element\n    if (isReferenceElement(this.element)) {\n      this.element.setMetaProperty('referenced-element', 'response');\n    } else if (isResponseElement(this.element)) {\n      this.element.setMetaProperty('http-status-code', 'default');\n    }\n    return result;\n  }\n}\nexport default DefaultVisitor;"],"mappings":"AAAA,SAASA,KAAK,QAAQ,UAAU;AAChC,SAASC,CAAC,IAAIC,QAAQ,QAAQ,OAAO;AACrC,SAASC,sBAAsB,QAAQ,yBAAyB;AAChE,SAASC,kBAAkB,EAAEC,iBAAiB,QAAQ,4BAA4B;AAClF,OAAOC,kBAAkB,MAAM,uCAAuC;AACtE,OAAOC,eAAe,MAAM,2BAA2B;AACvD,MAAMC,cAAc,SAASR,KAAK,CAACM,kBAAkB,EAAEC,eAAe,CAAC,CAAC;EACtEE,WAAWA,CAACC,OAAO,EAAE;IACnB,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,UAAU,GAAG,CAAC;MACjBC,SAAS,EAAET,sBAAsB;MACjCU,QAAQ,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,WAAW;IAC/C,CAAC,EAAE;MACDD,SAAS,EAAEV,QAAQ;MACnBW,QAAQ,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,UAAU;IAC9C,CAAC,CAAC;EACJ;EACAC,aAAaA,CAACC,aAAa,EAAE;IAC3B,MAAMC,MAAM,GAAGV,kBAAkB,CAACW,SAAS,CAACC,KAAK,CAACC,IAAI,CAAC,IAAI,EAAEJ,aAAa,CAAC;;IAE3E;IACA,IAAIX,kBAAkB,CAAC,IAAI,CAACgB,OAAO,CAAC,EAAE;MACpC,IAAI,CAACA,OAAO,CAACC,eAAe,CAAC,oBAAoB,EAAE,UAAU,CAAC;IAChE,CAAC,MAAM,IAAIhB,iBAAiB,CAAC,IAAI,CAACe,OAAO,CAAC,EAAE;MAC1C,IAAI,CAACA,OAAO,CAACC,eAAe,CAAC,kBAAkB,EAAE,SAAS,CAAC;IAC7D;IACA,OAAOL,MAAM;EACf;AACF;AACA,eAAeR,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}