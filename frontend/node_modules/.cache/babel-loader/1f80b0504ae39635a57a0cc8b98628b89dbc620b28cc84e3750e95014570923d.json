{"ast":null,"code":"import { isNotUndefined, isString } from 'ramda-adjunct';\nclass ReferenceSet {\n  rootRef;\n  refs;\n  circular;\n  constructor({\n    refs = [],\n    circular = false\n  } = {}) {\n    this.refs = [];\n    this.circular = circular;\n    refs.forEach(this.add.bind(this));\n  }\n  get size() {\n    return this.refs.length;\n  }\n  add(reference) {\n    if (!this.has(reference)) {\n      this.refs.push(reference);\n      this.rootRef = this.rootRef === undefined ? reference : this.rootRef;\n      reference.refSet = this; // eslint-disable-line no-param-reassign\n    }\n    return this;\n  }\n  merge(anotherRefSet) {\n    for (const reference of anotherRefSet.values()) {\n      this.add(reference);\n    }\n    return this;\n  }\n  has(thing) {\n    const uri = isString(thing) ? thing : thing.uri;\n    return isNotUndefined(this.find(ref => ref.uri === uri));\n  }\n  find(predicate) {\n    return this.refs.find(predicate);\n  }\n  *values() {\n    yield* this.refs;\n  }\n  clean() {\n    this.refs.forEach(ref => {\n      ref.refSet = undefined; // eslint-disable-line no-param-reassign\n    });\n    this.rootRef = undefined;\n    this.refs.length = 0;\n  }\n}\nexport default ReferenceSet;","map":{"version":3,"names":["isNotUndefined","isString","ReferenceSet","rootRef","refs","circular","constructor","forEach","add","bind","size","length","reference","has","push","undefined","refSet","merge","anotherRefSet","values","thing","uri","find","ref","predicate","clean"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/@swagger-api/apidom-reference/es/ReferenceSet.mjs"],"sourcesContent":["import { isNotUndefined, isString } from 'ramda-adjunct';\nclass ReferenceSet {\n  rootRef;\n  refs;\n  circular;\n  constructor({\n    refs = [],\n    circular = false\n  } = {}) {\n    this.refs = [];\n    this.circular = circular;\n    refs.forEach(this.add.bind(this));\n  }\n  get size() {\n    return this.refs.length;\n  }\n  add(reference) {\n    if (!this.has(reference)) {\n      this.refs.push(reference);\n      this.rootRef = this.rootRef === undefined ? reference : this.rootRef;\n      reference.refSet = this; // eslint-disable-line no-param-reassign\n    }\n    return this;\n  }\n  merge(anotherRefSet) {\n    for (const reference of anotherRefSet.values()) {\n      this.add(reference);\n    }\n    return this;\n  }\n  has(thing) {\n    const uri = isString(thing) ? thing : thing.uri;\n    return isNotUndefined(this.find(ref => ref.uri === uri));\n  }\n  find(predicate) {\n    return this.refs.find(predicate);\n  }\n  *values() {\n    yield* this.refs;\n  }\n  clean() {\n    this.refs.forEach(ref => {\n      ref.refSet = undefined; // eslint-disable-line no-param-reassign\n    });\n    this.rootRef = undefined;\n    this.refs.length = 0;\n  }\n}\nexport default ReferenceSet;"],"mappings":"AAAA,SAASA,cAAc,EAAEC,QAAQ,QAAQ,eAAe;AACxD,MAAMC,YAAY,CAAC;EACjBC,OAAO;EACPC,IAAI;EACJC,QAAQ;EACRC,WAAWA,CAAC;IACVF,IAAI,GAAG,EAAE;IACTC,QAAQ,GAAG;EACb,CAAC,GAAG,CAAC,CAAC,EAAE;IACN,IAAI,CAACD,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxBD,IAAI,CAACG,OAAO,CAAC,IAAI,CAACC,GAAG,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACnC;EACA,IAAIC,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACN,IAAI,CAACO,MAAM;EACzB;EACAH,GAAGA,CAACI,SAAS,EAAE;IACb,IAAI,CAAC,IAAI,CAACC,GAAG,CAACD,SAAS,CAAC,EAAE;MACxB,IAAI,CAACR,IAAI,CAACU,IAAI,CAACF,SAAS,CAAC;MACzB,IAAI,CAACT,OAAO,GAAG,IAAI,CAACA,OAAO,KAAKY,SAAS,GAAGH,SAAS,GAAG,IAAI,CAACT,OAAO;MACpES,SAAS,CAACI,MAAM,GAAG,IAAI,CAAC,CAAC;IAC3B;IACA,OAAO,IAAI;EACb;EACAC,KAAKA,CAACC,aAAa,EAAE;IACnB,KAAK,MAAMN,SAAS,IAAIM,aAAa,CAACC,MAAM,CAAC,CAAC,EAAE;MAC9C,IAAI,CAACX,GAAG,CAACI,SAAS,CAAC;IACrB;IACA,OAAO,IAAI;EACb;EACAC,GAAGA,CAACO,KAAK,EAAE;IACT,MAAMC,GAAG,GAAGpB,QAAQ,CAACmB,KAAK,CAAC,GAAGA,KAAK,GAAGA,KAAK,CAACC,GAAG;IAC/C,OAAOrB,cAAc,CAAC,IAAI,CAACsB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACF,GAAG,KAAKA,GAAG,CAAC,CAAC;EAC1D;EACAC,IAAIA,CAACE,SAAS,EAAE;IACd,OAAO,IAAI,CAACpB,IAAI,CAACkB,IAAI,CAACE,SAAS,CAAC;EAClC;EACA,CAACL,MAAMA,CAAA,EAAG;IACR,OAAO,IAAI,CAACf,IAAI;EAClB;EACAqB,KAAKA,CAAA,EAAG;IACN,IAAI,CAACrB,IAAI,CAACG,OAAO,CAACgB,GAAG,IAAI;MACvBA,GAAG,CAACP,MAAM,GAAGD,SAAS,CAAC,CAAC;IAC1B,CAAC,CAAC;IACF,IAAI,CAACZ,OAAO,GAAGY,SAAS;IACxB,IAAI,CAACX,IAAI,CAACO,MAAM,GAAG,CAAC;EACtB;AACF;AACA,eAAeT,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}