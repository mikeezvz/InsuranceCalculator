{"ast":null,"code":"import { mergeDeepRight, propOr } from 'ramda';\nimport { invokeArgs } from 'ramda-adjunct';\nimport createToolbox from \"../../toolbox.mjs\";\nimport { getNodeType, mergeAllVisitors, visit } from \"../../../traversal/visitor.mjs\";\nconst defaultDispatchPluginsOptions = {\n  toolboxCreator: createToolbox,\n  visitorOptions: {\n    nodeTypeGetter: getNodeType,\n    exposeEdits: true\n  }\n};\nexport const dispatchPluginsSync = (element, plugins, options = {}) => {\n  if (plugins.length === 0) return element;\n  const mergedOptions = mergeDeepRight(defaultDispatchPluginsOptions, options);\n  const {\n    toolboxCreator,\n    visitorOptions\n  } = mergedOptions;\n  const toolbox = toolboxCreator();\n  const pluginsSpecs = plugins.map(plugin => plugin(toolbox));\n  const mergedPluginsVisitor = mergeAllVisitors(pluginsSpecs.map(propOr({}, 'visitor')), {\n    ...visitorOptions\n  });\n  pluginsSpecs.forEach(invokeArgs(['pre'], []));\n  const newElement = visit(element, mergedPluginsVisitor, visitorOptions);\n  pluginsSpecs.forEach(invokeArgs(['post'], []));\n  return newElement;\n};\nexport const dispatchPluginsAsync = async (element, plugins, options = {}) => {\n  if (plugins.length === 0) return element;\n  const mergedOptions = mergeDeepRight(defaultDispatchPluginsOptions, options);\n  const {\n    toolboxCreator,\n    visitorOptions\n  } = mergedOptions;\n  const toolbox = toolboxCreator();\n  const pluginsSpecs = plugins.map(plugin => plugin(toolbox));\n  const mergeAllVisitorsAsync = mergeAllVisitors[Symbol.for('nodejs.util.promisify.custom')];\n  const visitAsync = visit[Symbol.for('nodejs.util.promisify.custom')];\n  const mergedPluginsVisitor = mergeAllVisitorsAsync(pluginsSpecs.map(propOr({}, 'visitor')), {\n    ...visitorOptions\n  });\n  await Promise.allSettled(pluginsSpecs.map(invokeArgs(['pre'], [])));\n  const newElement = await visitAsync(element, mergedPluginsVisitor, visitorOptions);\n  await Promise.allSettled(pluginsSpecs.map(invokeArgs(['post'], [])));\n  return newElement;\n};\ndispatchPluginsSync[Symbol.for('nodejs.util.promisify.custom')] = dispatchPluginsAsync;","map":{"version":3,"names":["mergeDeepRight","propOr","invokeArgs","createToolbox","getNodeType","mergeAllVisitors","visit","defaultDispatchPluginsOptions","toolboxCreator","visitorOptions","nodeTypeGetter","exposeEdits","dispatchPluginsSync","element","plugins","options","length","mergedOptions","toolbox","pluginsSpecs","map","plugin","mergedPluginsVisitor","forEach","newElement","dispatchPluginsAsync","mergeAllVisitorsAsync","Symbol","for","visitAsync","Promise","allSettled"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/@swagger-api/apidom-core/es/refractor/plugins/dispatcher/index.mjs"],"sourcesContent":["import { mergeDeepRight, propOr } from 'ramda';\nimport { invokeArgs } from 'ramda-adjunct';\nimport createToolbox from \"../../toolbox.mjs\";\nimport { getNodeType, mergeAllVisitors, visit } from \"../../../traversal/visitor.mjs\";\nconst defaultDispatchPluginsOptions = {\n  toolboxCreator: createToolbox,\n  visitorOptions: {\n    nodeTypeGetter: getNodeType,\n    exposeEdits: true\n  }\n};\nexport const dispatchPluginsSync = (element, plugins, options = {}) => {\n  if (plugins.length === 0) return element;\n  const mergedOptions = mergeDeepRight(defaultDispatchPluginsOptions, options);\n  const {\n    toolboxCreator,\n    visitorOptions\n  } = mergedOptions;\n  const toolbox = toolboxCreator();\n  const pluginsSpecs = plugins.map(plugin => plugin(toolbox));\n  const mergedPluginsVisitor = mergeAllVisitors(pluginsSpecs.map(propOr({}, 'visitor')), {\n    ...visitorOptions\n  });\n  pluginsSpecs.forEach(invokeArgs(['pre'], []));\n  const newElement = visit(element, mergedPluginsVisitor, visitorOptions);\n  pluginsSpecs.forEach(invokeArgs(['post'], []));\n  return newElement;\n};\nexport const dispatchPluginsAsync = async (element, plugins, options = {}) => {\n  if (plugins.length === 0) return element;\n  const mergedOptions = mergeDeepRight(defaultDispatchPluginsOptions, options);\n  const {\n    toolboxCreator,\n    visitorOptions\n  } = mergedOptions;\n  const toolbox = toolboxCreator();\n  const pluginsSpecs = plugins.map(plugin => plugin(toolbox));\n  const mergeAllVisitorsAsync = mergeAllVisitors[Symbol.for('nodejs.util.promisify.custom')];\n  const visitAsync = visit[Symbol.for('nodejs.util.promisify.custom')];\n  const mergedPluginsVisitor = mergeAllVisitorsAsync(pluginsSpecs.map(propOr({}, 'visitor')), {\n    ...visitorOptions\n  });\n  await Promise.allSettled(pluginsSpecs.map(invokeArgs(['pre'], [])));\n  const newElement = await visitAsync(element, mergedPluginsVisitor, visitorOptions);\n  await Promise.allSettled(pluginsSpecs.map(invokeArgs(['post'], [])));\n  return newElement;\n};\ndispatchPluginsSync[Symbol.for('nodejs.util.promisify.custom')] = dispatchPluginsAsync;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}