{"ast":null,"code":"function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nimport { type, curryN } from 'ramda';\n\n/**\n * Checks if input value is a Symbol.\n *\n * @func isSymbol\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.22.0|v2.22.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol|MDN Symbol}\n * @example\n *\n * RA.isSymbol(Symbol('1')); //=> true\n * RA.isSymbol(Symbol(1)); //=> true\n * RA.isSymbol('string'); //=> false\n * RA.isSymbol(undefined); //=> false\n * RA.isSymbol(null); //=> false\n */\nvar isSymbol = curryN(1, function (val) {\n  return _typeof(val) === 'symbol' || _typeof(val) === 'object' && type(val) === 'Symbol';\n});\nexport default isSymbol;","map":{"version":3,"names":["_typeof","o","Symbol","iterator","constructor","prototype","type","curryN","isSymbol","val"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/isSymbol.js"],"sourcesContent":["function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nimport { type, curryN } from 'ramda';\n\n/**\n * Checks if input value is a Symbol.\n *\n * @func isSymbol\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.22.0|v2.22.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol|MDN Symbol}\n * @example\n *\n * RA.isSymbol(Symbol('1')); //=> true\n * RA.isSymbol(Symbol(1)); //=> true\n * RA.isSymbol('string'); //=> false\n * RA.isSymbol(undefined); //=> false\n * RA.isSymbol(null); //=> false\n */\nvar isSymbol = curryN(1, function (val) {\n  return _typeof(val) === 'symbol' || _typeof(val) === 'object' && type(val) === 'Symbol';\n});\nexport default isSymbol;"],"mappings":"AAAA,SAASA,OAAOA,CAACC,CAAC,EAAE;EAAE,yBAAyB;;EAAE,OAAOD,OAAO,GAAG,UAAU,IAAI,OAAOE,MAAM,IAAI,QAAQ,IAAI,OAAOA,MAAM,CAACC,QAAQ,GAAG,UAAUF,CAAC,EAAE;IAAE,OAAO,OAAOA,CAAC;EAAE,CAAC,GAAG,UAAUA,CAAC,EAAE;IAAE,OAAOA,CAAC,IAAI,UAAU,IAAI,OAAOC,MAAM,IAAID,CAAC,CAACG,WAAW,KAAKF,MAAM,IAAID,CAAC,KAAKC,MAAM,CAACG,SAAS,GAAG,QAAQ,GAAG,OAAOJ,CAAC;EAAE,CAAC,EAAED,OAAO,CAACC,CAAC,CAAC;AAAE;AAC7T,SAASK,IAAI,EAAEC,MAAM,QAAQ,OAAO;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,QAAQ,GAAGD,MAAM,CAAC,CAAC,EAAE,UAAUE,GAAG,EAAE;EACtC,OAAOT,OAAO,CAACS,GAAG,CAAC,KAAK,QAAQ,IAAIT,OAAO,CAACS,GAAG,CAAC,KAAK,QAAQ,IAAIH,IAAI,CAACG,GAAG,CAAC,KAAK,QAAQ;AACzF,CAAC,CAAC;AACF,eAAeD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}