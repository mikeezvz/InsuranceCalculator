{"ast":null,"code":"import { isFile, isArrayOfFile, FileWithData } from './file.js';\nimport { valueEncoder } from '../../../execute/oas3/style-serializer.js';\nconst STYLE_SEPARATORS = {\n  form: ',',\n  spaceDelimited: '%20',\n  pipeDelimited: '|'\n};\nconst SEPARATORS = {\n  csv: ',',\n  ssv: '%20',\n  tsv: '%09',\n  pipes: '|'\n};\n\n// Formats a key-value and returns an array of key-value pairs.\n//\n// Return value example 1: [['color', 'blue']]\n// Return value example 2: [['color', 'blue,black,brown']]\n// Return value example 3: [['color', ['blue', 'black', 'brown']]]\n// Return value example 4: [['color', 'R,100,G,200,B,150']]\n// Return value example 5: [['R', '100'], ['G', '200'], ['B', '150']]\n// Return value example 6: [['color[R]', '100'], ['color[G]', '200'], ['color[B]', '150']]\nexport default function formatKeyValue(key, input, skipEncoding = false) {\n  const {\n    collectionFormat,\n    allowEmptyValue,\n    serializationOption,\n    encoding\n  } = input;\n  // `input` can be string\n  const value = typeof input === 'object' && !Array.isArray(input) ? input.value : input;\n  const encodeFn = skipEncoding ? k => k.toString() : k => encodeURIComponent(k);\n  const encodedKey = encodeFn(key);\n  if (typeof value === 'undefined' && allowEmptyValue) {\n    return [[encodedKey, '']];\n  }\n\n  // file\n  if (isFile(value) || isArrayOfFile(value)) {\n    return [[encodedKey, value]];\n  }\n\n  // for OAS 3 Parameter Object for serialization\n  if (serializationOption) {\n    return formatKeyValueBySerializationOption(key, value, skipEncoding, serializationOption);\n  }\n\n  // for OAS 3 Encoding Object\n  if (encoding) {\n    if ([typeof encoding.style, typeof encoding.explode, typeof encoding.allowReserved].some(type => type !== 'undefined')) {\n      const {\n        style,\n        explode,\n        allowReserved\n      } = encoding;\n      return formatKeyValueBySerializationOption(key, value, skipEncoding, {\n        style,\n        explode,\n        allowReserved\n      });\n    }\n    if (typeof encoding.contentType === 'string') {\n      if (encoding.contentType.startsWith('application/json')) {\n        // if value is a string, assume value is already a JSON string\n        const json = typeof value === 'string' ? value : JSON.stringify(value);\n        const encodedJson = encodeFn(json);\n        const file = new FileWithData(encodedJson, 'blob', {\n          type: encoding.contentType\n        });\n        return [[encodedKey, file]];\n      }\n      const encodedData = encodeFn(String(value));\n      const blob = new FileWithData(encodedData, 'blob', {\n        type: encoding.contentType\n      });\n      return [[encodedKey, blob]];\n    }\n\n    // Primitive\n    if (typeof value !== 'object') {\n      return [[encodedKey, encodeFn(value)]];\n    }\n\n    // Array of primitives\n    if (Array.isArray(value) && value.every(v => typeof v !== 'object')) {\n      return [[encodedKey, value.map(encodeFn).join(',')]];\n    }\n\n    // Array or object\n    return [[encodedKey, encodeFn(JSON.stringify(value))]];\n  }\n\n  // for OAS 2 Parameter Object\n  // Primitive\n  if (typeof value !== 'object') {\n    return [[encodedKey, encodeFn(value)]];\n  }\n\n  // Array\n  if (Array.isArray(value)) {\n    if (collectionFormat === 'multi') {\n      // In case of multipart/formdata, it is used as array.\n      // Otherwise, the caller will convert it to a query by qs.stringify.\n      return [[encodedKey, value.map(encodeFn)]];\n    }\n    return [[encodedKey, value.map(encodeFn).join(SEPARATORS[collectionFormat || 'csv'])]];\n  }\n\n  // Object\n  return [[encodedKey, '']];\n}\nfunction formatKeyValueBySerializationOption(key, value, skipEncoding, serializationOption) {\n  const style = serializationOption.style || 'form';\n  const explode = typeof serializationOption.explode === 'undefined' ? style === 'form' : serializationOption.explode;\n  // eslint-disable-next-line no-nested-ternary\n  const escape = skipEncoding ? false : serializationOption && serializationOption.allowReserved ? 'unsafe' : 'reserved';\n  const encodeFn = v => valueEncoder(v, escape);\n  const encodeKeyFn = skipEncoding ? k => k : k => encodeFn(k);\n\n  // Primitive\n  if (typeof value !== 'object') {\n    return [[encodeKeyFn(key), encodeFn(value)]];\n  }\n\n  // Array\n  if (Array.isArray(value)) {\n    if (explode) {\n      // In case of multipart/formdata, it is used as array.\n      // Otherwise, the caller will convert it to a query by qs.stringify.\n      return [[encodeKeyFn(key), value.map(encodeFn)]];\n    }\n    return [[encodeKeyFn(key), value.map(encodeFn).join(STYLE_SEPARATORS[style])]];\n  }\n\n  // Object\n  if (style === 'deepObject') {\n    return Object.keys(value).map(valueKey => [encodeKeyFn(`${key}[${valueKey}]`), encodeFn(value[valueKey])]);\n  }\n  if (explode) {\n    return Object.keys(value).map(valueKey => [encodeKeyFn(valueKey), encodeFn(value[valueKey])]);\n  }\n  return [[encodeKeyFn(key), Object.keys(value).map(valueKey => [`${encodeKeyFn(valueKey)},${encodeFn(value[valueKey])}`]).join(',')]];\n}","map":{"version":3,"names":["isFile","isArrayOfFile","FileWithData","valueEncoder","STYLE_SEPARATORS","form","spaceDelimited","pipeDelimited","SEPARATORS","csv","ssv","tsv","pipes","formatKeyValue","key","input","skipEncoding","collectionFormat","allowEmptyValue","serializationOption","encoding","value","Array","isArray","encodeFn","k","toString","encodeURIComponent","encodedKey","formatKeyValueBySerializationOption","style","explode","allowReserved","some","type","contentType","startsWith","json","JSON","stringify","encodedJson","file","encodedData","String","blob","every","v","map","join","escape","encodeKeyFn","Object","keys","valueKey"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/swagger-client/es/http/serializers/request/format.js"],"sourcesContent":["import { isFile, isArrayOfFile, FileWithData } from './file.js';\nimport { valueEncoder } from '../../../execute/oas3/style-serializer.js';\nconst STYLE_SEPARATORS = {\n  form: ',',\n  spaceDelimited: '%20',\n  pipeDelimited: '|'\n};\nconst SEPARATORS = {\n  csv: ',',\n  ssv: '%20',\n  tsv: '%09',\n  pipes: '|'\n};\n\n// Formats a key-value and returns an array of key-value pairs.\n//\n// Return value example 1: [['color', 'blue']]\n// Return value example 2: [['color', 'blue,black,brown']]\n// Return value example 3: [['color', ['blue', 'black', 'brown']]]\n// Return value example 4: [['color', 'R,100,G,200,B,150']]\n// Return value example 5: [['R', '100'], ['G', '200'], ['B', '150']]\n// Return value example 6: [['color[R]', '100'], ['color[G]', '200'], ['color[B]', '150']]\nexport default function formatKeyValue(key, input, skipEncoding = false) {\n  const {\n    collectionFormat,\n    allowEmptyValue,\n    serializationOption,\n    encoding\n  } = input;\n  // `input` can be string\n  const value = typeof input === 'object' && !Array.isArray(input) ? input.value : input;\n  const encodeFn = skipEncoding ? k => k.toString() : k => encodeURIComponent(k);\n  const encodedKey = encodeFn(key);\n  if (typeof value === 'undefined' && allowEmptyValue) {\n    return [[encodedKey, '']];\n  }\n\n  // file\n  if (isFile(value) || isArrayOfFile(value)) {\n    return [[encodedKey, value]];\n  }\n\n  // for OAS 3 Parameter Object for serialization\n  if (serializationOption) {\n    return formatKeyValueBySerializationOption(key, value, skipEncoding, serializationOption);\n  }\n\n  // for OAS 3 Encoding Object\n  if (encoding) {\n    if ([typeof encoding.style, typeof encoding.explode, typeof encoding.allowReserved].some(type => type !== 'undefined')) {\n      const {\n        style,\n        explode,\n        allowReserved\n      } = encoding;\n      return formatKeyValueBySerializationOption(key, value, skipEncoding, {\n        style,\n        explode,\n        allowReserved\n      });\n    }\n    if (typeof encoding.contentType === 'string') {\n      if (encoding.contentType.startsWith('application/json')) {\n        // if value is a string, assume value is already a JSON string\n        const json = typeof value === 'string' ? value : JSON.stringify(value);\n        const encodedJson = encodeFn(json);\n        const file = new FileWithData(encodedJson, 'blob', {\n          type: encoding.contentType\n        });\n        return [[encodedKey, file]];\n      }\n      const encodedData = encodeFn(String(value));\n      const blob = new FileWithData(encodedData, 'blob', {\n        type: encoding.contentType\n      });\n      return [[encodedKey, blob]];\n    }\n\n    // Primitive\n    if (typeof value !== 'object') {\n      return [[encodedKey, encodeFn(value)]];\n    }\n\n    // Array of primitives\n    if (Array.isArray(value) && value.every(v => typeof v !== 'object')) {\n      return [[encodedKey, value.map(encodeFn).join(',')]];\n    }\n\n    // Array or object\n    return [[encodedKey, encodeFn(JSON.stringify(value))]];\n  }\n\n  // for OAS 2 Parameter Object\n  // Primitive\n  if (typeof value !== 'object') {\n    return [[encodedKey, encodeFn(value)]];\n  }\n\n  // Array\n  if (Array.isArray(value)) {\n    if (collectionFormat === 'multi') {\n      // In case of multipart/formdata, it is used as array.\n      // Otherwise, the caller will convert it to a query by qs.stringify.\n      return [[encodedKey, value.map(encodeFn)]];\n    }\n    return [[encodedKey, value.map(encodeFn).join(SEPARATORS[collectionFormat || 'csv'])]];\n  }\n\n  // Object\n  return [[encodedKey, '']];\n}\nfunction formatKeyValueBySerializationOption(key, value, skipEncoding, serializationOption) {\n  const style = serializationOption.style || 'form';\n  const explode = typeof serializationOption.explode === 'undefined' ? style === 'form' : serializationOption.explode;\n  // eslint-disable-next-line no-nested-ternary\n  const escape = skipEncoding ? false : serializationOption && serializationOption.allowReserved ? 'unsafe' : 'reserved';\n  const encodeFn = v => valueEncoder(v, escape);\n  const encodeKeyFn = skipEncoding ? k => k : k => encodeFn(k);\n\n  // Primitive\n  if (typeof value !== 'object') {\n    return [[encodeKeyFn(key), encodeFn(value)]];\n  }\n\n  // Array\n  if (Array.isArray(value)) {\n    if (explode) {\n      // In case of multipart/formdata, it is used as array.\n      // Otherwise, the caller will convert it to a query by qs.stringify.\n      return [[encodeKeyFn(key), value.map(encodeFn)]];\n    }\n    return [[encodeKeyFn(key), value.map(encodeFn).join(STYLE_SEPARATORS[style])]];\n  }\n\n  // Object\n  if (style === 'deepObject') {\n    return Object.keys(value).map(valueKey => [encodeKeyFn(`${key}[${valueKey}]`), encodeFn(value[valueKey])]);\n  }\n  if (explode) {\n    return Object.keys(value).map(valueKey => [encodeKeyFn(valueKey), encodeFn(value[valueKey])]);\n  }\n  return [[encodeKeyFn(key), Object.keys(value).map(valueKey => [`${encodeKeyFn(valueKey)},${encodeFn(value[valueKey])}`]).join(',')]];\n}"],"mappings":"AAAA,SAASA,MAAM,EAAEC,aAAa,EAAEC,YAAY,QAAQ,WAAW;AAC/D,SAASC,YAAY,QAAQ,2CAA2C;AACxE,MAAMC,gBAAgB,GAAG;EACvBC,IAAI,EAAE,GAAG;EACTC,cAAc,EAAE,KAAK;EACrBC,aAAa,EAAE;AACjB,CAAC;AACD,MAAMC,UAAU,GAAG;EACjBC,GAAG,EAAE,GAAG;EACRC,GAAG,EAAE,KAAK;EACVC,GAAG,EAAE,KAAK;EACVC,KAAK,EAAE;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,cAAcA,CAACC,GAAG,EAAEC,KAAK,EAAEC,YAAY,GAAG,KAAK,EAAE;EACvE,MAAM;IACJC,gBAAgB;IAChBC,eAAe;IACfC,mBAAmB;IACnBC;EACF,CAAC,GAAGL,KAAK;EACT;EACA,MAAMM,KAAK,GAAG,OAAON,KAAK,KAAK,QAAQ,IAAI,CAACO,KAAK,CAACC,OAAO,CAACR,KAAK,CAAC,GAAGA,KAAK,CAACM,KAAK,GAAGN,KAAK;EACtF,MAAMS,QAAQ,GAAGR,YAAY,GAAGS,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAGD,CAAC,IAAIE,kBAAkB,CAACF,CAAC,CAAC;EAC9E,MAAMG,UAAU,GAAGJ,QAAQ,CAACV,GAAG,CAAC;EAChC,IAAI,OAAOO,KAAK,KAAK,WAAW,IAAIH,eAAe,EAAE;IACnD,OAAO,CAAC,CAACU,UAAU,EAAE,EAAE,CAAC,CAAC;EAC3B;;EAEA;EACA,IAAI5B,MAAM,CAACqB,KAAK,CAAC,IAAIpB,aAAa,CAACoB,KAAK,CAAC,EAAE;IACzC,OAAO,CAAC,CAACO,UAAU,EAAEP,KAAK,CAAC,CAAC;EAC9B;;EAEA;EACA,IAAIF,mBAAmB,EAAE;IACvB,OAAOU,mCAAmC,CAACf,GAAG,EAAEO,KAAK,EAAEL,YAAY,EAAEG,mBAAmB,CAAC;EAC3F;;EAEA;EACA,IAAIC,QAAQ,EAAE;IACZ,IAAI,CAAC,OAAOA,QAAQ,CAACU,KAAK,EAAE,OAAOV,QAAQ,CAACW,OAAO,EAAE,OAAOX,QAAQ,CAACY,aAAa,CAAC,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,KAAK,WAAW,CAAC,EAAE;MACtH,MAAM;QACJJ,KAAK;QACLC,OAAO;QACPC;MACF,CAAC,GAAGZ,QAAQ;MACZ,OAAOS,mCAAmC,CAACf,GAAG,EAAEO,KAAK,EAAEL,YAAY,EAAE;QACnEc,KAAK;QACLC,OAAO;QACPC;MACF,CAAC,CAAC;IACJ;IACA,IAAI,OAAOZ,QAAQ,CAACe,WAAW,KAAK,QAAQ,EAAE;MAC5C,IAAIf,QAAQ,CAACe,WAAW,CAACC,UAAU,CAAC,kBAAkB,CAAC,EAAE;QACvD;QACA,MAAMC,IAAI,GAAG,OAAOhB,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGiB,IAAI,CAACC,SAAS,CAAClB,KAAK,CAAC;QACtE,MAAMmB,WAAW,GAAGhB,QAAQ,CAACa,IAAI,CAAC;QAClC,MAAMI,IAAI,GAAG,IAAIvC,YAAY,CAACsC,WAAW,EAAE,MAAM,EAAE;UACjDN,IAAI,EAAEd,QAAQ,CAACe;QACjB,CAAC,CAAC;QACF,OAAO,CAAC,CAACP,UAAU,EAAEa,IAAI,CAAC,CAAC;MAC7B;MACA,MAAMC,WAAW,GAAGlB,QAAQ,CAACmB,MAAM,CAACtB,KAAK,CAAC,CAAC;MAC3C,MAAMuB,IAAI,GAAG,IAAI1C,YAAY,CAACwC,WAAW,EAAE,MAAM,EAAE;QACjDR,IAAI,EAAEd,QAAQ,CAACe;MACjB,CAAC,CAAC;MACF,OAAO,CAAC,CAACP,UAAU,EAAEgB,IAAI,CAAC,CAAC;IAC7B;;IAEA;IACA,IAAI,OAAOvB,KAAK,KAAK,QAAQ,EAAE;MAC7B,OAAO,CAAC,CAACO,UAAU,EAAEJ,QAAQ,CAACH,KAAK,CAAC,CAAC,CAAC;IACxC;;IAEA;IACA,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,IAAIA,KAAK,CAACwB,KAAK,CAACC,CAAC,IAAI,OAAOA,CAAC,KAAK,QAAQ,CAAC,EAAE;MACnE,OAAO,CAAC,CAAClB,UAAU,EAAEP,KAAK,CAAC0B,GAAG,CAACvB,QAAQ,CAAC,CAACwB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACtD;;IAEA;IACA,OAAO,CAAC,CAACpB,UAAU,EAAEJ,QAAQ,CAACc,IAAI,CAACC,SAAS,CAAClB,KAAK,CAAC,CAAC,CAAC,CAAC;EACxD;;EAEA;EACA;EACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAO,CAAC,CAACO,UAAU,EAAEJ,QAAQ,CAACH,KAAK,CAAC,CAAC,CAAC;EACxC;;EAEA;EACA,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;IACxB,IAAIJ,gBAAgB,KAAK,OAAO,EAAE;MAChC;MACA;MACA,OAAO,CAAC,CAACW,UAAU,EAAEP,KAAK,CAAC0B,GAAG,CAACvB,QAAQ,CAAC,CAAC,CAAC;IAC5C;IACA,OAAO,CAAC,CAACI,UAAU,EAAEP,KAAK,CAAC0B,GAAG,CAACvB,QAAQ,CAAC,CAACwB,IAAI,CAACxC,UAAU,CAACS,gBAAgB,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;EACxF;;EAEA;EACA,OAAO,CAAC,CAACW,UAAU,EAAE,EAAE,CAAC,CAAC;AAC3B;AACA,SAASC,mCAAmCA,CAACf,GAAG,EAAEO,KAAK,EAAEL,YAAY,EAAEG,mBAAmB,EAAE;EAC1F,MAAMW,KAAK,GAAGX,mBAAmB,CAACW,KAAK,IAAI,MAAM;EACjD,MAAMC,OAAO,GAAG,OAAOZ,mBAAmB,CAACY,OAAO,KAAK,WAAW,GAAGD,KAAK,KAAK,MAAM,GAAGX,mBAAmB,CAACY,OAAO;EACnH;EACA,MAAMkB,MAAM,GAAGjC,YAAY,GAAG,KAAK,GAAGG,mBAAmB,IAAIA,mBAAmB,CAACa,aAAa,GAAG,QAAQ,GAAG,UAAU;EACtH,MAAMR,QAAQ,GAAGsB,CAAC,IAAI3C,YAAY,CAAC2C,CAAC,EAAEG,MAAM,CAAC;EAC7C,MAAMC,WAAW,GAAGlC,YAAY,GAAGS,CAAC,IAAIA,CAAC,GAAGA,CAAC,IAAID,QAAQ,CAACC,CAAC,CAAC;;EAE5D;EACA,IAAI,OAAOJ,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAO,CAAC,CAAC6B,WAAW,CAACpC,GAAG,CAAC,EAAEU,QAAQ,CAACH,KAAK,CAAC,CAAC,CAAC;EAC9C;;EAEA;EACA,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;IACxB,IAAIU,OAAO,EAAE;MACX;MACA;MACA,OAAO,CAAC,CAACmB,WAAW,CAACpC,GAAG,CAAC,EAAEO,KAAK,CAAC0B,GAAG,CAACvB,QAAQ,CAAC,CAAC,CAAC;IAClD;IACA,OAAO,CAAC,CAAC0B,WAAW,CAACpC,GAAG,CAAC,EAAEO,KAAK,CAAC0B,GAAG,CAACvB,QAAQ,CAAC,CAACwB,IAAI,CAAC5C,gBAAgB,CAAC0B,KAAK,CAAC,CAAC,CAAC,CAAC;EAChF;;EAEA;EACA,IAAIA,KAAK,KAAK,YAAY,EAAE;IAC1B,OAAOqB,MAAM,CAACC,IAAI,CAAC/B,KAAK,CAAC,CAAC0B,GAAG,CAACM,QAAQ,IAAI,CAACH,WAAW,CAAC,GAAGpC,GAAG,IAAIuC,QAAQ,GAAG,CAAC,EAAE7B,QAAQ,CAACH,KAAK,CAACgC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5G;EACA,IAAItB,OAAO,EAAE;IACX,OAAOoB,MAAM,CAACC,IAAI,CAAC/B,KAAK,CAAC,CAAC0B,GAAG,CAACM,QAAQ,IAAI,CAACH,WAAW,CAACG,QAAQ,CAAC,EAAE7B,QAAQ,CAACH,KAAK,CAACgC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC/F;EACA,OAAO,CAAC,CAACH,WAAW,CAACpC,GAAG,CAAC,EAAEqC,MAAM,CAACC,IAAI,CAAC/B,KAAK,CAAC,CAAC0B,GAAG,CAACM,QAAQ,IAAI,CAAC,GAAGH,WAAW,CAACG,QAAQ,CAAC,IAAI7B,QAAQ,CAACH,KAAK,CAACgC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAACL,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AACtI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}