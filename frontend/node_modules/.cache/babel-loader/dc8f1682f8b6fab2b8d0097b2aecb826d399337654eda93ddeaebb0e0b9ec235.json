{"ast":null,"code":"import isFunction from '../../isFunction.js';\nimport isNotUndefined from '../../isNotUndefined.js';\nimport repeat from './String.repeat.js';\nvar padStartPonyfill = function padStartPonyfill(padString, targetLength, value) {\n  // eslint-disable-next-line no-bitwise\n  var finalLength = targetLength >> 0; // truncate if number, or convert non-number to 0;\n  var finalPadString = String(isNotUndefined(padString) ? padString : ' ');\n\n  // return the original string, if targeted length is less than original strings length\n  if (value.length >= finalLength) {\n    return String(value);\n  }\n  finalLength -= value.length;\n  if (finalLength > finalPadString.length) {\n    var lenghtToPad = finalLength / finalPadString.length;\n    // append to original to ensure we are longer than needed\n    finalPadString += isFunction(String.prototype.repeat) ? finalPadString.repeat(lenghtToPad) : repeat(finalPadString, lenghtToPad);\n  }\n  return finalPadString.slice(0, finalLength) + String(value);\n};\nexport default padStartPonyfill;","map":{"version":3,"names":["isFunction","isNotUndefined","repeat","padStartPonyfill","padString","targetLength","value","finalLength","finalPadString","String","length","lenghtToPad","prototype","slice"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/internal/ponyfills/String.padStart.js"],"sourcesContent":["import isFunction from '../../isFunction.js';\nimport isNotUndefined from '../../isNotUndefined.js';\nimport repeat from './String.repeat.js';\nvar padStartPonyfill = function padStartPonyfill(padString, targetLength, value) {\n  // eslint-disable-next-line no-bitwise\n  var finalLength = targetLength >> 0; // truncate if number, or convert non-number to 0;\n  var finalPadString = String(isNotUndefined(padString) ? padString : ' ');\n\n  // return the original string, if targeted length is less than original strings length\n  if (value.length >= finalLength) {\n    return String(value);\n  }\n  finalLength -= value.length;\n  if (finalLength > finalPadString.length) {\n    var lenghtToPad = finalLength / finalPadString.length;\n    // append to original to ensure we are longer than needed\n    finalPadString += isFunction(String.prototype.repeat) ? finalPadString.repeat(lenghtToPad) : repeat(finalPadString, lenghtToPad);\n  }\n  return finalPadString.slice(0, finalLength) + String(value);\n};\nexport default padStartPonyfill;"],"mappings":"AAAA,OAAOA,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,MAAM,MAAM,oBAAoB;AACvC,IAAIC,gBAAgB,GAAG,SAASA,gBAAgBA,CAACC,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAE;EAC/E;EACA,IAAIC,WAAW,GAAGF,YAAY,IAAI,CAAC,CAAC,CAAC;EACrC,IAAIG,cAAc,GAAGC,MAAM,CAACR,cAAc,CAACG,SAAS,CAAC,GAAGA,SAAS,GAAG,GAAG,CAAC;;EAExE;EACA,IAAIE,KAAK,CAACI,MAAM,IAAIH,WAAW,EAAE;IAC/B,OAAOE,MAAM,CAACH,KAAK,CAAC;EACtB;EACAC,WAAW,IAAID,KAAK,CAACI,MAAM;EAC3B,IAAIH,WAAW,GAAGC,cAAc,CAACE,MAAM,EAAE;IACvC,IAAIC,WAAW,GAAGJ,WAAW,GAAGC,cAAc,CAACE,MAAM;IACrD;IACAF,cAAc,IAAIR,UAAU,CAACS,MAAM,CAACG,SAAS,CAACV,MAAM,CAAC,GAAGM,cAAc,CAACN,MAAM,CAACS,WAAW,CAAC,GAAGT,MAAM,CAACM,cAAc,EAAEG,WAAW,CAAC;EAClI;EACA,OAAOH,cAAc,CAACK,KAAK,CAAC,CAAC,EAAEN,WAAW,CAAC,GAAGE,MAAM,CAACH,KAAK,CAAC;AAC7D,CAAC;AACD,eAAeH,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}