{"ast":null,"code":"import { F as stubFalse } from 'ramda';\nimport { MemberElement, BREAK, cloneDeep, toValue } from '@swagger-api/apidom-core';\nimport SpecificationVisitor from \"../SpecificationVisitor.mjs\";\nclass PatternedFieldsVisitor extends SpecificationVisitor {\n  specPath;\n  ignoredFields;\n  fieldPatternPredicate = stubFalse;\n  constructor({\n    specPath,\n    ignoredFields,\n    fieldPatternPredicate,\n    ...rest\n  }) {\n    super({\n      ...rest\n    });\n    this.specPath = specPath;\n    this.ignoredFields = ignoredFields || [];\n    if (typeof fieldPatternPredicate === 'function') {\n      this.fieldPatternPredicate = fieldPatternPredicate;\n    }\n  }\n  ObjectElement(objectElement) {\n    // @ts-ignore\n    objectElement.forEach((value, key, memberElement) => {\n      if (!this.ignoredFields.includes(toValue(key)) && this.fieldPatternPredicate(toValue(key))) {\n        const specPath = this.specPath(value);\n        const patternedFieldElement = this.toRefractedElement(specPath, value);\n        const newMemberElement = new MemberElement(cloneDeep(key), patternedFieldElement);\n        this.copyMetaAndAttributes(memberElement, newMemberElement);\n        newMemberElement.classes.push('patterned-field');\n        this.element.content.push(newMemberElement);\n      } else if (!this.ignoredFields.includes(toValue(key))) {\n        this.element.content.push(cloneDeep(memberElement));\n      }\n    });\n    this.copyMetaAndAttributes(objectElement, this.element);\n    return BREAK;\n  }\n}\nexport default PatternedFieldsVisitor;","map":{"version":3,"names":["F","stubFalse","MemberElement","BREAK","cloneDeep","toValue","SpecificationVisitor","PatternedFieldsVisitor","specPath","ignoredFields","fieldPatternPredicate","constructor","rest","ObjectElement","objectElement","forEach","value","key","memberElement","includes","patternedFieldElement","toRefractedElement","newMemberElement","copyMetaAndAttributes","classes","push","element","content"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/@swagger-api/apidom-ns-json-schema-draft-4/es/refractor/visitors/generics/PatternedFieldsVisitor.mjs"],"sourcesContent":["import { F as stubFalse } from 'ramda';\nimport { MemberElement, BREAK, cloneDeep, toValue } from '@swagger-api/apidom-core';\nimport SpecificationVisitor from \"../SpecificationVisitor.mjs\";\nclass PatternedFieldsVisitor extends SpecificationVisitor {\n  specPath;\n  ignoredFields;\n  fieldPatternPredicate = stubFalse;\n  constructor({\n    specPath,\n    ignoredFields,\n    fieldPatternPredicate,\n    ...rest\n  }) {\n    super({\n      ...rest\n    });\n    this.specPath = specPath;\n    this.ignoredFields = ignoredFields || [];\n    if (typeof fieldPatternPredicate === 'function') {\n      this.fieldPatternPredicate = fieldPatternPredicate;\n    }\n  }\n  ObjectElement(objectElement) {\n    // @ts-ignore\n    objectElement.forEach((value, key, memberElement) => {\n      if (!this.ignoredFields.includes(toValue(key)) && this.fieldPatternPredicate(toValue(key))) {\n        const specPath = this.specPath(value);\n        const patternedFieldElement = this.toRefractedElement(specPath, value);\n        const newMemberElement = new MemberElement(cloneDeep(key), patternedFieldElement);\n        this.copyMetaAndAttributes(memberElement, newMemberElement);\n        newMemberElement.classes.push('patterned-field');\n        this.element.content.push(newMemberElement);\n      } else if (!this.ignoredFields.includes(toValue(key))) {\n        this.element.content.push(cloneDeep(memberElement));\n      }\n    });\n    this.copyMetaAndAttributes(objectElement, this.element);\n    return BREAK;\n  }\n}\nexport default PatternedFieldsVisitor;"],"mappings":"AAAA,SAASA,CAAC,IAAIC,SAAS,QAAQ,OAAO;AACtC,SAASC,aAAa,EAAEC,KAAK,EAAEC,SAAS,EAAEC,OAAO,QAAQ,0BAA0B;AACnF,OAAOC,oBAAoB,MAAM,6BAA6B;AAC9D,MAAMC,sBAAsB,SAASD,oBAAoB,CAAC;EACxDE,QAAQ;EACRC,aAAa;EACbC,qBAAqB,GAAGT,SAAS;EACjCU,WAAWA,CAAC;IACVH,QAAQ;IACRC,aAAa;IACbC,qBAAqB;IACrB,GAAGE;EACL,CAAC,EAAE;IACD,KAAK,CAAC;MACJ,GAAGA;IACL,CAAC,CAAC;IACF,IAAI,CAACJ,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,aAAa,GAAGA,aAAa,IAAI,EAAE;IACxC,IAAI,OAAOC,qBAAqB,KAAK,UAAU,EAAE;MAC/C,IAAI,CAACA,qBAAqB,GAAGA,qBAAqB;IACpD;EACF;EACAG,aAAaA,CAACC,aAAa,EAAE;IAC3B;IACAA,aAAa,CAACC,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,EAAEC,aAAa,KAAK;MACnD,IAAI,CAAC,IAAI,CAACT,aAAa,CAACU,QAAQ,CAACd,OAAO,CAACY,GAAG,CAAC,CAAC,IAAI,IAAI,CAACP,qBAAqB,CAACL,OAAO,CAACY,GAAG,CAAC,CAAC,EAAE;QAC1F,MAAMT,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACQ,KAAK,CAAC;QACrC,MAAMI,qBAAqB,GAAG,IAAI,CAACC,kBAAkB,CAACb,QAAQ,EAAEQ,KAAK,CAAC;QACtE,MAAMM,gBAAgB,GAAG,IAAIpB,aAAa,CAACE,SAAS,CAACa,GAAG,CAAC,EAAEG,qBAAqB,CAAC;QACjF,IAAI,CAACG,qBAAqB,CAACL,aAAa,EAAEI,gBAAgB,CAAC;QAC3DA,gBAAgB,CAACE,OAAO,CAACC,IAAI,CAAC,iBAAiB,CAAC;QAChD,IAAI,CAACC,OAAO,CAACC,OAAO,CAACF,IAAI,CAACH,gBAAgB,CAAC;MAC7C,CAAC,MAAM,IAAI,CAAC,IAAI,CAACb,aAAa,CAACU,QAAQ,CAACd,OAAO,CAACY,GAAG,CAAC,CAAC,EAAE;QACrD,IAAI,CAACS,OAAO,CAACC,OAAO,CAACF,IAAI,CAACrB,SAAS,CAACc,aAAa,CAAC,CAAC;MACrD;IACF,CAAC,CAAC;IACF,IAAI,CAACK,qBAAqB,CAACT,aAAa,EAAE,IAAI,CAACY,OAAO,CAAC;IACvD,OAAOvB,KAAK;EACd;AACF;AACA,eAAeI,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}