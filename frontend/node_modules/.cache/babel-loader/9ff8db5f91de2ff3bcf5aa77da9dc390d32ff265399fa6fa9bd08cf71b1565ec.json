{"ast":null,"code":"import { type, identical, pipe, curryN } from 'ramda';\n\n/**\n * Checks if value is `Date` object.\n *\n * @func isDate\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/0.6.0|v0.6.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isNotDate|isNotDate}, {@link RA.isValidDate|isValidDate}, {@link RA.isNotValidDate|isNotValidDate}\n * @example\n *\n * RA.isDate(new Date()); //=> true\n * RA.isDate('1997-07-16T19:20+01:00'); //=> false\n */\nvar isDate = curryN(1, pipe(type, identical('Date')));\nexport default isDate;","map":{"version":3,"names":["type","identical","pipe","curryN","isDate"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/isDate.js"],"sourcesContent":["import { type, identical, pipe, curryN } from 'ramda';\n\n/**\n * Checks if value is `Date` object.\n *\n * @func isDate\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/0.6.0|v0.6.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isNotDate|isNotDate}, {@link RA.isValidDate|isValidDate}, {@link RA.isNotValidDate|isNotValidDate}\n * @example\n *\n * RA.isDate(new Date()); //=> true\n * RA.isDate('1997-07-16T19:20+01:00'); //=> false\n */\nvar isDate = curryN(1, pipe(type, identical('Date')));\nexport default isDate;"],"mappings":"AAAA,SAASA,IAAI,EAAEC,SAAS,EAAEC,IAAI,EAAEC,MAAM,QAAQ,OAAO;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,MAAM,GAAGD,MAAM,CAAC,CAAC,EAAED,IAAI,CAACF,IAAI,EAAEC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;AACrD,eAAeG,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}