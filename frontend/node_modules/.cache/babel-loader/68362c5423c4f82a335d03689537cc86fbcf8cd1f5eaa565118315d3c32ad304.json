{"ast":null,"code":"// iterate over each operation, and fire a callback with details\n// `find=true` will stop iterating, when the cb returns truthy\nexport default function eachOperation(spec, cb, find) {\n  if (!spec || typeof spec !== 'object' || !spec.paths || typeof spec.paths !== 'object') {\n    return null;\n  }\n  const {\n    paths\n  } = spec;\n\n  // Iterate over the spec, collecting operations\n  // eslint-disable-next-line no-restricted-syntax, guard-for-in\n  for (const pathName in paths) {\n    // eslint-disable-next-line no-restricted-syntax, guard-for-in\n    for (const method in paths[pathName]) {\n      if (method.toUpperCase() === 'PARAMETERS') {\n        continue; // eslint-disable-line no-continue\n      }\n      const operation = paths[pathName][method];\n      if (!operation || typeof operation !== 'object') {\n        continue; // eslint-disable-line no-continue\n      }\n      const operationObj = {\n        spec,\n        pathName,\n        method: method.toUpperCase(),\n        operation\n      };\n      const cbValue = cb(operationObj);\n      if (find && cbValue) {\n        return operationObj;\n      }\n    }\n  }\n  return undefined;\n}","map":{"version":3,"names":["eachOperation","spec","cb","find","paths","pathName","method","toUpperCase","operation","operationObj","cbValue","undefined"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/swagger-client/es/helpers/each-operation.js"],"sourcesContent":["// iterate over each operation, and fire a callback with details\n// `find=true` will stop iterating, when the cb returns truthy\nexport default function eachOperation(spec, cb, find) {\n  if (!spec || typeof spec !== 'object' || !spec.paths || typeof spec.paths !== 'object') {\n    return null;\n  }\n  const {\n    paths\n  } = spec;\n\n  // Iterate over the spec, collecting operations\n  // eslint-disable-next-line no-restricted-syntax, guard-for-in\n  for (const pathName in paths) {\n    // eslint-disable-next-line no-restricted-syntax, guard-for-in\n    for (const method in paths[pathName]) {\n      if (method.toUpperCase() === 'PARAMETERS') {\n        continue; // eslint-disable-line no-continue\n      }\n      const operation = paths[pathName][method];\n      if (!operation || typeof operation !== 'object') {\n        continue; // eslint-disable-line no-continue\n      }\n      const operationObj = {\n        spec,\n        pathName,\n        method: method.toUpperCase(),\n        operation\n      };\n      const cbValue = cb(operationObj);\n      if (find && cbValue) {\n        return operationObj;\n      }\n    }\n  }\n  return undefined;\n}"],"mappings":"AAAA;AACA;AACA,eAAe,SAASA,aAAaA,CAACC,IAAI,EAAEC,EAAE,EAAEC,IAAI,EAAE;EACpD,IAAI,CAACF,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,CAACA,IAAI,CAACG,KAAK,IAAI,OAAOH,IAAI,CAACG,KAAK,KAAK,QAAQ,EAAE;IACtF,OAAO,IAAI;EACb;EACA,MAAM;IACJA;EACF,CAAC,GAAGH,IAAI;;EAER;EACA;EACA,KAAK,MAAMI,QAAQ,IAAID,KAAK,EAAE;IAC5B;IACA,KAAK,MAAME,MAAM,IAAIF,KAAK,CAACC,QAAQ,CAAC,EAAE;MACpC,IAAIC,MAAM,CAACC,WAAW,CAAC,CAAC,KAAK,YAAY,EAAE;QACzC,SAAS,CAAC;MACZ;MACA,MAAMC,SAAS,GAAGJ,KAAK,CAACC,QAAQ,CAAC,CAACC,MAAM,CAAC;MACzC,IAAI,CAACE,SAAS,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;QAC/C,SAAS,CAAC;MACZ;MACA,MAAMC,YAAY,GAAG;QACnBR,IAAI;QACJI,QAAQ;QACRC,MAAM,EAAEA,MAAM,CAACC,WAAW,CAAC,CAAC;QAC5BC;MACF,CAAC;MACD,MAAME,OAAO,GAAGR,EAAE,CAACO,YAAY,CAAC;MAChC,IAAIN,IAAI,IAAIO,OAAO,EAAE;QACnB,OAAOD,YAAY;MACrB;IACF;EACF;EACA,OAAOE,SAAS;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}