{"ast":null,"code":"import { pipe, type, identical, both, equals, toString, pathSatisfies, curryN } from 'ramda';\nimport isNull from './isNull.js';\nimport isObjLike from './isObjLike.js';\nimport isFunction from './isFunction.js';\nvar isObject = pipe(type, identical('Object'));\nvar isObjectConstructor = pipe(toString, equals(toString(Object)));\nvar hasObjectConstructor = pathSatisfies(both(isFunction, isObjectConstructor), ['constructor']);\n\n/* eslint-disable max-len */\n/**\n * Check to see if an object is a plain object (created using `{}`, `new Object()` or `Object.create(null)`).\n *\n * @func isPlainObj\n * @aliases isPlainObject\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/0.5.0|v0.5.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isNotPlainObj|isNotPlainObj}, {@link RA.isObjLike|isObjLike}, {@link RA.isObj|isObj}\n * @example\n *\n * class Bar {\n *   constructor() {\n *     this.prop = 'value';\n *   }\n * }\n *\n * RA.isPlainObj(new Bar()); //=> false\n * RA.isPlainObj({ prop: 'value' }); //=> true\n * RA.isPlainObj(['a', 'b', 'c']); //=> false\n * RA.isPlainObj(Object.create(null); //=> true\n * RA.isPlainObj(new Object()); //=> true\n */\n/* eslint-enable max-len */\nvar isPlainObj = curryN(1, function (val) {\n  if (!isObjLike(val) || !isObject(val)) {\n    return false;\n  }\n  var proto = Object.getPrototypeOf(val);\n  if (isNull(proto)) {\n    return true;\n  }\n  return hasObjectConstructor(proto);\n});\nexport default isPlainObj;","map":{"version":3,"names":["pipe","type","identical","both","equals","toString","pathSatisfies","curryN","isNull","isObjLike","isFunction","isObject","isObjectConstructor","Object","hasObjectConstructor","isPlainObj","val","proto","getPrototypeOf"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/isPlainObj.js"],"sourcesContent":["import { pipe, type, identical, both, equals, toString, pathSatisfies, curryN } from 'ramda';\nimport isNull from './isNull.js';\nimport isObjLike from './isObjLike.js';\nimport isFunction from './isFunction.js';\nvar isObject = pipe(type, identical('Object'));\nvar isObjectConstructor = pipe(toString, equals(toString(Object)));\nvar hasObjectConstructor = pathSatisfies(both(isFunction, isObjectConstructor), ['constructor']);\n\n/* eslint-disable max-len */\n/**\n * Check to see if an object is a plain object (created using `{}`, `new Object()` or `Object.create(null)`).\n *\n * @func isPlainObj\n * @aliases isPlainObject\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/0.5.0|v0.5.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isNotPlainObj|isNotPlainObj}, {@link RA.isObjLike|isObjLike}, {@link RA.isObj|isObj}\n * @example\n *\n * class Bar {\n *   constructor() {\n *     this.prop = 'value';\n *   }\n * }\n *\n * RA.isPlainObj(new Bar()); //=> false\n * RA.isPlainObj({ prop: 'value' }); //=> true\n * RA.isPlainObj(['a', 'b', 'c']); //=> false\n * RA.isPlainObj(Object.create(null); //=> true\n * RA.isPlainObj(new Object()); //=> true\n */\n/* eslint-enable max-len */\nvar isPlainObj = curryN(1, function (val) {\n  if (!isObjLike(val) || !isObject(val)) {\n    return false;\n  }\n  var proto = Object.getPrototypeOf(val);\n  if (isNull(proto)) {\n    return true;\n  }\n  return hasObjectConstructor(proto);\n});\nexport default isPlainObj;"],"mappings":"AAAA,SAASA,IAAI,EAAEC,IAAI,EAAEC,SAAS,EAAEC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,MAAM,QAAQ,OAAO;AAC5F,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,UAAU,MAAM,iBAAiB;AACxC,IAAIC,QAAQ,GAAGX,IAAI,CAACC,IAAI,EAAEC,SAAS,CAAC,QAAQ,CAAC,CAAC;AAC9C,IAAIU,mBAAmB,GAAGZ,IAAI,CAACK,QAAQ,EAAED,MAAM,CAACC,QAAQ,CAACQ,MAAM,CAAC,CAAC,CAAC;AAClE,IAAIC,oBAAoB,GAAGR,aAAa,CAACH,IAAI,CAACO,UAAU,EAAEE,mBAAmB,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;;AAEhG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIG,UAAU,GAAGR,MAAM,CAAC,CAAC,EAAE,UAAUS,GAAG,EAAE;EACxC,IAAI,CAACP,SAAS,CAACO,GAAG,CAAC,IAAI,CAACL,QAAQ,CAACK,GAAG,CAAC,EAAE;IACrC,OAAO,KAAK;EACd;EACA,IAAIC,KAAK,GAAGJ,MAAM,CAACK,cAAc,CAACF,GAAG,CAAC;EACtC,IAAIR,MAAM,CAACS,KAAK,CAAC,EAAE;IACjB,OAAO,IAAI;EACb;EACA,OAAOH,oBAAoB,CAACG,KAAK,CAAC;AACpC,CAAC,CAAC;AACF,eAAeF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}