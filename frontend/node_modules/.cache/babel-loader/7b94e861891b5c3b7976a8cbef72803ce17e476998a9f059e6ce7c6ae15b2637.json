{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Match } from './match';\n/**\n * @class Autolinker.match.Hashtag\n * @extends Autolinker.match.Match\n *\n * Represents a Hashtag match found in an input string which should be\n * Autolinked.\n *\n * See this class's superclass ({@link Autolinker.match.Match}) for more\n * details.\n */\nvar HashtagMatch = /** @class */function (_super) {\n  __extends(HashtagMatch, _super);\n  /**\n   * @method constructor\n   * @param {Object} cfg The configuration properties for the Match\n   *   instance, specified in an Object (map).\n   */\n  function HashtagMatch(cfg) {\n    var _this = _super.call(this, cfg) || this;\n    /**\n     * @cfg {String} serviceName\n     *\n     * The service to point hashtag matches to. See {@link Autolinker#hashtag}\n     * for available values.\n     */\n    _this.serviceName = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n    /**\n     * @cfg {String} hashtag (required)\n     *\n     * The HashtagMatch that was matched, without the '#'.\n     */\n    _this.hashtag = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n    _this.serviceName = cfg.serviceName;\n    _this.hashtag = cfg.hashtag;\n    return _this;\n  }\n  /**\n   * Returns a string name for the type of match that this class represents.\n   * For the case of HashtagMatch, returns 'hashtag'.\n   *\n   * @return {String}\n   */\n  HashtagMatch.prototype.getType = function () {\n    return 'hashtag';\n  };\n  /**\n   * Returns the configured {@link #serviceName} to point the HashtagMatch to.\n   * Ex: 'facebook', 'twitter'.\n   *\n   * @return {String}\n   */\n  HashtagMatch.prototype.getServiceName = function () {\n    return this.serviceName;\n  };\n  /**\n   * Returns the matched hashtag, without the '#' character.\n   *\n   * @return {String}\n   */\n  HashtagMatch.prototype.getHashtag = function () {\n    return this.hashtag;\n  };\n  /**\n   * Returns the anchor href that should be generated for the match.\n   *\n   * @return {String}\n   */\n  HashtagMatch.prototype.getAnchorHref = function () {\n    var serviceName = this.serviceName,\n      hashtag = this.hashtag;\n    switch (serviceName) {\n      case 'twitter':\n        return 'https://twitter.com/hashtag/' + hashtag;\n      case 'facebook':\n        return 'https://www.facebook.com/hashtag/' + hashtag;\n      case 'instagram':\n        return 'https://instagram.com/explore/tags/' + hashtag;\n      case 'tiktok':\n        return 'https://www.tiktok.com/tag/' + hashtag;\n      default:\n        // Shouldn't happen because Autolinker's constructor should block any invalid values, but just in case.\n        throw new Error('Unknown service name to point hashtag to: ' + serviceName);\n    }\n  };\n  /**\n   * Returns the anchor text that should be generated for the match.\n   *\n   * @return {String}\n   */\n  HashtagMatch.prototype.getAnchorText = function () {\n    return '#' + this.hashtag;\n  };\n  return HashtagMatch;\n}(Match);\nexport { HashtagMatch };","map":{"version":3,"names":["Match","HashtagMatch","_super","__extends","cfg","_this","call","serviceName","hashtag","prototype","getType","getServiceName","getHashtag","getAnchorHref","Error","getAnchorText"],"sources":["../../../src/match/hashtag-match.ts"],"sourcesContent":[null],"mappings":";AAAA,SAASA,KAAK,QAAqB,SAAS;AAE5C;;;;;;;;;;AAUA,IAAAC,YAAA,0BAAAC,MAAA;EAAkCC,SAAA,CAAAF,YAAA,EAAAC,MAAA;EAgB9B;;;;;EAKA,SAAAD,aAAYG,GAAuB;IAAnC,IAAAC,KAAA,GACIH,MAAA,CAAAI,IAAA,OAAMF,GAAG,CAAC;IArBd;;;;;;IAMiBC,KAAA,CAAAE,WAAW,GAAW,EAAE,CAAC,CAAC;IAE3C;;;;;IAKiBF,KAAA,CAAAG,OAAO,GAAW,EAAE,CAAC,CAAC;IAUnCH,KAAI,CAACE,WAAW,GAAGH,GAAG,CAACG,WAAW;IAClCF,KAAI,CAACG,OAAO,GAAGJ,GAAG,CAACI,OAAO;;EAC9B;EAEA;;;;;;EAMAP,YAAA,CAAAQ,SAAA,CAAAC,OAAO,GAAP;IACI,OAAO,SAAS;EACpB,CAAC;EAED;;;;;;EAMAT,YAAA,CAAAQ,SAAA,CAAAE,cAAc,GAAd;IACI,OAAO,IAAI,CAACJ,WAAW;EAC3B,CAAC;EAED;;;;;EAKAN,YAAA,CAAAQ,SAAA,CAAAG,UAAU,GAAV;IACI,OAAO,IAAI,CAACJ,OAAO;EACvB,CAAC;EAED;;;;;EAKAP,YAAA,CAAAQ,SAAA,CAAAI,aAAa,GAAb;IACI,IAAIN,WAAW,GAAG,IAAI,CAACA,WAAW;MAC9BC,OAAO,GAAG,IAAI,CAACA,OAAO;IAE1B,QAAQD,WAAW;MACf,KAAK,SAAS;QACV,OAAO,8BAA8B,GAAGC,OAAO;MACnD,KAAK,UAAU;QACX,OAAO,mCAAmC,GAAGA,OAAO;MACxD,KAAK,WAAW;QACZ,OAAO,qCAAqC,GAAGA,OAAO;MAC1D,KAAK,QAAQ;QACT,OAAO,6BAA6B,GAAGA,OAAO;MAElD;QACI;QACA,MAAM,IAAIM,KAAK,CAAC,4CAA4C,GAAGP,WAAW,CAAC;;EAEvF,CAAC;EAED;;;;;EAKAN,YAAA,CAAAQ,SAAA,CAAAM,aAAa,GAAb;IACI,OAAO,GAAG,GAAG,IAAI,CAACP,OAAO;EAC7B,CAAC;EACL,OAAAP,YAAC;AAAD,CAAC,CA1FiCD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}