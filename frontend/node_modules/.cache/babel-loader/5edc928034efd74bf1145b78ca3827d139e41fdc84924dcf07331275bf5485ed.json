{"ast":null,"code":"function _toConsumableArray(r) {\n  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\nfunction _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return _arrayLikeToArray(r);\n}\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nimport { bind, last, map, curryN } from 'ramda';\nimport allP from './allP.js';\nimport lengthEq from './lengthEq.js';\nimport lengthGte from './lengthGte.js';\nimport rejectP from './rejectP.js';\nimport resolveP from './resolveP.js';\n\n/**\n * Returns a promise that is fulfilled by the last given promise to be fulfilled,\n * or rejected with an array of rejection reasons if all of the given promises are rejected.\n *\n * @func lastP\n * @memberOf RA\n * @category Function\n * @since {@link https://char0n.github.io/ramda-adjunct/2.23.0|v2.23.0}\n * @sig [Promise a] -> Promise a\n * @param {Iterable.<*>} iterable An iterable object such as an Array or String\n * @return {Promise} A promise that is fulfilled by the last given promise to be fulfilled, or rejected with an array of rejection reasons if all of the given promises are rejected.\n * @see {@link RA.anyP|anyP}\n * @example\n *\n * const delayP = timeout => new Promise(resolve => setTimeout(() => resolve(timeout), timeout));\n * delayP.reject = timeout => new Promise((resolve, reject) => setTimeout(() => reject(timeout), timeout));\n * RA.lastP([\n *   1,\n *   delayP(10),\n *   delayP(100),\n *   delayP.reject(1000),\n * ]); //=> Promise(100)\n */\nvar lastP = curryN(1, function (iterable) {\n  var fulfilled = [];\n  var rejected = [];\n  var onFulfill = bind(fulfilled.push, fulfilled);\n  var onReject = bind(rejected.push, rejected);\n  var listOfPromises = map(function (p) {\n    return resolveP(p).then(onFulfill)[\"catch\"](onReject);\n  }, _toConsumableArray(iterable));\n  return allP(listOfPromises).then(function () {\n    if (lengthEq(0, fulfilled) && lengthEq(0, rejected)) {\n      return undefined;\n    }\n    if (lengthGte(1, fulfilled)) {\n      return last(fulfilled);\n    }\n    return rejectP(rejected);\n  });\n});\nexport default lastP;","map":{"version":3,"names":["_toConsumableArray","r","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","a","_arrayLikeToArray","t","toString","call","slice","constructor","name","Array","from","test","Symbol","iterator","isArray","length","e","n","bind","last","map","curryN","allP","lengthEq","lengthGte","rejectP","resolveP","lastP","iterable","fulfilled","rejected","onFulfill","push","onReject","listOfPromises","p","then","undefined"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/lastP.js"],"sourcesContent":["function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nimport { bind, last, map, curryN } from 'ramda';\nimport allP from './allP.js';\nimport lengthEq from './lengthEq.js';\nimport lengthGte from './lengthGte.js';\nimport rejectP from './rejectP.js';\nimport resolveP from './resolveP.js';\n\n/**\n * Returns a promise that is fulfilled by the last given promise to be fulfilled,\n * or rejected with an array of rejection reasons if all of the given promises are rejected.\n *\n * @func lastP\n * @memberOf RA\n * @category Function\n * @since {@link https://char0n.github.io/ramda-adjunct/2.23.0|v2.23.0}\n * @sig [Promise a] -> Promise a\n * @param {Iterable.<*>} iterable An iterable object such as an Array or String\n * @return {Promise} A promise that is fulfilled by the last given promise to be fulfilled, or rejected with an array of rejection reasons if all of the given promises are rejected.\n * @see {@link RA.anyP|anyP}\n * @example\n *\n * const delayP = timeout => new Promise(resolve => setTimeout(() => resolve(timeout), timeout));\n * delayP.reject = timeout => new Promise((resolve, reject) => setTimeout(() => reject(timeout), timeout));\n * RA.lastP([\n *   1,\n *   delayP(10),\n *   delayP(100),\n *   delayP.reject(1000),\n * ]); //=> Promise(100)\n */\nvar lastP = curryN(1, function (iterable) {\n  var fulfilled = [];\n  var rejected = [];\n  var onFulfill = bind(fulfilled.push, fulfilled);\n  var onReject = bind(rejected.push, rejected);\n  var listOfPromises = map(function (p) {\n    return resolveP(p).then(onFulfill)[\"catch\"](onReject);\n  }, _toConsumableArray(iterable));\n  return allP(listOfPromises).then(function () {\n    if (lengthEq(0, fulfilled) && lengthEq(0, rejected)) {\n      return undefined;\n    }\n    if (lengthGte(1, fulfilled)) {\n      return last(fulfilled);\n    }\n    return rejectP(rejected);\n  });\n});\nexport default lastP;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}