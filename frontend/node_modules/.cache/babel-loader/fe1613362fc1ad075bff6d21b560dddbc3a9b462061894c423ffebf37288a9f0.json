{"ast":null,"code":"import { complement } from 'ramda';\nimport isGeneratorFunction from './isGeneratorFunction.js';\n\n/* eslint-disable max-len */\n/**\n * Checks if input value is complement of `Generator Function`\n *\n * @func isNotGeneratorFunction\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/0.5.0|v0.5.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isFunction|isFunction}, {@link RA.isAsyncFunction|isAsyncFunction}, {@link RA.isGeneratorFunction|isGeneratorFunction}\n * @example\n *\n * RA.isNotGeneratorFunction(function* test() { }); //=> false\n * RA.isNotGeneratorFunction(null); //=> true\n * RA.isNotGeneratorFunction(function test() { }); //=> true\n * RA.isNotGeneratorFunction(() => {}); //=> true\n */\n/* eslint-enable max-len */\nvar isNotGeneratorFunction = complement(isGeneratorFunction);\nexport default isNotGeneratorFunction;","map":{"version":3,"names":["complement","isGeneratorFunction","isNotGeneratorFunction"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/isNotGeneratorFunction.js"],"sourcesContent":["import { complement } from 'ramda';\nimport isGeneratorFunction from './isGeneratorFunction.js';\n\n/* eslint-disable max-len */\n/**\n * Checks if input value is complement of `Generator Function`\n *\n * @func isNotGeneratorFunction\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/0.5.0|v0.5.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isFunction|isFunction}, {@link RA.isAsyncFunction|isAsyncFunction}, {@link RA.isGeneratorFunction|isGeneratorFunction}\n * @example\n *\n * RA.isNotGeneratorFunction(function* test() { }); //=> false\n * RA.isNotGeneratorFunction(null); //=> true\n * RA.isNotGeneratorFunction(function test() { }); //=> true\n * RA.isNotGeneratorFunction(() => {}); //=> true\n */\n/* eslint-enable max-len */\nvar isNotGeneratorFunction = complement(isGeneratorFunction);\nexport default isNotGeneratorFunction;"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,mBAAmB,MAAM,0BAA0B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,sBAAsB,GAAGF,UAAU,CAACC,mBAAmB,CAAC;AAC5D,eAAeC,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}