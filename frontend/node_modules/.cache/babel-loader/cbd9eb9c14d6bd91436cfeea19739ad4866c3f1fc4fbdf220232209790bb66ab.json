{"ast":null,"code":"import parse from \"./parse/index.mjs\";\nconst isEncoded = serverVariableValue => {\n  try {\n    return typeof serverVariableValue === 'string' && decodeURIComponent(serverVariableValue) !== serverVariableValue;\n  } catch {\n    return false;\n  }\n};\nexport const encodeServerVariable = serverVariableValue => {\n  if (isEncoded(serverVariableValue)) {\n    return serverVariableValue;\n  }\n  return encodeURIComponent(serverVariableValue).replace(/%5B/g, '[').replace(/%5D/g, ']');\n};\nconst significantTypes = ['literals', 'server-variable-name'];\nconst substitute = (serverURLTemplate, serverVariables, options = {}) => {\n  const defaultOptions = {\n    encoder: encodeServerVariable\n  };\n  const mergedOptions = {\n    ...defaultOptions,\n    ...options\n  };\n  const parseResult = parse(serverURLTemplate);\n  if (!parseResult.result.success) return serverURLTemplate;\n  const parts = [];\n  parseResult.ast.translate(parts);\n  const substitutedParts = parts.filter(([type]) => significantTypes.includes(type)).map(([type, value]) => {\n    if (type === 'server-variable-name') {\n      return Object.hasOwn(serverVariables, value) ? mergedOptions.encoder(serverVariables[value], value) : `{${value}}`;\n    }\n    return value;\n  });\n  return substitutedParts.join('');\n};\nexport default substitute;","map":{"version":3,"names":["parse","isEncoded","serverVariableValue","decodeURIComponent","encodeServerVariable","encodeURIComponent","replace","significantTypes","substitute","serverURLTemplate","serverVariables","options","defaultOptions","encoder","mergedOptions","parseResult","result","success","parts","ast","translate","substitutedParts","filter","type","includes","map","value","Object","hasOwn","join"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/openapi-server-url-templating/es/substitute.mjs"],"sourcesContent":["import parse from \"./parse/index.mjs\";\nconst isEncoded = serverVariableValue => {\n  try {\n    return typeof serverVariableValue === 'string' && decodeURIComponent(serverVariableValue) !== serverVariableValue;\n  } catch {\n    return false;\n  }\n};\nexport const encodeServerVariable = serverVariableValue => {\n  if (isEncoded(serverVariableValue)) {\n    return serverVariableValue;\n  }\n  return encodeURIComponent(serverVariableValue).replace(/%5B/g, '[').replace(/%5D/g, ']');\n};\nconst significantTypes = ['literals', 'server-variable-name'];\nconst substitute = (serverURLTemplate, serverVariables, options = {}) => {\n  const defaultOptions = {\n    encoder: encodeServerVariable\n  };\n  const mergedOptions = {\n    ...defaultOptions,\n    ...options\n  };\n  const parseResult = parse(serverURLTemplate);\n  if (!parseResult.result.success) return serverURLTemplate;\n  const parts = [];\n  parseResult.ast.translate(parts);\n  const substitutedParts = parts.filter(([type]) => significantTypes.includes(type)).map(([type, value]) => {\n    if (type === 'server-variable-name') {\n      return Object.hasOwn(serverVariables, value) ? mergedOptions.encoder(serverVariables[value], value) : `{${value}}`;\n    }\n    return value;\n  });\n  return substitutedParts.join('');\n};\nexport default substitute;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,mBAAmB;AACrC,MAAMC,SAAS,GAAGC,mBAAmB,IAAI;EACvC,IAAI;IACF,OAAO,OAAOA,mBAAmB,KAAK,QAAQ,IAAIC,kBAAkB,CAACD,mBAAmB,CAAC,KAAKA,mBAAmB;EACnH,CAAC,CAAC,MAAM;IACN,OAAO,KAAK;EACd;AACF,CAAC;AACD,OAAO,MAAME,oBAAoB,GAAGF,mBAAmB,IAAI;EACzD,IAAID,SAAS,CAACC,mBAAmB,CAAC,EAAE;IAClC,OAAOA,mBAAmB;EAC5B;EACA,OAAOG,kBAAkB,CAACH,mBAAmB,CAAC,CAACI,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;AAC1F,CAAC;AACD,MAAMC,gBAAgB,GAAG,CAAC,UAAU,EAAE,sBAAsB,CAAC;AAC7D,MAAMC,UAAU,GAAGA,CAACC,iBAAiB,EAAEC,eAAe,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EACvE,MAAMC,cAAc,GAAG;IACrBC,OAAO,EAAET;EACX,CAAC;EACD,MAAMU,aAAa,GAAG;IACpB,GAAGF,cAAc;IACjB,GAAGD;EACL,CAAC;EACD,MAAMI,WAAW,GAAGf,KAAK,CAACS,iBAAiB,CAAC;EAC5C,IAAI,CAACM,WAAW,CAACC,MAAM,CAACC,OAAO,EAAE,OAAOR,iBAAiB;EACzD,MAAMS,KAAK,GAAG,EAAE;EAChBH,WAAW,CAACI,GAAG,CAACC,SAAS,CAACF,KAAK,CAAC;EAChC,MAAMG,gBAAgB,GAAGH,KAAK,CAACI,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,KAAKhB,gBAAgB,CAACiB,QAAQ,CAACD,IAAI,CAAC,CAAC,CAACE,GAAG,CAAC,CAAC,CAACF,IAAI,EAAEG,KAAK,CAAC,KAAK;IACxG,IAAIH,IAAI,KAAK,sBAAsB,EAAE;MACnC,OAAOI,MAAM,CAACC,MAAM,CAAClB,eAAe,EAAEgB,KAAK,CAAC,GAAGZ,aAAa,CAACD,OAAO,CAACH,eAAe,CAACgB,KAAK,CAAC,EAAEA,KAAK,CAAC,GAAG,IAAIA,KAAK,GAAG;IACpH;IACA,OAAOA,KAAK;EACd,CAAC,CAAC;EACF,OAAOL,gBAAgB,CAACQ,IAAI,CAAC,EAAE,CAAC;AAClC,CAAC;AACD,eAAerB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}