{"ast":null,"code":"import { Mixin } from 'ts-mixer';\nimport { toValue } from '@swagger-api/apidom-core';\nimport ComponentsResponsesElement from \"../../../../elements/nces/ComponentsResponses.mjs\";\nimport MapVisitor from \"../../generics/MapVisitor.mjs\";\nimport FallbackVisitor from \"../../FallbackVisitor.mjs\";\nimport { isReferenceLikeElement } from \"../../../predicates.mjs\";\nimport { isReferenceElement, isResponseElement } from \"../../../../predicates.mjs\";\nclass ResponsesVisitor extends Mixin(MapVisitor, FallbackVisitor) {\n  constructor(options) {\n    super(options);\n    this.element = new ComponentsResponsesElement();\n    this.specPath = element => isReferenceLikeElement(element) ? ['document', 'objects', 'Reference'] : ['document', 'objects', 'Response'];\n  }\n  ObjectElement(objectElement) {\n    const result = MapVisitor.prototype.ObjectElement.call(this, objectElement);\n\n    // decorate every ReferenceElement with metadata about their referencing type\n    // @ts-ignore\n    this.element.filter(isReferenceElement).forEach(referenceElement => {\n      referenceElement.setMetaProperty('referenced-element', 'response');\n    });\n\n    // decorate every ResponseElement with metadata about their status code\n    // @ts-ignore\n    this.element.filter(isResponseElement).forEach((value, key) => {\n      value.setMetaProperty('http-status-code', toValue(key));\n    });\n    return result;\n  }\n}\nexport default ResponsesVisitor;","map":{"version":3,"names":["Mixin","toValue","ComponentsResponsesElement","MapVisitor","FallbackVisitor","isReferenceLikeElement","isReferenceElement","isResponseElement","ResponsesVisitor","constructor","options","element","specPath","ObjectElement","objectElement","result","prototype","call","filter","forEach","referenceElement","setMetaProperty","value","key"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/@swagger-api/apidom-ns-openapi-3-0/es/refractor/visitors/open-api-3-0/components/ResponsesVisitor.mjs"],"sourcesContent":["import { Mixin } from 'ts-mixer';\nimport { toValue } from '@swagger-api/apidom-core';\nimport ComponentsResponsesElement from \"../../../../elements/nces/ComponentsResponses.mjs\";\nimport MapVisitor from \"../../generics/MapVisitor.mjs\";\nimport FallbackVisitor from \"../../FallbackVisitor.mjs\";\nimport { isReferenceLikeElement } from \"../../../predicates.mjs\";\nimport { isReferenceElement, isResponseElement } from \"../../../../predicates.mjs\";\nclass ResponsesVisitor extends Mixin(MapVisitor, FallbackVisitor) {\n  constructor(options) {\n    super(options);\n    this.element = new ComponentsResponsesElement();\n    this.specPath = element => isReferenceLikeElement(element) ? ['document', 'objects', 'Reference'] : ['document', 'objects', 'Response'];\n  }\n  ObjectElement(objectElement) {\n    const result = MapVisitor.prototype.ObjectElement.call(this, objectElement);\n\n    // decorate every ReferenceElement with metadata about their referencing type\n    // @ts-ignore\n    this.element.filter(isReferenceElement).forEach(referenceElement => {\n      referenceElement.setMetaProperty('referenced-element', 'response');\n    });\n\n    // decorate every ResponseElement with metadata about their status code\n    // @ts-ignore\n    this.element.filter(isResponseElement).forEach((value, key) => {\n      value.setMetaProperty('http-status-code', toValue(key));\n    });\n    return result;\n  }\n}\nexport default ResponsesVisitor;"],"mappings":"AAAA,SAASA,KAAK,QAAQ,UAAU;AAChC,SAASC,OAAO,QAAQ,0BAA0B;AAClD,OAAOC,0BAA0B,MAAM,mDAAmD;AAC1F,OAAOC,UAAU,MAAM,+BAA+B;AACtD,OAAOC,eAAe,MAAM,2BAA2B;AACvD,SAASC,sBAAsB,QAAQ,yBAAyB;AAChE,SAASC,kBAAkB,EAAEC,iBAAiB,QAAQ,4BAA4B;AAClF,MAAMC,gBAAgB,SAASR,KAAK,CAACG,UAAU,EAAEC,eAAe,CAAC,CAAC;EAChEK,WAAWA,CAACC,OAAO,EAAE;IACnB,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,OAAO,GAAG,IAAIT,0BAA0B,CAAC,CAAC;IAC/C,IAAI,CAACU,QAAQ,GAAGD,OAAO,IAAIN,sBAAsB,CAACM,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,SAAS,EAAE,WAAW,CAAC,GAAG,CAAC,UAAU,EAAE,SAAS,EAAE,UAAU,CAAC;EACzI;EACAE,aAAaA,CAACC,aAAa,EAAE;IAC3B,MAAMC,MAAM,GAAGZ,UAAU,CAACa,SAAS,CAACH,aAAa,CAACI,IAAI,CAAC,IAAI,EAAEH,aAAa,CAAC;;IAE3E;IACA;IACA,IAAI,CAACH,OAAO,CAACO,MAAM,CAACZ,kBAAkB,CAAC,CAACa,OAAO,CAACC,gBAAgB,IAAI;MAClEA,gBAAgB,CAACC,eAAe,CAAC,oBAAoB,EAAE,UAAU,CAAC;IACpE,CAAC,CAAC;;IAEF;IACA;IACA,IAAI,CAACV,OAAO,CAACO,MAAM,CAACX,iBAAiB,CAAC,CAACY,OAAO,CAAC,CAACG,KAAK,EAAEC,GAAG,KAAK;MAC7DD,KAAK,CAACD,eAAe,CAAC,kBAAkB,EAAEpB,OAAO,CAACsB,GAAG,CAAC,CAAC;IACzD,CAAC,CAAC;IACF,OAAOR,MAAM;EACf;AACF;AACA,eAAeP,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}