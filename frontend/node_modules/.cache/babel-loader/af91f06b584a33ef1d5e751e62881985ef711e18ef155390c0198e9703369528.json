{"ast":null,"code":"import { T as stubTrue } from 'ramda';\nimport { isReferenceElement } from \"../../../../predicates.mjs\";\nimport { isReferenceLikeElement } from \"../../../predicates.mjs\";\nimport AlternatingVisitor from \"../../generics/AlternatingVisitor.mjs\";\nclass RequestBodyVisitor extends AlternatingVisitor {\n  constructor(options) {\n    super(options);\n    this.alternator = [{\n      predicate: isReferenceLikeElement,\n      specPath: ['document', 'objects', 'Reference']\n    }, {\n      predicate: stubTrue,\n      specPath: ['document', 'objects', 'RequestBody']\n    }];\n  }\n  ObjectElement(objectElement) {\n    const result = AlternatingVisitor.prototype.enter.call(this, objectElement);\n    if (isReferenceElement(this.element)) {\n      this.element.setMetaProperty('referenced-element', 'requestBody');\n    }\n    return result;\n  }\n}\nexport default RequestBodyVisitor;","map":{"version":3,"names":["T","stubTrue","isReferenceElement","isReferenceLikeElement","AlternatingVisitor","RequestBodyVisitor","constructor","options","alternator","predicate","specPath","ObjectElement","objectElement","result","prototype","enter","call","element","setMetaProperty"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/@swagger-api/apidom-ns-openapi-3-0/es/refractor/visitors/open-api-3-0/operation/RequestBodyVisitor.mjs"],"sourcesContent":["import { T as stubTrue } from 'ramda';\nimport { isReferenceElement } from \"../../../../predicates.mjs\";\nimport { isReferenceLikeElement } from \"../../../predicates.mjs\";\nimport AlternatingVisitor from \"../../generics/AlternatingVisitor.mjs\";\nclass RequestBodyVisitor extends AlternatingVisitor {\n  constructor(options) {\n    super(options);\n    this.alternator = [{\n      predicate: isReferenceLikeElement,\n      specPath: ['document', 'objects', 'Reference']\n    }, {\n      predicate: stubTrue,\n      specPath: ['document', 'objects', 'RequestBody']\n    }];\n  }\n  ObjectElement(objectElement) {\n    const result = AlternatingVisitor.prototype.enter.call(this, objectElement);\n    if (isReferenceElement(this.element)) {\n      this.element.setMetaProperty('referenced-element', 'requestBody');\n    }\n    return result;\n  }\n}\nexport default RequestBodyVisitor;"],"mappings":"AAAA,SAASA,CAAC,IAAIC,QAAQ,QAAQ,OAAO;AACrC,SAASC,kBAAkB,QAAQ,4BAA4B;AAC/D,SAASC,sBAAsB,QAAQ,yBAAyB;AAChE,OAAOC,kBAAkB,MAAM,uCAAuC;AACtE,MAAMC,kBAAkB,SAASD,kBAAkB,CAAC;EAClDE,WAAWA,CAACC,OAAO,EAAE;IACnB,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,UAAU,GAAG,CAAC;MACjBC,SAAS,EAAEN,sBAAsB;MACjCO,QAAQ,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,WAAW;IAC/C,CAAC,EAAE;MACDD,SAAS,EAAER,QAAQ;MACnBS,QAAQ,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,aAAa;IACjD,CAAC,CAAC;EACJ;EACAC,aAAaA,CAACC,aAAa,EAAE;IAC3B,MAAMC,MAAM,GAAGT,kBAAkB,CAACU,SAAS,CAACC,KAAK,CAACC,IAAI,CAAC,IAAI,EAAEJ,aAAa,CAAC;IAC3E,IAAIV,kBAAkB,CAAC,IAAI,CAACe,OAAO,CAAC,EAAE;MACpC,IAAI,CAACA,OAAO,CAACC,eAAe,CAAC,oBAAoB,EAAE,aAAa,CAAC;IACnE;IACA,OAAOL,MAAM;EACf;AACF;AACA,eAAeR,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}