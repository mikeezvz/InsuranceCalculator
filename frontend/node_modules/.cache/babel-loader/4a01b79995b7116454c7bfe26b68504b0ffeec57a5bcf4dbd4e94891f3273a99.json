{"ast":null,"code":"import { includes, curry, addIndex, reject } from 'ramda';\n\n// helpers\nvar rejectIndexed = addIndex(reject);\nvar containsIndex = curry(function (indexes, val, index) {\n  return includes(index, indexes);\n});\n\n/**\n * Returns a partial copy of an array omitting the indexes specified.\n *\n * @func omitIndexes\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.19.0|v1.19.0}\n * @category List\n * @sig [Int] -> [a] -> [a]\n * @see {@link http://ramdajs.com/docs/#omit|R.omit}, {@link RA.pickIndexes|pickIndexes}\n * @param {!Array} indexes The array of indexes to omit from the new array\n * @param {!Array} list The array to copy from\n * @return {!Array} The new array with omitted indexes\n * @example\n *\n * RA.omitIndexes([-1, 1, 3], ['a', 'b', 'c', 'd']); //=> ['a', 'c']\n */\nvar omitIndexes = curry(function (indexes, list) {\n  return rejectIndexed(containsIndex(indexes), list);\n});\nexport default omitIndexes;","map":{"version":3,"names":["includes","curry","addIndex","reject","rejectIndexed","containsIndex","indexes","val","index","omitIndexes","list"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/omitIndexes.js"],"sourcesContent":["import { includes, curry, addIndex, reject } from 'ramda';\n\n// helpers\nvar rejectIndexed = addIndex(reject);\nvar containsIndex = curry(function (indexes, val, index) {\n  return includes(index, indexes);\n});\n\n/**\n * Returns a partial copy of an array omitting the indexes specified.\n *\n * @func omitIndexes\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.19.0|v1.19.0}\n * @category List\n * @sig [Int] -> [a] -> [a]\n * @see {@link http://ramdajs.com/docs/#omit|R.omit}, {@link RA.pickIndexes|pickIndexes}\n * @param {!Array} indexes The array of indexes to omit from the new array\n * @param {!Array} list The array to copy from\n * @return {!Array} The new array with omitted indexes\n * @example\n *\n * RA.omitIndexes([-1, 1, 3], ['a', 'b', 'c', 'd']); //=> ['a', 'c']\n */\nvar omitIndexes = curry(function (indexes, list) {\n  return rejectIndexed(containsIndex(indexes), list);\n});\nexport default omitIndexes;"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;;AAEzD;AACA,IAAIC,aAAa,GAAGF,QAAQ,CAACC,MAAM,CAAC;AACpC,IAAIE,aAAa,GAAGJ,KAAK,CAAC,UAAUK,OAAO,EAAEC,GAAG,EAAEC,KAAK,EAAE;EACvD,OAAOR,QAAQ,CAACQ,KAAK,EAAEF,OAAO,CAAC;AACjC,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIG,WAAW,GAAGR,KAAK,CAAC,UAAUK,OAAO,EAAEI,IAAI,EAAE;EAC/C,OAAON,aAAa,CAACC,aAAa,CAACC,OAAO,CAAC,EAAEI,IAAI,CAAC;AACpD,CAAC,CAAC;AACF,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}