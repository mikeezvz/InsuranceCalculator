{"ast":null,"code":"import parse from \"./parse/index.mjs\";\n/**\n * Test if a string is a path template.\n *\n * @param {string} pathTemplate\n * @param {Object} [options={}] - An object.\n * @param {boolean} [options.strict=true] - A boolean indicating presence of at least one `template-expression` AST node.\n * @returns {boolean}\n */\nconst test = (pathTemplate, {\n  strict = false\n} = {}) => {\n  try {\n    const parseResult = parse(pathTemplate);\n    if (!parseResult.result.success) return false;\n    if (!strict) return true;\n    const parts = [];\n    parseResult.ast.translate(parts);\n    return parts.some(([type]) => type === 'template-expression');\n  } catch {\n    return false;\n  }\n};\nexport default test;","map":{"version":3,"names":["parse","test","pathTemplate","strict","parseResult","result","success","parts","ast","translate","some","type"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/openapi-path-templating/es/test.mjs"],"sourcesContent":["import parse from \"./parse/index.mjs\";\n/**\n * Test if a string is a path template.\n *\n * @param {string} pathTemplate\n * @param {Object} [options={}] - An object.\n * @param {boolean} [options.strict=true] - A boolean indicating presence of at least one `template-expression` AST node.\n * @returns {boolean}\n */\nconst test = (pathTemplate, {\n  strict = false\n} = {}) => {\n  try {\n    const parseResult = parse(pathTemplate);\n    if (!parseResult.result.success) return false;\n    if (!strict) return true;\n    const parts = [];\n    parseResult.ast.translate(parts);\n    return parts.some(([type]) => type === 'template-expression');\n  } catch {\n    return false;\n  }\n};\nexport default test;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,IAAI,GAAGA,CAACC,YAAY,EAAE;EAC1BC,MAAM,GAAG;AACX,CAAC,GAAG,CAAC,CAAC,KAAK;EACT,IAAI;IACF,MAAMC,WAAW,GAAGJ,KAAK,CAACE,YAAY,CAAC;IACvC,IAAI,CAACE,WAAW,CAACC,MAAM,CAACC,OAAO,EAAE,OAAO,KAAK;IAC7C,IAAI,CAACH,MAAM,EAAE,OAAO,IAAI;IACxB,MAAMI,KAAK,GAAG,EAAE;IAChBH,WAAW,CAACI,GAAG,CAACC,SAAS,CAACF,KAAK,CAAC;IAChC,OAAOA,KAAK,CAACG,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,KAAKA,IAAI,KAAK,qBAAqB,CAAC;EAC/D,CAAC,CAAC,MAAM;IACN,OAAO,KAAK;EACd;AACF,CAAC;AACD,eAAeV,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}