{"ast":null,"code":"import { Mixin } from 'ts-mixer';\nimport { always } from 'ramda';\nimport { isStringElement, cloneDeep, toValue } from '@swagger-api/apidom-core';\nimport PathItemElement from \"../../../../elements/PathItem.mjs\";\nimport { isOperationElement } from \"../../../../predicates.mjs\";\nimport FixedFieldsVisitor from \"../../generics/FixedFieldsVisitor.mjs\";\nimport FallbackVisitor from \"../../FallbackVisitor.mjs\";\nclass PathItemVisitor extends Mixin(FixedFieldsVisitor, FallbackVisitor) {\n  constructor(options) {\n    super(options);\n    this.element = new PathItemElement();\n    this.specPath = always(['document', 'objects', 'PathItem']);\n  }\n  ObjectElement(objectElement) {\n    const result = FixedFieldsVisitor.prototype.ObjectElement.call(this, objectElement);\n\n    // decorate Operation elements with HTTP method\n    this.element.filter(isOperationElement)\n    // @ts-ignore\n    .forEach((operationElement, httpMethodElementCI) => {\n      const httpMethodElementCS = cloneDeep(httpMethodElementCI);\n      httpMethodElementCS.content = toValue(httpMethodElementCS).toUpperCase();\n      operationElement.setMetaProperty('http-method', httpMethodElementCS);\n    });\n\n    // mark this PathItemElement with reference metadata\n    if (isStringElement(this.element.$ref)) {\n      this.element.classes.push('reference-element');\n    }\n    return result;\n  }\n}\nexport default PathItemVisitor;","map":{"version":3,"names":["Mixin","always","isStringElement","cloneDeep","toValue","PathItemElement","isOperationElement","FixedFieldsVisitor","FallbackVisitor","PathItemVisitor","constructor","options","element","specPath","ObjectElement","objectElement","result","prototype","call","filter","forEach","operationElement","httpMethodElementCI","httpMethodElementCS","content","toUpperCase","setMetaProperty","$ref","classes","push"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/@swagger-api/apidom-ns-openapi-3-0/es/refractor/visitors/open-api-3-0/path-item/index.mjs"],"sourcesContent":["import { Mixin } from 'ts-mixer';\nimport { always } from 'ramda';\nimport { isStringElement, cloneDeep, toValue } from '@swagger-api/apidom-core';\nimport PathItemElement from \"../../../../elements/PathItem.mjs\";\nimport { isOperationElement } from \"../../../../predicates.mjs\";\nimport FixedFieldsVisitor from \"../../generics/FixedFieldsVisitor.mjs\";\nimport FallbackVisitor from \"../../FallbackVisitor.mjs\";\nclass PathItemVisitor extends Mixin(FixedFieldsVisitor, FallbackVisitor) {\n  constructor(options) {\n    super(options);\n    this.element = new PathItemElement();\n    this.specPath = always(['document', 'objects', 'PathItem']);\n  }\n  ObjectElement(objectElement) {\n    const result = FixedFieldsVisitor.prototype.ObjectElement.call(this, objectElement);\n\n    // decorate Operation elements with HTTP method\n    this.element.filter(isOperationElement)\n    // @ts-ignore\n    .forEach((operationElement, httpMethodElementCI) => {\n      const httpMethodElementCS = cloneDeep(httpMethodElementCI);\n      httpMethodElementCS.content = toValue(httpMethodElementCS).toUpperCase();\n      operationElement.setMetaProperty('http-method', httpMethodElementCS);\n    });\n\n    // mark this PathItemElement with reference metadata\n    if (isStringElement(this.element.$ref)) {\n      this.element.classes.push('reference-element');\n    }\n    return result;\n  }\n}\nexport default PathItemVisitor;"],"mappings":"AAAA,SAASA,KAAK,QAAQ,UAAU;AAChC,SAASC,MAAM,QAAQ,OAAO;AAC9B,SAASC,eAAe,EAAEC,SAAS,EAAEC,OAAO,QAAQ,0BAA0B;AAC9E,OAAOC,eAAe,MAAM,mCAAmC;AAC/D,SAASC,kBAAkB,QAAQ,4BAA4B;AAC/D,OAAOC,kBAAkB,MAAM,uCAAuC;AACtE,OAAOC,eAAe,MAAM,2BAA2B;AACvD,MAAMC,eAAe,SAAST,KAAK,CAACO,kBAAkB,EAAEC,eAAe,CAAC,CAAC;EACvEE,WAAWA,CAACC,OAAO,EAAE;IACnB,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,OAAO,GAAG,IAAIP,eAAe,CAAC,CAAC;IACpC,IAAI,CAACQ,QAAQ,GAAGZ,MAAM,CAAC,CAAC,UAAU,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;EAC7D;EACAa,aAAaA,CAACC,aAAa,EAAE;IAC3B,MAAMC,MAAM,GAAGT,kBAAkB,CAACU,SAAS,CAACH,aAAa,CAACI,IAAI,CAAC,IAAI,EAAEH,aAAa,CAAC;;IAEnF;IACA,IAAI,CAACH,OAAO,CAACO,MAAM,CAACb,kBAAkB;IACtC;IAAA,CACCc,OAAO,CAAC,CAACC,gBAAgB,EAAEC,mBAAmB,KAAK;MAClD,MAAMC,mBAAmB,GAAGpB,SAAS,CAACmB,mBAAmB,CAAC;MAC1DC,mBAAmB,CAACC,OAAO,GAAGpB,OAAO,CAACmB,mBAAmB,CAAC,CAACE,WAAW,CAAC,CAAC;MACxEJ,gBAAgB,CAACK,eAAe,CAAC,aAAa,EAAEH,mBAAmB,CAAC;IACtE,CAAC,CAAC;;IAEF;IACA,IAAIrB,eAAe,CAAC,IAAI,CAACU,OAAO,CAACe,IAAI,CAAC,EAAE;MACtC,IAAI,CAACf,OAAO,CAACgB,OAAO,CAACC,IAAI,CAAC,mBAAmB,CAAC;IAChD;IACA,OAAOb,MAAM;EACf;AACF;AACA,eAAeP,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}