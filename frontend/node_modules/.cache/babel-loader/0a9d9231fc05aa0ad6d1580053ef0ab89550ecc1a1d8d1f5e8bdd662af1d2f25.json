{"ast":null,"code":"import { __, append, identity, useWith } from 'ramda';\nimport sortByProps from './sortByProps.js';\n\n/**\n * Sort a list of objects by a property.\n *\n * @func sortByProp\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/3.4.0|v3.4.0}\n * @category List\n * @sig k -> [{k: v}] -> [{k: v}]\n * @param {Array.<string>} prop The property in the list param to sort by\n * @param {Array.<object>} list A list of objects to be sorted\n * @return {Array.<object>} A new list sorted by the property in the prop param\n * @example\n *\n * // sorting list of tuples\n * const sortByFirstItem = sortByProp(0);\n * const listOfTuples = [[-1, 1], [-2, 2], [-3, 3]];\n * sortByFirstItem(listOfTuples); // => [[-3, 3], [-2, 2], [-1, 1]]\n *\n * // sorting list of objects\n * const sortByName = sortByProp('name');\n * const alice = {\n *   name: 'ALICE',\n *   age: 101,\n * };\n * const bob = {\n *   name: 'Bob',\n *   age: -10,\n * };\n * const clara = {\n *   name: 'clara',\n *   age: 314.159,\n * };\n * const people = [clara, bob, alice];\n * sortByName(people); // => [alice, bob, clara]\n */\n\nvar addValueInAnArray = append(__, []);\nvar sortByProp = useWith(sortByProps, [addValueInAnArray, identity]);\nexport default sortByProp;","map":{"version":3,"names":["__","append","identity","useWith","sortByProps","addValueInAnArray","sortByProp"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/sortByProp.js"],"sourcesContent":["import { __, append, identity, useWith } from 'ramda';\nimport sortByProps from './sortByProps.js';\n\n/**\n * Sort a list of objects by a property.\n *\n * @func sortByProp\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/3.4.0|v3.4.0}\n * @category List\n * @sig k -> [{k: v}] -> [{k: v}]\n * @param {Array.<string>} prop The property in the list param to sort by\n * @param {Array.<object>} list A list of objects to be sorted\n * @return {Array.<object>} A new list sorted by the property in the prop param\n * @example\n *\n * // sorting list of tuples\n * const sortByFirstItem = sortByProp(0);\n * const listOfTuples = [[-1, 1], [-2, 2], [-3, 3]];\n * sortByFirstItem(listOfTuples); // => [[-3, 3], [-2, 2], [-1, 1]]\n *\n * // sorting list of objects\n * const sortByName = sortByProp('name');\n * const alice = {\n *   name: 'ALICE',\n *   age: 101,\n * };\n * const bob = {\n *   name: 'Bob',\n *   age: -10,\n * };\n * const clara = {\n *   name: 'clara',\n *   age: 314.159,\n * };\n * const people = [clara, bob, alice];\n * sortByName(people); // => [alice, bob, clara]\n */\n\nvar addValueInAnArray = append(__, []);\nvar sortByProp = useWith(sortByProps, [addValueInAnArray, identity]);\nexport default sortByProp;"],"mappings":"AAAA,SAASA,EAAE,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACrD,OAAOC,WAAW,MAAM,kBAAkB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,iBAAiB,GAAGJ,MAAM,CAACD,EAAE,EAAE,EAAE,CAAC;AACtC,IAAIM,UAAU,GAAGH,OAAO,CAACC,WAAW,EAAE,CAACC,iBAAiB,EAAEH,QAAQ,CAAC,CAAC;AACpE,eAAeI,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}