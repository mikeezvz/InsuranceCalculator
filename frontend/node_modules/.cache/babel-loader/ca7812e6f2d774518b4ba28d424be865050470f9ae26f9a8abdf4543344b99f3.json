{"ast":null,"code":"import { bind } from 'ramda';\n\n/**\n * Composable shortcut for `Promise.reject`.\n *\n * Returns a Promise object that is rejected with the given reason.\n *\n * @func rejectP\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.16.0|v1.16.0}\n * @category Function\n * @sig a -> Promise a\n * @param {*} [reason=undefined] Reason why this Promise rejected\n * @return {Promise} A Promise that is rejected with the given reason\n * @see {@link RA.resolveP|resolveP}\n * @example\n *\n * RA.rejectP(); //=> Promise(undefined)\n * RA.rejectP('a'); //=> Promise('a')\n * RA.rejectP([1, 2, 3]); //=> Promise([1, 2, 3])\n */\nvar rejectP = bind(Promise.reject, Promise);\nexport default rejectP;","map":{"version":3,"names":["bind","rejectP","Promise","reject"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/rejectP.js"],"sourcesContent":["import { bind } from 'ramda';\n\n/**\n * Composable shortcut for `Promise.reject`.\n *\n * Returns a Promise object that is rejected with the given reason.\n *\n * @func rejectP\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.16.0|v1.16.0}\n * @category Function\n * @sig a -> Promise a\n * @param {*} [reason=undefined] Reason why this Promise rejected\n * @return {Promise} A Promise that is rejected with the given reason\n * @see {@link RA.resolveP|resolveP}\n * @example\n *\n * RA.rejectP(); //=> Promise(undefined)\n * RA.rejectP('a'); //=> Promise('a')\n * RA.rejectP([1, 2, 3]); //=> Promise([1, 2, 3])\n */\nvar rejectP = bind(Promise.reject, Promise);\nexport default rejectP;"],"mappings":"AAAA,SAASA,IAAI,QAAQ,OAAO;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,OAAO,GAAGD,IAAI,CAACE,OAAO,CAACC,MAAM,EAAED,OAAO,CAAC;AAC3C,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}