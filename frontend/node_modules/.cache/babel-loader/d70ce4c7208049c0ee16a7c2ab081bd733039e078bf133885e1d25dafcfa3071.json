{"ast":null,"code":"import isArrayLike from '../isArrayLike.js';\n\n/**\n * `makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @func makeFlat\n * @memberOf RA\n *\n * @category List\n * @param {!bool} = should recursively flatten\n * @param {!Array} = the nested list to be flattened\n * @return {!Array} = the flattened list\n * @sig Bool -> List -> List\n *\n */\nvar makeFlat = function makeFlat(recursive) {\n  return function flatt(list) {\n    var value;\n    var jlen;\n    var j;\n    var result = [];\n    var idx = 0;\n    while (idx < list.length) {\n      if (isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n};\nexport default makeFlat;","map":{"version":3,"names":["isArrayLike","makeFlat","recursive","flatt","list","value","jlen","j","result","idx","length"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/internal/makeFlat.js"],"sourcesContent":["import isArrayLike from '../isArrayLike.js';\n\n/**\n * `makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @func makeFlat\n * @memberOf RA\n *\n * @category List\n * @param {!bool} = should recursively flatten\n * @param {!Array} = the nested list to be flattened\n * @return {!Array} = the flattened list\n * @sig Bool -> List -> List\n *\n */\nvar makeFlat = function makeFlat(recursive) {\n  return function flatt(list) {\n    var value;\n    var jlen;\n    var j;\n    var result = [];\n    var idx = 0;\n    while (idx < list.length) {\n      if (isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n};\nexport default makeFlat;"],"mappings":"AAAA,OAAOA,WAAW,MAAM,mBAAmB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,QAAQ,GAAG,SAASA,QAAQA,CAACC,SAAS,EAAE;EAC1C,OAAO,SAASC,KAAKA,CAACC,IAAI,EAAE;IAC1B,IAAIC,KAAK;IACT,IAAIC,IAAI;IACR,IAAIC,CAAC;IACL,IAAIC,MAAM,GAAG,EAAE;IACf,IAAIC,GAAG,GAAG,CAAC;IACX,OAAOA,GAAG,GAAGL,IAAI,CAACM,MAAM,EAAE;MACxB,IAAIV,WAAW,CAACI,IAAI,CAACK,GAAG,CAAC,CAAC,EAAE;QAC1BJ,KAAK,GAAGH,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACK,GAAG,CAAC,CAAC,GAAGL,IAAI,CAACK,GAAG,CAAC;QAChDF,CAAC,GAAG,CAAC;QACLD,IAAI,GAAGD,KAAK,CAACK,MAAM;QACnB,OAAOH,CAAC,GAAGD,IAAI,EAAE;UACfE,MAAM,CAACA,MAAM,CAACE,MAAM,CAAC,GAAGL,KAAK,CAACE,CAAC,CAAC;UAChCA,CAAC,IAAI,CAAC;QACR;MACF,CAAC,MAAM;QACLC,MAAM,CAACA,MAAM,CAACE,MAAM,CAAC,GAAGN,IAAI,CAACK,GAAG,CAAC;MACnC;MACAA,GAAG,IAAI,CAAC;IACV;IACA,OAAOD,MAAM;EACf,CAAC;AACH,CAAC;AACD,eAAeP,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}