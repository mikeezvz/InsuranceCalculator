{"ast":null,"code":"import { uniqWith, identical, pipe, curryN } from 'ramda';\nimport lengthLte from './lengthLte.js';\n\n/**\n * Returns true if all items in the list are equivalent using `R.identical` for equality comparisons.\n *\n * @func allIdentical\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.11.0|v2.11.0}\n * @category List\n * @sig [a] -> Boolean\n * @param {Array} list The list of values\n * @return {boolean}\n * @see {@link https://ramdajs.com/docs/#identical|identical}\n * @example\n *\n * RA.allIdentical([ 1, 2, 3, 4 ]); //=> false\n * RA.allIdentical([ 1, 1, 1, 1 ]); //=> true\n * RA.allIdentical([]); //=> true\n * RA.allIdentical([ {}, {} ]); //=> false\n * RA.allIdentical([ () => {}, () => {} ]); //=> false\n */\nvar allIdentical = curryN(1, pipe(uniqWith(identical), lengthLte(1)));\nexport default allIdentical;","map":{"version":3,"names":["uniqWith","identical","pipe","curryN","lengthLte","allIdentical"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/allIdentical.js"],"sourcesContent":["import { uniqWith, identical, pipe, curryN } from 'ramda';\nimport lengthLte from './lengthLte.js';\n\n/**\n * Returns true if all items in the list are equivalent using `R.identical` for equality comparisons.\n *\n * @func allIdentical\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.11.0|v2.11.0}\n * @category List\n * @sig [a] -> Boolean\n * @param {Array} list The list of values\n * @return {boolean}\n * @see {@link https://ramdajs.com/docs/#identical|identical}\n * @example\n *\n * RA.allIdentical([ 1, 2, 3, 4 ]); //=> false\n * RA.allIdentical([ 1, 1, 1, 1 ]); //=> true\n * RA.allIdentical([]); //=> true\n * RA.allIdentical([ {}, {} ]); //=> false\n * RA.allIdentical([ () => {}, () => {} ]); //=> false\n */\nvar allIdentical = curryN(1, pipe(uniqWith(identical), lengthLte(1)));\nexport default allIdentical;"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,IAAI,EAAEC,MAAM,QAAQ,OAAO;AACzD,OAAOC,SAAS,MAAM,gBAAgB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,YAAY,GAAGF,MAAM,CAAC,CAAC,EAAED,IAAI,CAACF,QAAQ,CAACC,SAAS,CAAC,EAAEG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,eAAeC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}