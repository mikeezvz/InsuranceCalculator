{"ast":null,"code":"import { divide, flip } from 'ramda';\n\n/**\n * Divides two numbers, where the second number is divided by the first number.\n *\n * @func divideNum\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.22.0|v2.22.0}\n * @category Math\n * @sig Number -> Number -> Number\n * @param {number} divisor the number to divide by\n * @param {number} dividend the number to divide\n * @return {number} A number representing the quotient of dividing the dividend by the divisor\n * @example\n *\n * RA.divideNum(2, 1); //=> 0.5\n */\nvar divideNum = flip(divide);\nexport default divideNum;","map":{"version":3,"names":["divide","flip","divideNum"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/divideNum.js"],"sourcesContent":["import { divide, flip } from 'ramda';\n\n/**\n * Divides two numbers, where the second number is divided by the first number.\n *\n * @func divideNum\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.22.0|v2.22.0}\n * @category Math\n * @sig Number -> Number -> Number\n * @param {number} divisor the number to divide by\n * @param {number} dividend the number to divide\n * @return {number} A number representing the quotient of dividing the dividend by the divisor\n * @example\n *\n * RA.divideNum(2, 1); //=> 0.5\n */\nvar divideNum = flip(divide);\nexport default divideNum;"],"mappings":"AAAA,SAASA,MAAM,EAAEC,IAAI,QAAQ,OAAO;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,SAAS,GAAGD,IAAI,CAACD,MAAM,CAAC;AAC5B,eAAeE,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}