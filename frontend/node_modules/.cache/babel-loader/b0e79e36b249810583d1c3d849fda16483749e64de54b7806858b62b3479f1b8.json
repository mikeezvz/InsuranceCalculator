{"ast":null,"code":"import { pipe, isNotEmpty, intersection, isEmpty, curryN } from 'ramda';\n\n/**\n * Returns true if two lists have at least one element common to both lists.\n *\n * @func overlaps\n * @memberOf RA\n * @category Relation\n * @since {@link https://char0n.github.io/ramda-adjunct/2.30.0|v2.30.0}\n * @sig [a] -> [a] -> Boolean\n * @param {Array} list1 The first list\n * @param {Array} list2 The second list\n * @return {boolean} True if two lists have at least one element common to both lists\n * @example\n *\n * RA.overlaps(['-v', '--verbose'], ['node', 'script.js', '-v']); //=> true\n * RA.overlaps(['-v', '--verbose'], []); //=> false\n * RA.overlaps([1, 2, 3], [3, 4, 5]); //=> true\n * RA.overlaps([1, 2, 3], [4, 5]); //=> false\n */\n\nvar overlaps = curryN(2, function (list1, list2) {\n  if (isEmpty(list1)) {\n    return true;\n  }\n  return pipe(intersection, isNotEmpty)(list1, list2);\n});\nexport default overlaps;","map":{"version":3,"names":["pipe","isNotEmpty","intersection","isEmpty","curryN","overlaps","list1","list2"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/overlaps.js"],"sourcesContent":["import { pipe, isNotEmpty, intersection, isEmpty, curryN } from 'ramda';\n\n/**\n * Returns true if two lists have at least one element common to both lists.\n *\n * @func overlaps\n * @memberOf RA\n * @category Relation\n * @since {@link https://char0n.github.io/ramda-adjunct/2.30.0|v2.30.0}\n * @sig [a] -> [a] -> Boolean\n * @param {Array} list1 The first list\n * @param {Array} list2 The second list\n * @return {boolean} True if two lists have at least one element common to both lists\n * @example\n *\n * RA.overlaps(['-v', '--verbose'], ['node', 'script.js', '-v']); //=> true\n * RA.overlaps(['-v', '--verbose'], []); //=> false\n * RA.overlaps([1, 2, 3], [3, 4, 5]); //=> true\n * RA.overlaps([1, 2, 3], [4, 5]); //=> false\n */\n\nvar overlaps = curryN(2, function (list1, list2) {\n  if (isEmpty(list1)) {\n    return true;\n  }\n  return pipe(intersection, isNotEmpty)(list1, list2);\n});\nexport default overlaps;"],"mappings":"AAAA,SAASA,IAAI,EAAEC,UAAU,EAAEC,YAAY,EAAEC,OAAO,EAAEC,MAAM,QAAQ,OAAO;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,QAAQ,GAAGD,MAAM,CAAC,CAAC,EAAE,UAAUE,KAAK,EAAEC,KAAK,EAAE;EAC/C,IAAIJ,OAAO,CAACG,KAAK,CAAC,EAAE;IAClB,OAAO,IAAI;EACb;EACA,OAAON,IAAI,CAACE,YAAY,EAAED,UAAU,CAAC,CAACK,KAAK,EAAEC,KAAK,CAAC;AACrD,CAAC,CAAC;AACF,eAAeF,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}