{"ast":null,"code":"import { complement } from 'ramda';\nimport isTruthy from './isTruthy.js';\n\n/**\n * A falsy value is a value that translates to false when evaluated in a Boolean context.\n * Falsy values are `false`, `0`, `\"\"`, `null`, `undefined`, and `NaN`.\n *\n * @func isFalsy\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.2.0|v2.2..0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link https://developer.mozilla.org/en-US/docs/Glossary/Falsy|falsy}, {@link RA.isTruthy|isTruthy}\n * @example\n *\n * RA.isFalsy(false); // => true\n * RA.isFalsy(0); // => true\n * RA.isFalsy(''); // => true\n * RA.isFalsy(null); // => true\n * RA.isFalsy(undefined); // => true\n * RA.isFalsy(NaN); // => true\n */\nvar isFalsy = complement(isTruthy);\nexport default isFalsy;","map":{"version":3,"names":["complement","isTruthy","isFalsy"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/isFalsy.js"],"sourcesContent":["import { complement } from 'ramda';\nimport isTruthy from './isTruthy.js';\n\n/**\n * A falsy value is a value that translates to false when evaluated in a Boolean context.\n * Falsy values are `false`, `0`, `\"\"`, `null`, `undefined`, and `NaN`.\n *\n * @func isFalsy\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.2.0|v2.2..0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link https://developer.mozilla.org/en-US/docs/Glossary/Falsy|falsy}, {@link RA.isTruthy|isTruthy}\n * @example\n *\n * RA.isFalsy(false); // => true\n * RA.isFalsy(0); // => true\n * RA.isFalsy(''); // => true\n * RA.isFalsy(null); // => true\n * RA.isFalsy(undefined); // => true\n * RA.isFalsy(NaN); // => true\n */\nvar isFalsy = complement(isTruthy);\nexport default isFalsy;"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,QAAQ,MAAM,eAAe;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,OAAO,GAAGF,UAAU,CAACC,QAAQ,CAAC;AAClC,eAAeC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}