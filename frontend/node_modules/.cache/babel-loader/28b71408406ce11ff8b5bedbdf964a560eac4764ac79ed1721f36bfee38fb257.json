{"ast":null,"code":"import _xfBase from \"./_xfBase.js\";\nvar XDropRepeatsWith = /*#__PURE__*/function () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n  return XDropRepeatsWith;\n}();\nexport default function _xdropRepeatsWith(pred) {\n  return function (xf) {\n    return new XDropRepeatsWith(pred, xf);\n  };\n}","map":{"version":3,"names":["_xfBase","XDropRepeatsWith","pred","xf","lastValue","undefined","seenFirstValue","prototype","init","result","input","sameAsLast","_xdropRepeatsWith"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda/es/internal/_xdropRepeatsWith.js"],"sourcesContent":["import _xfBase from \"./_xfBase.js\";\nvar XDropRepeatsWith = /*#__PURE__*/function () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n  return XDropRepeatsWith;\n}();\nexport default function _xdropRepeatsWith(pred) {\n  return function (xf) {\n    return new XDropRepeatsWith(pred, xf);\n  };\n}"],"mappings":"AAAA,OAAOA,OAAO,MAAM,cAAc;AAClC,IAAIC,gBAAgB,GAAG,aAAa,YAAY;EAC9C,SAASA,gBAAgBA,CAACC,IAAI,EAAEC,EAAE,EAAE;IAClC,IAAI,CAACA,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACE,SAAS,GAAGC,SAAS;IAC1B,IAAI,CAACC,cAAc,GAAG,KAAK;EAC7B;EACAL,gBAAgB,CAACM,SAAS,CAAC,mBAAmB,CAAC,GAAGP,OAAO,CAACQ,IAAI;EAC9DP,gBAAgB,CAACM,SAAS,CAAC,qBAAqB,CAAC,GAAGP,OAAO,CAACS,MAAM;EAClER,gBAAgB,CAACM,SAAS,CAAC,mBAAmB,CAAC,GAAG,UAAUE,MAAM,EAAEC,KAAK,EAAE;IACzE,IAAIC,UAAU,GAAG,KAAK;IACtB,IAAI,CAAC,IAAI,CAACL,cAAc,EAAE;MACxB,IAAI,CAACA,cAAc,GAAG,IAAI;IAC5B,CAAC,MAAM,IAAI,IAAI,CAACJ,IAAI,CAAC,IAAI,CAACE,SAAS,EAAEM,KAAK,CAAC,EAAE;MAC3CC,UAAU,GAAG,IAAI;IACnB;IACA,IAAI,CAACP,SAAS,GAAGM,KAAK;IACtB,OAAOC,UAAU,GAAGF,MAAM,GAAG,IAAI,CAACN,EAAE,CAAC,mBAAmB,CAAC,CAACM,MAAM,EAAEC,KAAK,CAAC;EAC1E,CAAC;EACD,OAAOT,gBAAgB;AACzB,CAAC,CAAC,CAAC;AACH,eAAe,SAASW,iBAAiBA,CAACV,IAAI,EAAE;EAC9C,OAAO,UAAUC,EAAE,EAAE;IACnB,OAAO,IAAIF,gBAAgB,CAACC,IAAI,EAAEC,EAAE,CAAC;EACvC,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}