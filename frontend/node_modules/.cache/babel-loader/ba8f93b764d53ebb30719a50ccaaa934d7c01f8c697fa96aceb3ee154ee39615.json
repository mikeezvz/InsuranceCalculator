{"ast":null,"code":"import { curryN } from 'ramda';\n/**\n * Converts double-precision 64-bit binary format IEEE 754 to signed 32 bit integer number.\n *\n * @func toInteger32\n * @aliases toInt32\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.28.0|v2.28.0}\n * @category Math\n * @sig Number -> Number\n * @param {number} number A number\n * @return {number} A signed 32-bit integer number\n * @see {@link RA.toUInteger32|toUInteger32}, {@link http://speakingjs.com/es5/ch11.html#integers_via_bitwise_operators}\n * @example\n *\n * RA.toInteger32(2 ** 35); // => 0\n * RA.toInteger32(2 ** 30); // => 1073741824\n */\n// eslint-disable-next-line no-bitwise\nvar toInteger32 = curryN(1, function (val) {\n  return val >> 0;\n});\nexport default toInteger32;","map":{"version":3,"names":["curryN","toInteger32","val"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/toInteger32.js"],"sourcesContent":["import { curryN } from 'ramda';\n/**\n * Converts double-precision 64-bit binary format IEEE 754 to signed 32 bit integer number.\n *\n * @func toInteger32\n * @aliases toInt32\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.28.0|v2.28.0}\n * @category Math\n * @sig Number -> Number\n * @param {number} number A number\n * @return {number} A signed 32-bit integer number\n * @see {@link RA.toUInteger32|toUInteger32}, {@link http://speakingjs.com/es5/ch11.html#integers_via_bitwise_operators}\n * @example\n *\n * RA.toInteger32(2 ** 35); // => 0\n * RA.toInteger32(2 ** 30); // => 1073741824\n */\n// eslint-disable-next-line no-bitwise\nvar toInteger32 = curryN(1, function (val) {\n  return val >> 0;\n});\nexport default toInteger32;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,WAAW,GAAGD,MAAM,CAAC,CAAC,EAAE,UAAUE,GAAG,EAAE;EACzC,OAAOA,GAAG,IAAI,CAAC;AACjB,CAAC,CAAC;AACF,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}