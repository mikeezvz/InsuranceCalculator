{"ast":null,"code":"import { Mixin } from 'ts-mixer';\nimport { always } from 'ramda';\nimport { isObjectElement, toValue } from '@swagger-api/apidom-core';\nimport RequestBodyElement from \"../../../../elements/RequestBody.mjs\";\nimport FixedFieldsVisitor from \"../../generics/FixedFieldsVisitor.mjs\";\nimport FallbackVisitor from \"../../FallbackVisitor.mjs\";\nimport { isMediaTypeElement } from \"../../../../predicates.mjs\";\nclass RequestBodyVisitor extends Mixin(FixedFieldsVisitor, FallbackVisitor) {\n  constructor(options) {\n    super(options);\n    this.element = new RequestBodyElement();\n    this.specPath = always(['document', 'objects', 'RequestBody']);\n  }\n  ObjectElement(objectElement) {\n    const result = FixedFieldsVisitor.prototype.ObjectElement.call(this, objectElement);\n\n    // decorate every MediaTypeElement with media type metadata\n    if (isObjectElement(this.element.contentProp)) {\n      this.element.contentProp.filter(isMediaTypeElement)\n      // @ts-ignore\n      .forEach((mediaTypeElement, key) => {\n        mediaTypeElement.setMetaProperty('media-type', toValue(key));\n      });\n    }\n    return result;\n  }\n}\nexport default RequestBodyVisitor;","map":{"version":3,"names":["Mixin","always","isObjectElement","toValue","RequestBodyElement","FixedFieldsVisitor","FallbackVisitor","isMediaTypeElement","RequestBodyVisitor","constructor","options","element","specPath","ObjectElement","objectElement","result","prototype","call","contentProp","filter","forEach","mediaTypeElement","key","setMetaProperty"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/@swagger-api/apidom-ns-openapi-3-0/es/refractor/visitors/open-api-3-0/request-body/index.mjs"],"sourcesContent":["import { Mixin } from 'ts-mixer';\nimport { always } from 'ramda';\nimport { isObjectElement, toValue } from '@swagger-api/apidom-core';\nimport RequestBodyElement from \"../../../../elements/RequestBody.mjs\";\nimport FixedFieldsVisitor from \"../../generics/FixedFieldsVisitor.mjs\";\nimport FallbackVisitor from \"../../FallbackVisitor.mjs\";\nimport { isMediaTypeElement } from \"../../../../predicates.mjs\";\nclass RequestBodyVisitor extends Mixin(FixedFieldsVisitor, FallbackVisitor) {\n  constructor(options) {\n    super(options);\n    this.element = new RequestBodyElement();\n    this.specPath = always(['document', 'objects', 'RequestBody']);\n  }\n  ObjectElement(objectElement) {\n    const result = FixedFieldsVisitor.prototype.ObjectElement.call(this, objectElement);\n\n    // decorate every MediaTypeElement with media type metadata\n    if (isObjectElement(this.element.contentProp)) {\n      this.element.contentProp.filter(isMediaTypeElement)\n      // @ts-ignore\n      .forEach((mediaTypeElement, key) => {\n        mediaTypeElement.setMetaProperty('media-type', toValue(key));\n      });\n    }\n    return result;\n  }\n}\nexport default RequestBodyVisitor;"],"mappings":"AAAA,SAASA,KAAK,QAAQ,UAAU;AAChC,SAASC,MAAM,QAAQ,OAAO;AAC9B,SAASC,eAAe,EAAEC,OAAO,QAAQ,0BAA0B;AACnE,OAAOC,kBAAkB,MAAM,sCAAsC;AACrE,OAAOC,kBAAkB,MAAM,uCAAuC;AACtE,OAAOC,eAAe,MAAM,2BAA2B;AACvD,SAASC,kBAAkB,QAAQ,4BAA4B;AAC/D,MAAMC,kBAAkB,SAASR,KAAK,CAACK,kBAAkB,EAAEC,eAAe,CAAC,CAAC;EAC1EG,WAAWA,CAACC,OAAO,EAAE;IACnB,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,OAAO,GAAG,IAAIP,kBAAkB,CAAC,CAAC;IACvC,IAAI,CAACQ,QAAQ,GAAGX,MAAM,CAAC,CAAC,UAAU,EAAE,SAAS,EAAE,aAAa,CAAC,CAAC;EAChE;EACAY,aAAaA,CAACC,aAAa,EAAE;IAC3B,MAAMC,MAAM,GAAGV,kBAAkB,CAACW,SAAS,CAACH,aAAa,CAACI,IAAI,CAAC,IAAI,EAAEH,aAAa,CAAC;;IAEnF;IACA,IAAIZ,eAAe,CAAC,IAAI,CAACS,OAAO,CAACO,WAAW,CAAC,EAAE;MAC7C,IAAI,CAACP,OAAO,CAACO,WAAW,CAACC,MAAM,CAACZ,kBAAkB;MAClD;MAAA,CACCa,OAAO,CAAC,CAACC,gBAAgB,EAAEC,GAAG,KAAK;QAClCD,gBAAgB,CAACE,eAAe,CAAC,YAAY,EAAEpB,OAAO,CAACmB,GAAG,CAAC,CAAC;MAC9D,CAAC,CAAC;IACJ;IACA,OAAOP,MAAM;EACf;AACF;AACA,eAAeP,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}