{"ast":null,"code":"import { addIndex, filter } from 'ramda';\n\n/**\n * {@link http://ramdajs.com/docs/#filter|R.filter} function that more closely resembles `Array.prototype.filter`.\n * It takes two new parameters to its callback function: the current index, and the entire list.\n *\n * `filterIndexed` implementation is simple: `\n *  const filterIndexed = R.addIndex(R.filter);\n * `\n *\n * @func filterIndexed\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.31.0|v2.31.0}\n * @category List\n * @typedef Idx = Number\n * @sig Filterable f => ((a, Idx, f a) -> Boolean) -> f a -> f a\n * @param {Function} pred The predicate function\n * @param {Array} list The collection to filter\n * @return {Array} Filterable\n * @see {@link http://ramdajs.com/docs/#addIndex|R.addIndex}, {@link http://ramdajs.com/docs/#filter|R.filter}\n * @example\n *\n * const isValueGtIndex = (val, idx) => val > idx;\n * RA.filterIndexed(isValueGtIndex, [5, 4, 3, 2, 1, 0]); //=> [5, 4, 3]\n */\nvar filterIndexed = addIndex(filter);\nexport default filterIndexed;","map":{"version":3,"names":["addIndex","filter","filterIndexed"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/filterIndexed.js"],"sourcesContent":["import { addIndex, filter } from 'ramda';\n\n/**\n * {@link http://ramdajs.com/docs/#filter|R.filter} function that more closely resembles `Array.prototype.filter`.\n * It takes two new parameters to its callback function: the current index, and the entire list.\n *\n * `filterIndexed` implementation is simple: `\n *  const filterIndexed = R.addIndex(R.filter);\n * `\n *\n * @func filterIndexed\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.31.0|v2.31.0}\n * @category List\n * @typedef Idx = Number\n * @sig Filterable f => ((a, Idx, f a) -> Boolean) -> f a -> f a\n * @param {Function} pred The predicate function\n * @param {Array} list The collection to filter\n * @return {Array} Filterable\n * @see {@link http://ramdajs.com/docs/#addIndex|R.addIndex}, {@link http://ramdajs.com/docs/#filter|R.filter}\n * @example\n *\n * const isValueGtIndex = (val, idx) => val > idx;\n * RA.filterIndexed(isValueGtIndex, [5, 4, 3, 2, 1, 0]); //=> [5, 4, 3]\n */\nvar filterIndexed = addIndex(filter);\nexport default filterIndexed;"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,aAAa,GAAGF,QAAQ,CAACC,MAAM,CAAC;AACpC,eAAeC,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}