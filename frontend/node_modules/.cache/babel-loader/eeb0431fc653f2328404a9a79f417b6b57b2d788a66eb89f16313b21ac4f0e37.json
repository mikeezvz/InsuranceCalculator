{"ast":null,"code":"import padCharsStart from './padCharsStart.js';\n\n/**\n * Pads string on the left side if it's shorter than length.\n *\n * @func padStart\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.25.0|v2.25.0}\n * @category String\n * @sig Number -> String -> String\n * @param {number} targetLength The length of the resulting string once\n * the current string has been padded\n * @param {string} value String value to be padded\n * @return {string} A new string of the specified length with the empty string\n * applied to the beginning of the current string\n * @see {@link RA.padCharsEnd|padCharsEnd}, {@link RA.padCharsStart|padCharsStart}, {@link RA.padEnd|padEnd}\n * @example\n *\n * RA.padStart(3, 'a'); // => '  a'\n */\nvar padStart = padCharsStart(' ');\nexport default padStart;","map":{"version":3,"names":["padCharsStart","padStart"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/padStart.js"],"sourcesContent":["import padCharsStart from './padCharsStart.js';\n\n/**\n * Pads string on the left side if it's shorter than length.\n *\n * @func padStart\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.25.0|v2.25.0}\n * @category String\n * @sig Number -> String -> String\n * @param {number} targetLength The length of the resulting string once\n * the current string has been padded\n * @param {string} value String value to be padded\n * @return {string} A new string of the specified length with the empty string\n * applied to the beginning of the current string\n * @see {@link RA.padCharsEnd|padCharsEnd}, {@link RA.padCharsStart|padCharsStart}, {@link RA.padEnd|padEnd}\n * @example\n *\n * RA.padStart(3, 'a'); // => '  a'\n */\nvar padStart = padCharsStart(' ');\nexport default padStart;"],"mappings":"AAAA,OAAOA,aAAa,MAAM,oBAAoB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,QAAQ,GAAGD,aAAa,CAAC,GAAG,CAAC;AACjC,eAAeC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}