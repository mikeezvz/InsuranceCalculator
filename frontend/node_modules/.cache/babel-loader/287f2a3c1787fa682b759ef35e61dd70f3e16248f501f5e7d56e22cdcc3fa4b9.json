{"ast":null,"code":"import { bind, curryN } from 'ramda';\n\n/**\n * Returns the value of a number rounded to the nearest integer.\n *\n * @func round\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.15.0|v2.15.0}\n * @category Math\n * @sig Number -> Number\n * @param {number} number The number to round\n * @return {number} The value of the given number rounded to the nearest integer\n * @example\n *\n * RA.round(0.9); //=> 1\n * RA.round(5.95); //=> 6\n * RA.round(5.5); //=> 6\n * RA.round(5.05); //=> 5\n * RA.round(-5.05); //=> -5\n * RA.round(-5.5); //=> -5\n * RA.round(-5.95); //=> -6\n */\n\nvar round = curryN(1, bind(Math.round, Math));\nexport default round;","map":{"version":3,"names":["bind","curryN","round","Math"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/round.js"],"sourcesContent":["import { bind, curryN } from 'ramda';\n\n/**\n * Returns the value of a number rounded to the nearest integer.\n *\n * @func round\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.15.0|v2.15.0}\n * @category Math\n * @sig Number -> Number\n * @param {number} number The number to round\n * @return {number} The value of the given number rounded to the nearest integer\n * @example\n *\n * RA.round(0.9); //=> 1\n * RA.round(5.95); //=> 6\n * RA.round(5.5); //=> 6\n * RA.round(5.05); //=> 5\n * RA.round(-5.05); //=> -5\n * RA.round(-5.5); //=> -5\n * RA.round(-5.95); //=> -6\n */\n\nvar round = curryN(1, bind(Math.round, Math));\nexport default round;"],"mappings":"AAAA,SAASA,IAAI,EAAEC,MAAM,QAAQ,OAAO;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,KAAK,GAAGD,MAAM,CAAC,CAAC,EAAED,IAAI,CAACG,IAAI,CAACD,KAAK,EAAEC,IAAI,CAAC,CAAC;AAC7C,eAAeD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}