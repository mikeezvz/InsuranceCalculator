{"ast":null,"code":"import _curry2 from \"./internal/_curry2.js\";\n\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\nvar xprod = /*#__PURE__*/_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var i = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = Array(ilen * jlen);\n  while (i < ilen) {\n    j = 0;\n    while (j < jlen) {\n      result[i * jlen + j] = [a[i], b[j]];\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;\n});\nexport default xprod;","map":{"version":3,"names":["_curry2","xprod","a","b","i","ilen","length","j","jlen","result","Array"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda/es/xprod.js"],"sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\n\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\nvar xprod = /*#__PURE__*/_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var i = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = Array(ilen * jlen);\n  while (i < ilen) {\n    j = 0;\n    while (j < jlen) {\n      result[i * jlen + j] = [a[i], b[j]];\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;\n});\nexport default xprod;"],"mappings":"AAAA,OAAOA,OAAO,MAAM,uBAAuB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,KAAK,GAAG,aAAaD,OAAO,CAAC,SAASC,KAAKA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACpD;EACA,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIC,IAAI,GAAGH,CAAC,CAACI,MAAM;EACnB,IAAIC,CAAC;EACL,IAAIC,IAAI,GAAGL,CAAC,CAACG,MAAM;EACnB,IAAIG,MAAM,GAAGC,KAAK,CAACL,IAAI,GAAGG,IAAI,CAAC;EAC/B,OAAOJ,CAAC,GAAGC,IAAI,EAAE;IACfE,CAAC,GAAG,CAAC;IACL,OAAOA,CAAC,GAAGC,IAAI,EAAE;MACfC,MAAM,CAACL,CAAC,GAAGI,IAAI,GAAGD,CAAC,CAAC,GAAG,CAACL,CAAC,CAACE,CAAC,CAAC,EAAED,CAAC,CAACI,CAAC,CAAC,CAAC;MACnCA,CAAC,IAAI,CAAC;IACR;IACAH,CAAC,IAAI,CAAC;EACR;EACA,OAAOK,MAAM;AACf,CAAC,CAAC;AACF,eAAeR,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}