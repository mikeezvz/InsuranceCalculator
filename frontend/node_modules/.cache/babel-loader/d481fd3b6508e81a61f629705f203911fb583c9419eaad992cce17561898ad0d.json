{"ast":null,"code":"import { Mixin } from 'ts-mixer';\nimport { toValue } from '@swagger-api/apidom-core';\nimport ResponseHeadersElement from \"../../../../elements/nces/ResponseHeaders.mjs\";\nimport MapVisitor from \"../../generics/MapVisitor.mjs\";\nimport FallbackVisitor from \"../../FallbackVisitor.mjs\";\nimport { isReferenceLikeElement } from \"../../../predicates.mjs\";\nimport { isHeaderElement, isReferenceElement } from \"../../../../predicates.mjs\";\nclass HeadersVisitor extends Mixin(MapVisitor, FallbackVisitor) {\n  constructor(options) {\n    super(options);\n    this.element = new ResponseHeadersElement();\n    this.specPath = element => isReferenceLikeElement(element) ? ['document', 'objects', 'Reference'] : ['document', 'objects', 'Header'];\n  }\n  ObjectElement(objectElement) {\n    const result = MapVisitor.prototype.ObjectElement.call(this, objectElement);\n\n    // decorate every ReferenceElement with metadata about their referencing type\n    // @ts-ignore\n    this.element.filter(isReferenceElement).forEach(referenceElement => {\n      referenceElement.setMetaProperty('referenced-element', 'header');\n    });\n\n    // decorate every HeaderElement with metadata about their name\n    this.element.forEach((value, key) => {\n      if (!isHeaderElement(value)) return;\n      const headerName = toValue(key);\n      value.setMetaProperty('header-name', headerName);\n    });\n    return result;\n  }\n}\nexport default HeadersVisitor;","map":{"version":3,"names":["Mixin","toValue","ResponseHeadersElement","MapVisitor","FallbackVisitor","isReferenceLikeElement","isHeaderElement","isReferenceElement","HeadersVisitor","constructor","options","element","specPath","ObjectElement","objectElement","result","prototype","call","filter","forEach","referenceElement","setMetaProperty","value","key","headerName"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/@swagger-api/apidom-ns-openapi-3-0/es/refractor/visitors/open-api-3-0/response/HeadersVisitor.mjs"],"sourcesContent":["import { Mixin } from 'ts-mixer';\nimport { toValue } from '@swagger-api/apidom-core';\nimport ResponseHeadersElement from \"../../../../elements/nces/ResponseHeaders.mjs\";\nimport MapVisitor from \"../../generics/MapVisitor.mjs\";\nimport FallbackVisitor from \"../../FallbackVisitor.mjs\";\nimport { isReferenceLikeElement } from \"../../../predicates.mjs\";\nimport { isHeaderElement, isReferenceElement } from \"../../../../predicates.mjs\";\nclass HeadersVisitor extends Mixin(MapVisitor, FallbackVisitor) {\n  constructor(options) {\n    super(options);\n    this.element = new ResponseHeadersElement();\n    this.specPath = element => isReferenceLikeElement(element) ? ['document', 'objects', 'Reference'] : ['document', 'objects', 'Header'];\n  }\n  ObjectElement(objectElement) {\n    const result = MapVisitor.prototype.ObjectElement.call(this, objectElement);\n\n    // decorate every ReferenceElement with metadata about their referencing type\n    // @ts-ignore\n    this.element.filter(isReferenceElement).forEach(referenceElement => {\n      referenceElement.setMetaProperty('referenced-element', 'header');\n    });\n\n    // decorate every HeaderElement with metadata about their name\n    this.element.forEach((value, key) => {\n      if (!isHeaderElement(value)) return;\n      const headerName = toValue(key);\n      value.setMetaProperty('header-name', headerName);\n    });\n    return result;\n  }\n}\nexport default HeadersVisitor;"],"mappings":"AAAA,SAASA,KAAK,QAAQ,UAAU;AAChC,SAASC,OAAO,QAAQ,0BAA0B;AAClD,OAAOC,sBAAsB,MAAM,+CAA+C;AAClF,OAAOC,UAAU,MAAM,+BAA+B;AACtD,OAAOC,eAAe,MAAM,2BAA2B;AACvD,SAASC,sBAAsB,QAAQ,yBAAyB;AAChE,SAASC,eAAe,EAAEC,kBAAkB,QAAQ,4BAA4B;AAChF,MAAMC,cAAc,SAASR,KAAK,CAACG,UAAU,EAAEC,eAAe,CAAC,CAAC;EAC9DK,WAAWA,CAACC,OAAO,EAAE;IACnB,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,OAAO,GAAG,IAAIT,sBAAsB,CAAC,CAAC;IAC3C,IAAI,CAACU,QAAQ,GAAGD,OAAO,IAAIN,sBAAsB,CAACM,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,SAAS,EAAE,WAAW,CAAC,GAAG,CAAC,UAAU,EAAE,SAAS,EAAE,QAAQ,CAAC;EACvI;EACAE,aAAaA,CAACC,aAAa,EAAE;IAC3B,MAAMC,MAAM,GAAGZ,UAAU,CAACa,SAAS,CAACH,aAAa,CAACI,IAAI,CAAC,IAAI,EAAEH,aAAa,CAAC;;IAE3E;IACA;IACA,IAAI,CAACH,OAAO,CAACO,MAAM,CAACX,kBAAkB,CAAC,CAACY,OAAO,CAACC,gBAAgB,IAAI;MAClEA,gBAAgB,CAACC,eAAe,CAAC,oBAAoB,EAAE,QAAQ,CAAC;IAClE,CAAC,CAAC;;IAEF;IACA,IAAI,CAACV,OAAO,CAACQ,OAAO,CAAC,CAACG,KAAK,EAAEC,GAAG,KAAK;MACnC,IAAI,CAACjB,eAAe,CAACgB,KAAK,CAAC,EAAE;MAC7B,MAAME,UAAU,GAAGvB,OAAO,CAACsB,GAAG,CAAC;MAC/BD,KAAK,CAACD,eAAe,CAAC,aAAa,EAAEG,UAAU,CAAC;IAClD,CAAC,CAAC;IACF,OAAOT,MAAM;EACf;AACF;AACA,eAAeP,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}