{"ast":null,"code":"const types = require('./types');\nconst INTS = () => [{\n  type: types.RANGE,\n  from: 48,\n  to: 57\n}];\nconst WORDS = () => {\n  return [{\n    type: types.CHAR,\n    value: 95\n  }, {\n    type: types.RANGE,\n    from: 97,\n    to: 122\n  }, {\n    type: types.RANGE,\n    from: 65,\n    to: 90\n  }].concat(INTS());\n};\nconst WHITESPACE = () => {\n  return [{\n    type: types.CHAR,\n    value: 9\n  }, {\n    type: types.CHAR,\n    value: 10\n  }, {\n    type: types.CHAR,\n    value: 11\n  }, {\n    type: types.CHAR,\n    value: 12\n  }, {\n    type: types.CHAR,\n    value: 13\n  }, {\n    type: types.CHAR,\n    value: 32\n  }, {\n    type: types.CHAR,\n    value: 160\n  }, {\n    type: types.CHAR,\n    value: 5760\n  }, {\n    type: types.RANGE,\n    from: 8192,\n    to: 8202\n  }, {\n    type: types.CHAR,\n    value: 8232\n  }, {\n    type: types.CHAR,\n    value: 8233\n  }, {\n    type: types.CHAR,\n    value: 8239\n  }, {\n    type: types.CHAR,\n    value: 8287\n  }, {\n    type: types.CHAR,\n    value: 12288\n  }, {\n    type: types.CHAR,\n    value: 65279\n  }];\n};\nconst NOTANYCHAR = () => {\n  return [{\n    type: types.CHAR,\n    value: 10\n  }, {\n    type: types.CHAR,\n    value: 13\n  }, {\n    type: types.CHAR,\n    value: 8232\n  }, {\n    type: types.CHAR,\n    value: 8233\n  }];\n};\n\n// Predefined class objects.\nexports.words = () => ({\n  type: types.SET,\n  set: WORDS(),\n  not: false\n});\nexports.notWords = () => ({\n  type: types.SET,\n  set: WORDS(),\n  not: true\n});\nexports.ints = () => ({\n  type: types.SET,\n  set: INTS(),\n  not: false\n});\nexports.notInts = () => ({\n  type: types.SET,\n  set: INTS(),\n  not: true\n});\nexports.whitespace = () => ({\n  type: types.SET,\n  set: WHITESPACE(),\n  not: false\n});\nexports.notWhitespace = () => ({\n  type: types.SET,\n  set: WHITESPACE(),\n  not: true\n});\nexports.anyChar = () => ({\n  type: types.SET,\n  set: NOTANYCHAR(),\n  not: true\n});","map":{"version":3,"names":["types","require","INTS","type","RANGE","from","to","WORDS","CHAR","value","concat","WHITESPACE","NOTANYCHAR","exports","words","SET","set","not","notWords","ints","notInts","whitespace","notWhitespace","anyChar"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ret/lib/sets.js"],"sourcesContent":["const types = require('./types');\n\nconst INTS = () => [{ type: types.RANGE , from: 48, to: 57 }];\n\nconst WORDS = () => {\n  return [\n    { type: types.CHAR, value: 95 },\n    { type: types.RANGE, from: 97, to: 122 },\n    { type: types.RANGE, from: 65, to: 90 }\n  ].concat(INTS());\n};\n\nconst WHITESPACE = () => {\n  return [\n    { type: types.CHAR, value: 9 },\n    { type: types.CHAR, value: 10 },\n    { type: types.CHAR, value: 11 },\n    { type: types.CHAR, value: 12 },\n    { type: types.CHAR, value: 13 },\n    { type: types.CHAR, value: 32 },\n    { type: types.CHAR, value: 160 },\n    { type: types.CHAR, value: 5760 },\n    { type: types.RANGE, from: 8192, to: 8202 },\n    { type: types.CHAR, value: 8232 },\n    { type: types.CHAR, value: 8233 },\n    { type: types.CHAR, value: 8239 },\n    { type: types.CHAR, value: 8287 },\n    { type: types.CHAR, value: 12288 },\n    { type: types.CHAR, value: 65279 }\n  ];\n};\n\nconst NOTANYCHAR = () => {\n  return [\n    { type: types.CHAR, value: 10 },\n    { type: types.CHAR, value: 13 },\n    { type: types.CHAR, value: 8232 },\n    { type: types.CHAR, value: 8233 },\n  ];\n};\n\n// Predefined class objects.\nexports.words = () => ({ type: types.SET, set: WORDS(), not: false });\nexports.notWords = () => ({ type: types.SET, set: WORDS(), not: true });\nexports.ints = () => ({ type: types.SET, set: INTS(), not: false });\nexports.notInts = () => ({ type: types.SET, set: INTS(), not: true });\nexports.whitespace = () => ({ type: types.SET, set: WHITESPACE(), not: false });\nexports.notWhitespace = () => ({ type: types.SET, set: WHITESPACE(), not: true });\nexports.anyChar = () => ({ type: types.SET, set: NOTANYCHAR(), not: true });\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;AAEhC,MAAMC,IAAI,GAAGA,CAAA,KAAM,CAAC;EAAEC,IAAI,EAAEH,KAAK,CAACI,KAAK;EAAGC,IAAI,EAAE,EAAE;EAAEC,EAAE,EAAE;AAAG,CAAC,CAAC;AAE7D,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB,OAAO,CACL;IAAEJ,IAAI,EAAEH,KAAK,CAACQ,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAEN,IAAI,EAAEH,KAAK,CAACI,KAAK;IAAEC,IAAI,EAAE,EAAE;IAAEC,EAAE,EAAE;EAAI,CAAC,EACxC;IAAEH,IAAI,EAAEH,KAAK,CAACI,KAAK;IAAEC,IAAI,EAAE,EAAE;IAAEC,EAAE,EAAE;EAAG,CAAC,CACxC,CAACI,MAAM,CAACR,IAAI,CAAC,CAAC,CAAC;AAClB,CAAC;AAED,MAAMS,UAAU,GAAGA,CAAA,KAAM;EACvB,OAAO,CACL;IAAER,IAAI,EAAEH,KAAK,CAACQ,IAAI;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC9B;IAAEN,IAAI,EAAEH,KAAK,CAACQ,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAEN,IAAI,EAAEH,KAAK,CAACQ,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAEN,IAAI,EAAEH,KAAK,CAACQ,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAEN,IAAI,EAAEH,KAAK,CAACQ,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAEN,IAAI,EAAEH,KAAK,CAACQ,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAEN,IAAI,EAAEH,KAAK,CAACQ,IAAI;IAAEC,KAAK,EAAE;EAAI,CAAC,EAChC;IAAEN,IAAI,EAAEH,KAAK,CAACQ,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC,EACjC;IAAEN,IAAI,EAAEH,KAAK,CAACI,KAAK;IAAEC,IAAI,EAAE,IAAI;IAAEC,EAAE,EAAE;EAAK,CAAC,EAC3C;IAAEH,IAAI,EAAEH,KAAK,CAACQ,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC,EACjC;IAAEN,IAAI,EAAEH,KAAK,CAACQ,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC,EACjC;IAAEN,IAAI,EAAEH,KAAK,CAACQ,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC,EACjC;IAAEN,IAAI,EAAEH,KAAK,CAACQ,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC,EACjC;IAAEN,IAAI,EAAEH,KAAK,CAACQ,IAAI;IAAEC,KAAK,EAAE;EAAM,CAAC,EAClC;IAAEN,IAAI,EAAEH,KAAK,CAACQ,IAAI;IAAEC,KAAK,EAAE;EAAM,CAAC,CACnC;AACH,CAAC;AAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;EACvB,OAAO,CACL;IAAET,IAAI,EAAEH,KAAK,CAACQ,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAEN,IAAI,EAAEH,KAAK,CAACQ,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAEN,IAAI,EAAEH,KAAK,CAACQ,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC,EACjC;IAAEN,IAAI,EAAEH,KAAK,CAACQ,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC,CAClC;AACH,CAAC;;AAED;AACAI,OAAO,CAACC,KAAK,GAAG,OAAO;EAAEX,IAAI,EAAEH,KAAK,CAACe,GAAG;EAAEC,GAAG,EAAET,KAAK,CAAC,CAAC;EAAEU,GAAG,EAAE;AAAM,CAAC,CAAC;AACrEJ,OAAO,CAACK,QAAQ,GAAG,OAAO;EAAEf,IAAI,EAAEH,KAAK,CAACe,GAAG;EAAEC,GAAG,EAAET,KAAK,CAAC,CAAC;EAAEU,GAAG,EAAE;AAAK,CAAC,CAAC;AACvEJ,OAAO,CAACM,IAAI,GAAG,OAAO;EAAEhB,IAAI,EAAEH,KAAK,CAACe,GAAG;EAAEC,GAAG,EAAEd,IAAI,CAAC,CAAC;EAAEe,GAAG,EAAE;AAAM,CAAC,CAAC;AACnEJ,OAAO,CAACO,OAAO,GAAG,OAAO;EAAEjB,IAAI,EAAEH,KAAK,CAACe,GAAG;EAAEC,GAAG,EAAEd,IAAI,CAAC,CAAC;EAAEe,GAAG,EAAE;AAAK,CAAC,CAAC;AACrEJ,OAAO,CAACQ,UAAU,GAAG,OAAO;EAAElB,IAAI,EAAEH,KAAK,CAACe,GAAG;EAAEC,GAAG,EAAEL,UAAU,CAAC,CAAC;EAAEM,GAAG,EAAE;AAAM,CAAC,CAAC;AAC/EJ,OAAO,CAACS,aAAa,GAAG,OAAO;EAAEnB,IAAI,EAAEH,KAAK,CAACe,GAAG;EAAEC,GAAG,EAAEL,UAAU,CAAC,CAAC;EAAEM,GAAG,EAAE;AAAK,CAAC,CAAC;AACjFJ,OAAO,CAACU,OAAO,GAAG,OAAO;EAAEpB,IAAI,EAAEH,KAAK,CAACe,GAAG;EAAEC,GAAG,EAAEJ,UAAU,CAAC,CAAC;EAAEK,GAAG,EAAE;AAAK,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}