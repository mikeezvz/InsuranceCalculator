{"ast":null,"code":"const Element = require('./primitives/Element');\nconst NullElement = require('./primitives/NullElement');\nconst StringElement = require('./primitives/StringElement');\nconst NumberElement = require('./primitives/NumberElement');\nconst BooleanElement = require('./primitives/BooleanElement');\nconst ArrayElement = require('./primitives/ArrayElement');\nconst MemberElement = require('./primitives/MemberElement');\nconst ObjectElement = require('./primitives/ObjectElement');\nconst LinkElement = require('./elements/LinkElement');\nconst RefElement = require('./elements/RefElement');\nconst ArraySlice = require('./ArraySlice');\nconst ObjectSlice = require('./ObjectSlice');\nconst KeyValuePair = require('./KeyValuePair');\n\n/**\n * Refracts a JSON type to minim elements\n * @param value\n * @returns {Element}\n */\nfunction refract(value) {\n  if (value instanceof Element) {\n    return value;\n  }\n  if (typeof value === 'string') {\n    return new StringElement(value);\n  }\n  if (typeof value === 'number') {\n    return new NumberElement(value);\n  }\n  if (typeof value === 'boolean') {\n    return new BooleanElement(value);\n  }\n  if (value === null) {\n    return new NullElement();\n  }\n  if (Array.isArray(value)) {\n    return new ArrayElement(value.map(refract));\n  }\n  if (typeof value === 'object') {\n    const element = new ObjectElement(value);\n    return element;\n  }\n  return value;\n}\nElement.prototype.ObjectElement = ObjectElement;\nElement.prototype.RefElement = RefElement;\nElement.prototype.MemberElement = MemberElement;\nElement.prototype.refract = refract;\nArraySlice.prototype.refract = refract;\n\n/**\n * Contains all of the element classes, and related structures and methods\n * for handling with element instances.\n */\nmodule.exports = {\n  Element,\n  NullElement,\n  StringElement,\n  NumberElement,\n  BooleanElement,\n  ArrayElement,\n  MemberElement,\n  ObjectElement,\n  LinkElement,\n  RefElement,\n  refract,\n  ArraySlice,\n  ObjectSlice,\n  KeyValuePair\n};","map":{"version":3,"names":["Element","require","NullElement","StringElement","NumberElement","BooleanElement","ArrayElement","MemberElement","ObjectElement","LinkElement","RefElement","ArraySlice","ObjectSlice","KeyValuePair","refract","value","Array","isArray","map","element","prototype","module","exports"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/minim/lib/elements.js"],"sourcesContent":["const Element = require('./primitives/Element');\nconst NullElement = require('./primitives/NullElement');\nconst StringElement = require('./primitives/StringElement');\nconst NumberElement = require('./primitives/NumberElement');\nconst BooleanElement = require('./primitives/BooleanElement');\nconst ArrayElement = require('./primitives/ArrayElement');\nconst MemberElement = require('./primitives/MemberElement');\nconst ObjectElement = require('./primitives/ObjectElement');\nconst LinkElement = require('./elements/LinkElement');\nconst RefElement = require('./elements/RefElement');\n\nconst ArraySlice = require('./ArraySlice');\nconst ObjectSlice = require('./ObjectSlice');\n\nconst KeyValuePair = require('./KeyValuePair');\n\n/**\n * Refracts a JSON type to minim elements\n * @param value\n * @returns {Element}\n */\nfunction refract(value) {\n  if (value instanceof Element) {\n    return value;\n  }\n\n  if (typeof value === 'string') {\n    return new StringElement(value);\n  }\n\n  if (typeof value === 'number') {\n    return new NumberElement(value);\n  }\n\n  if (typeof value === 'boolean') {\n    return new BooleanElement(value);\n  }\n\n  if (value === null) {\n    return new NullElement();\n  }\n\n  if (Array.isArray(value)) {\n    return new ArrayElement(value.map(refract));\n  }\n\n  if (typeof value === 'object') {\n    const element = new ObjectElement(value);\n    return element;\n  }\n\n  return value;\n}\n\nElement.prototype.ObjectElement = ObjectElement;\nElement.prototype.RefElement = RefElement;\nElement.prototype.MemberElement = MemberElement;\n\nElement.prototype.refract = refract;\nArraySlice.prototype.refract = refract;\n\n/**\n * Contains all of the element classes, and related structures and methods\n * for handling with element instances.\n */\nmodule.exports = {\n  Element,\n  NullElement,\n  StringElement,\n  NumberElement,\n  BooleanElement,\n  ArrayElement,\n  MemberElement,\n  ObjectElement,\n  LinkElement,\n  RefElement,\n\n  refract,\n\n  ArraySlice,\n  ObjectSlice,\n  KeyValuePair,\n};\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC/C,MAAMC,WAAW,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACvD,MAAME,aAAa,GAAGF,OAAO,CAAC,4BAA4B,CAAC;AAC3D,MAAMG,aAAa,GAAGH,OAAO,CAAC,4BAA4B,CAAC;AAC3D,MAAMI,cAAc,GAAGJ,OAAO,CAAC,6BAA6B,CAAC;AAC7D,MAAMK,YAAY,GAAGL,OAAO,CAAC,2BAA2B,CAAC;AACzD,MAAMM,aAAa,GAAGN,OAAO,CAAC,4BAA4B,CAAC;AAC3D,MAAMO,aAAa,GAAGP,OAAO,CAAC,4BAA4B,CAAC;AAC3D,MAAMQ,WAAW,GAAGR,OAAO,CAAC,wBAAwB,CAAC;AACrD,MAAMS,UAAU,GAAGT,OAAO,CAAC,uBAAuB,CAAC;AAEnD,MAAMU,UAAU,GAAGV,OAAO,CAAC,cAAc,CAAC;AAC1C,MAAMW,WAAW,GAAGX,OAAO,CAAC,eAAe,CAAC;AAE5C,MAAMY,YAAY,GAAGZ,OAAO,CAAC,gBAAgB,CAAC;;AAE9C;AACA;AACA;AACA;AACA;AACA,SAASa,OAAOA,CAACC,KAAK,EAAE;EACtB,IAAIA,KAAK,YAAYf,OAAO,EAAE;IAC5B,OAAOe,KAAK;EACd;EAEA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAO,IAAIZ,aAAa,CAACY,KAAK,CAAC;EACjC;EAEA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAO,IAAIX,aAAa,CAACW,KAAK,CAAC;EACjC;EAEA,IAAI,OAAOA,KAAK,KAAK,SAAS,EAAE;IAC9B,OAAO,IAAIV,cAAc,CAACU,KAAK,CAAC;EAClC;EAEA,IAAIA,KAAK,KAAK,IAAI,EAAE;IAClB,OAAO,IAAIb,WAAW,CAAC,CAAC;EAC1B;EAEA,IAAIc,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;IACxB,OAAO,IAAIT,YAAY,CAACS,KAAK,CAACG,GAAG,CAACJ,OAAO,CAAC,CAAC;EAC7C;EAEA,IAAI,OAAOC,KAAK,KAAK,QAAQ,EAAE;IAC7B,MAAMI,OAAO,GAAG,IAAIX,aAAa,CAACO,KAAK,CAAC;IACxC,OAAOI,OAAO;EAChB;EAEA,OAAOJ,KAAK;AACd;AAEAf,OAAO,CAACoB,SAAS,CAACZ,aAAa,GAAGA,aAAa;AAC/CR,OAAO,CAACoB,SAAS,CAACV,UAAU,GAAGA,UAAU;AACzCV,OAAO,CAACoB,SAAS,CAACb,aAAa,GAAGA,aAAa;AAE/CP,OAAO,CAACoB,SAAS,CAACN,OAAO,GAAGA,OAAO;AACnCH,UAAU,CAACS,SAAS,CAACN,OAAO,GAAGA,OAAO;;AAEtC;AACA;AACA;AACA;AACAO,MAAM,CAACC,OAAO,GAAG;EACftB,OAAO;EACPE,WAAW;EACXC,aAAa;EACbC,aAAa;EACbC,cAAc;EACdC,YAAY;EACZC,aAAa;EACbC,aAAa;EACbC,WAAW;EACXC,UAAU;EAEVI,OAAO;EAEPH,UAAU;EACVC,WAAW;EACXC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}