{"ast":null,"code":"import { equals } from 'ramda';\nimport compareLength from './internal/compareLength.js';\n\n/**\n * Returns `true` if the supplied list or string has a length equal to `valueLength`.\n *\n * @func lengthEq\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.8.0|v2.8.0}\n * @category List\n * @sig Number -> [*] -> Boolean\n * @param {number} valueLength The length of the list or string\n * @param {Array|string} value The list or string\n * @return {boolean}\n * @see {@link RA.lengthNotEq|lengthNotEq}, {@link RA.lengthLt|lengthLt}, {@link RA.lengthGt|lengthGt}, {@link RA.lengthLte|lengthLte}, {@link RA.lengthGte|lengthGte},, {@link http://ramdajs.com/docs/#equals|equals}, {@link http://ramdajs.com/docs/#length|length}\n * @example\n *\n * RA.lengthEq(3, [1,2,3]); //=> true\n * RA.lengthEq(3, [1,2,3,4]); //=> false\n */\nvar lengthEq = compareLength(equals);\nexport default lengthEq;","map":{"version":3,"names":["equals","compareLength","lengthEq"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/lengthEq.js"],"sourcesContent":["import { equals } from 'ramda';\nimport compareLength from './internal/compareLength.js';\n\n/**\n * Returns `true` if the supplied list or string has a length equal to `valueLength`.\n *\n * @func lengthEq\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.8.0|v2.8.0}\n * @category List\n * @sig Number -> [*] -> Boolean\n * @param {number} valueLength The length of the list or string\n * @param {Array|string} value The list or string\n * @return {boolean}\n * @see {@link RA.lengthNotEq|lengthNotEq}, {@link RA.lengthLt|lengthLt}, {@link RA.lengthGt|lengthGt}, {@link RA.lengthLte|lengthLte}, {@link RA.lengthGte|lengthGte},, {@link http://ramdajs.com/docs/#equals|equals}, {@link http://ramdajs.com/docs/#length|length}\n * @example\n *\n * RA.lengthEq(3, [1,2,3]); //=> true\n * RA.lengthEq(3, [1,2,3,4]); //=> false\n */\nvar lengthEq = compareLength(equals);\nexport default lengthEq;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,OAAOC,aAAa,MAAM,6BAA6B;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,QAAQ,GAAGD,aAAa,CAACD,MAAM,CAAC;AACpC,eAAeE,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}