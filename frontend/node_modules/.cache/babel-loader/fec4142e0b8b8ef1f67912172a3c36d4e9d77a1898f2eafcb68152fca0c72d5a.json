{"ast":null,"code":"import { curry, of } from 'ramda';\nimport mergePath from './mergePath.js';\n\n/**\n * Create a new object with the own properties of the object under the `p`\n * merged with the own properties of the provided `source`.\n * If a key exists in both objects, the value from the `source` object will be used.\n *\n * @func mergeProp\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.18.0|v1.18.0}\n * @category Object\n * @sig [k] -> {a} -> {k: {a}} -> {k: {a}}\n * @see {@link RA.mergePath|mergePath}\n * @param {!Array} p The property of the destination object\n * @param {!Object} source The source object\n * @param {!Object} obj The object that has destination object under corresponding property\n * @return {!Object} The new version of object\n * @example\n *\n * RA.mergeProp(\n *  'outer',\n *  { foo: 3, bar: 4 },\n *  { outer: { foo: 2 } }\n * ); //=> { outer: { foo: 3, bar: 4 } };\n */\nvar mergeProp = curry(function (p, subj, obj) {\n  return mergePath(of(Array, p), subj, obj);\n});\nexport default mergeProp;","map":{"version":3,"names":["curry","of","mergePath","mergeProp","p","subj","obj","Array"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/mergeProp.js"],"sourcesContent":["import { curry, of } from 'ramda';\nimport mergePath from './mergePath.js';\n\n/**\n * Create a new object with the own properties of the object under the `p`\n * merged with the own properties of the provided `source`.\n * If a key exists in both objects, the value from the `source` object will be used.\n *\n * @func mergeProp\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.18.0|v1.18.0}\n * @category Object\n * @sig [k] -> {a} -> {k: {a}} -> {k: {a}}\n * @see {@link RA.mergePath|mergePath}\n * @param {!Array} p The property of the destination object\n * @param {!Object} source The source object\n * @param {!Object} obj The object that has destination object under corresponding property\n * @return {!Object} The new version of object\n * @example\n *\n * RA.mergeProp(\n *  'outer',\n *  { foo: 3, bar: 4 },\n *  { outer: { foo: 2 } }\n * ); //=> { outer: { foo: 3, bar: 4 } };\n */\nvar mergeProp = curry(function (p, subj, obj) {\n  return mergePath(of(Array, p), subj, obj);\n});\nexport default mergeProp;"],"mappings":"AAAA,SAASA,KAAK,EAAEC,EAAE,QAAQ,OAAO;AACjC,OAAOC,SAAS,MAAM,gBAAgB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,SAAS,GAAGH,KAAK,CAAC,UAAUI,CAAC,EAAEC,IAAI,EAAEC,GAAG,EAAE;EAC5C,OAAOJ,SAAS,CAACD,EAAE,CAACM,KAAK,EAAEH,CAAC,CAAC,EAAEC,IAAI,EAAEC,GAAG,CAAC;AAC3C,CAAC,CAAC;AACF,eAAeH,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}