{"ast":null,"code":"import { bind, curryN } from 'ramda';\n\n/**\n * Returns the smallest integer greater than or equal to a given number.\n *\n * Note: ceil(null) returns integer 0 and does not give a NaN error.\n *\n * @func ceil\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.15.0|v2.15.0}\n * @category Math\n * @sig Number -> Number\n * @param {number} number The number to ceil\n * @return {number} The smallest integer greater than or equal to the given number\n * @example\n *\n * RA.ceil(.95); //=> 1\n * RA.ceil(4); //=> 4\n * RA.ceil(7.004); //=> 8\n * RA.ceil(-0.95); //=> -0\n * RA.ceil(-4); //=> -4\n * RA.ceil(-7.004); //=> -7\n * RA.ceil(null); //=> 0\n */\n\nvar ceil = curryN(1, bind(Math.ceil, Math));\nexport default ceil;","map":{"version":3,"names":["bind","curryN","ceil","Math"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/ceil.js"],"sourcesContent":["import { bind, curryN } from 'ramda';\n\n/**\n * Returns the smallest integer greater than or equal to a given number.\n *\n * Note: ceil(null) returns integer 0 and does not give a NaN error.\n *\n * @func ceil\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.15.0|v2.15.0}\n * @category Math\n * @sig Number -> Number\n * @param {number} number The number to ceil\n * @return {number} The smallest integer greater than or equal to the given number\n * @example\n *\n * RA.ceil(.95); //=> 1\n * RA.ceil(4); //=> 4\n * RA.ceil(7.004); //=> 8\n * RA.ceil(-0.95); //=> -0\n * RA.ceil(-4); //=> -4\n * RA.ceil(-7.004); //=> -7\n * RA.ceil(null); //=> 0\n */\n\nvar ceil = curryN(1, bind(Math.ceil, Math));\nexport default ceil;"],"mappings":"AAAA,SAASA,IAAI,EAAEC,MAAM,QAAQ,OAAO;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,IAAI,GAAGD,MAAM,CAAC,CAAC,EAAED,IAAI,CAACG,IAAI,CAACD,IAAI,EAAEC,IAAI,CAAC,CAAC;AAC3C,eAAeD,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}