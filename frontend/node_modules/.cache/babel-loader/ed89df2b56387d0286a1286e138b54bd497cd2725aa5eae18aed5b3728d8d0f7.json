{"ast":null,"code":"import { type } from 'ramda';\nimport { isString } from 'ramda-adjunct';\nimport * as url from \"./util/url.mjs\";\n/**\n * This class represents a File object with url and data.\n */\nclass File {\n  uri;\n  mediaType;\n  data;\n  parseResult;\n  constructor({\n    uri,\n    mediaType = 'text/plain',\n    data,\n    parseResult\n  }) {\n    this.uri = uri;\n    this.mediaType = mediaType;\n    this.data = data;\n    this.parseResult = parseResult;\n  }\n  get extension() {\n    if (isString(this.uri)) {\n      return url.getExtension(this.uri);\n    }\n    return '';\n  }\n  toString() {\n    if (typeof this.data === 'string') {\n      return this.data;\n    }\n    if (this.data instanceof ArrayBuffer || ['ArrayBuffer'].includes(type(this.data)) || ArrayBuffer.isView(this.data)) {\n      const textDecoder = new TextDecoder('utf-8');\n      return textDecoder.decode(this.data);\n    }\n    return String(this.data);\n  }\n}\nexport default File;","map":{"version":3,"names":["type","isString","url","File","uri","mediaType","data","parseResult","constructor","extension","getExtension","toString","ArrayBuffer","includes","isView","textDecoder","TextDecoder","decode","String"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/@swagger-api/apidom-reference/es/File.mjs"],"sourcesContent":["import { type } from 'ramda';\nimport { isString } from 'ramda-adjunct';\nimport * as url from \"./util/url.mjs\";\n/**\n * This class represents a File object with url and data.\n */\nclass File {\n  uri;\n  mediaType;\n  data;\n  parseResult;\n  constructor({\n    uri,\n    mediaType = 'text/plain',\n    data,\n    parseResult\n  }) {\n    this.uri = uri;\n    this.mediaType = mediaType;\n    this.data = data;\n    this.parseResult = parseResult;\n  }\n  get extension() {\n    if (isString(this.uri)) {\n      return url.getExtension(this.uri);\n    }\n    return '';\n  }\n  toString() {\n    if (typeof this.data === 'string') {\n      return this.data;\n    }\n    if (this.data instanceof ArrayBuffer || ['ArrayBuffer'].includes(type(this.data)) || ArrayBuffer.isView(this.data)) {\n      const textDecoder = new TextDecoder('utf-8');\n      return textDecoder.decode(this.data);\n    }\n    return String(this.data);\n  }\n}\nexport default File;"],"mappings":"AAAA,SAASA,IAAI,QAAQ,OAAO;AAC5B,SAASC,QAAQ,QAAQ,eAAe;AACxC,OAAO,KAAKC,GAAG,MAAM,gBAAgB;AACrC;AACA;AACA;AACA,MAAMC,IAAI,CAAC;EACTC,GAAG;EACHC,SAAS;EACTC,IAAI;EACJC,WAAW;EACXC,WAAWA,CAAC;IACVJ,GAAG;IACHC,SAAS,GAAG,YAAY;IACxBC,IAAI;IACJC;EACF,CAAC,EAAE;IACD,IAAI,CAACH,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,WAAW,GAAGA,WAAW;EAChC;EACA,IAAIE,SAASA,CAAA,EAAG;IACd,IAAIR,QAAQ,CAAC,IAAI,CAACG,GAAG,CAAC,EAAE;MACtB,OAAOF,GAAG,CAACQ,YAAY,CAAC,IAAI,CAACN,GAAG,CAAC;IACnC;IACA,OAAO,EAAE;EACX;EACAO,QAAQA,CAAA,EAAG;IACT,IAAI,OAAO,IAAI,CAACL,IAAI,KAAK,QAAQ,EAAE;MACjC,OAAO,IAAI,CAACA,IAAI;IAClB;IACA,IAAI,IAAI,CAACA,IAAI,YAAYM,WAAW,IAAI,CAAC,aAAa,CAAC,CAACC,QAAQ,CAACb,IAAI,CAAC,IAAI,CAACM,IAAI,CAAC,CAAC,IAAIM,WAAW,CAACE,MAAM,CAAC,IAAI,CAACR,IAAI,CAAC,EAAE;MAClH,MAAMS,WAAW,GAAG,IAAIC,WAAW,CAAC,OAAO,CAAC;MAC5C,OAAOD,WAAW,CAACE,MAAM,CAAC,IAAI,CAACX,IAAI,CAAC;IACtC;IACA,OAAOY,MAAM,CAAC,IAAI,CAACZ,IAAI,CAAC;EAC1B;AACF;AACA,eAAeH,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}