{"ast":null,"code":"import _curry2 from \"./internal/_curry2.js\";\nimport _isNumber from \"./internal/_isNumber.js\";\n\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in the set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\nvar range = /*#__PURE__*/_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n  var result = Array(from < to ? to - from : 0);\n  var finish = from < 0 ? to + Math.abs(from) : to - from;\n  var idx = 0;\n  while (idx < finish) {\n    result[idx] = idx + from;\n    idx += 1;\n  }\n  return result;\n});\nexport default range;","map":{"version":3,"names":["_curry2","_isNumber","range","from","to","TypeError","result","Array","finish","Math","abs","idx"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda/es/range.js"],"sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\nimport _isNumber from \"./internal/_isNumber.js\";\n\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in the set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\nvar range = /*#__PURE__*/_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n  var result = Array(from < to ? to - from : 0);\n  var finish = from < 0 ? to + Math.abs(from) : to - from;\n  var idx = 0;\n  while (idx < finish) {\n    result[idx] = idx + from;\n    idx += 1;\n  }\n  return result;\n});\nexport default range;"],"mappings":"AAAA,OAAOA,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,SAAS,MAAM,yBAAyB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,KAAK,GAAG,aAAaF,OAAO,CAAC,SAASE,KAAKA,CAACC,IAAI,EAAEC,EAAE,EAAE;EACxD,IAAI,EAAEH,SAAS,CAACE,IAAI,CAAC,IAAIF,SAAS,CAACG,EAAE,CAAC,CAAC,EAAE;IACvC,MAAM,IAAIC,SAAS,CAAC,yCAAyC,CAAC;EAChE;EACA,IAAIC,MAAM,GAAGC,KAAK,CAACJ,IAAI,GAAGC,EAAE,GAAGA,EAAE,GAAGD,IAAI,GAAG,CAAC,CAAC;EAC7C,IAAIK,MAAM,GAAGL,IAAI,GAAG,CAAC,GAAGC,EAAE,GAAGK,IAAI,CAACC,GAAG,CAACP,IAAI,CAAC,GAAGC,EAAE,GAAGD,IAAI;EACvD,IAAIQ,GAAG,GAAG,CAAC;EACX,OAAOA,GAAG,GAAGH,MAAM,EAAE;IACnBF,MAAM,CAACK,GAAG,CAAC,GAAGA,GAAG,GAAGR,IAAI;IACxBQ,GAAG,IAAI,CAAC;EACV;EACA,OAAOL,MAAM;AACf,CAAC,CAAC;AACF,eAAeJ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}