{"ast":null,"code":"import { complement } from 'ramda';\nimport _isFinite from './isFinite.js';\n\n/**\n * Checks whether the passed value is complement of finite `Number`.\n *\n *\n * @func isNotFinite\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/0.7.0|v0.7.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isFinite|isFinite}\n * @example\n *\n * RA.isNotFinite(Infinity); //=> true\n * RA.isNotFinite(NaN); //=> true\n * RA.isNotFinite(-Infinity); //=> true\n *\n * RA.isNotFinite(0); // false\n * RA.isNotFinite(2e64); // false\n *\n * RA.isNotFinite('0');  // => true\n * RA.isNotFinite(null); // => true\n */\nvar isNotFinite = complement(_isFinite);\nexport default isNotFinite;","map":{"version":3,"names":["complement","_isFinite","isNotFinite"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/isNotFinite.js"],"sourcesContent":["import { complement } from 'ramda';\nimport _isFinite from './isFinite.js';\n\n/**\n * Checks whether the passed value is complement of finite `Number`.\n *\n *\n * @func isNotFinite\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/0.7.0|v0.7.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isFinite|isFinite}\n * @example\n *\n * RA.isNotFinite(Infinity); //=> true\n * RA.isNotFinite(NaN); //=> true\n * RA.isNotFinite(-Infinity); //=> true\n *\n * RA.isNotFinite(0); // false\n * RA.isNotFinite(2e64); // false\n *\n * RA.isNotFinite('0');  // => true\n * RA.isNotFinite(null); // => true\n */\nvar isNotFinite = complement(_isFinite);\nexport default isNotFinite;"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,SAAS,MAAM,eAAe;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,WAAW,GAAGF,UAAU,CAACC,SAAS,CAAC;AACvC,eAAeC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}