{"ast":null,"code":"import { ACCEPT_HEADER_VALUE_FOR_DOCUMENTS } from '../../constants.js';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function makeFetchJSON(http, opts = {}) {\n  const {\n    requestInterceptor,\n    responseInterceptor\n  } = opts;\n  // Set credentials with 'http.withCredentials' value\n  const credentials = http.withCredentials ? 'include' : 'same-origin';\n  return docPath => http({\n    url: docPath,\n    loadSpec: true,\n    requestInterceptor,\n    responseInterceptor,\n    headers: {\n      Accept: ACCEPT_HEADER_VALUE_FOR_DOCUMENTS\n    },\n    credentials\n  }).then(res => res.body);\n}","map":{"version":3,"names":["ACCEPT_HEADER_VALUE_FOR_DOCUMENTS","makeFetchJSON","http","opts","requestInterceptor","responseInterceptor","credentials","withCredentials","docPath","url","loadSpec","headers","Accept","then","res","body"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/swagger-client/es/resolver/utils/index.js"],"sourcesContent":["import { ACCEPT_HEADER_VALUE_FOR_DOCUMENTS } from '../../constants.js';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function makeFetchJSON(http, opts = {}) {\n  const {\n    requestInterceptor,\n    responseInterceptor\n  } = opts;\n  // Set credentials with 'http.withCredentials' value\n  const credentials = http.withCredentials ? 'include' : 'same-origin';\n  return docPath => http({\n    url: docPath,\n    loadSpec: true,\n    requestInterceptor,\n    responseInterceptor,\n    headers: {\n      Accept: ACCEPT_HEADER_VALUE_FOR_DOCUMENTS\n    },\n    credentials\n  }).then(res => res.body);\n}"],"mappings":"AAAA,SAASA,iCAAiC,QAAQ,oBAAoB;;AAEtE;AACA,OAAO,SAASC,aAAaA,CAACC,IAAI,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EAC7C,MAAM;IACJC,kBAAkB;IAClBC;EACF,CAAC,GAAGF,IAAI;EACR;EACA,MAAMG,WAAW,GAAGJ,IAAI,CAACK,eAAe,GAAG,SAAS,GAAG,aAAa;EACpE,OAAOC,OAAO,IAAIN,IAAI,CAAC;IACrBO,GAAG,EAAED,OAAO;IACZE,QAAQ,EAAE,IAAI;IACdN,kBAAkB;IAClBC,mBAAmB;IACnBM,OAAO,EAAE;MACPC,MAAM,EAAEZ;IACV,CAAC;IACDM;EACF,CAAC,CAAC,CAACO,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}