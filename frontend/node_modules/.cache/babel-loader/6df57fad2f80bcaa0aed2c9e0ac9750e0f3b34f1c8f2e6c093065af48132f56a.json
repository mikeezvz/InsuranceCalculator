{"ast":null,"code":"import { curry, toPairs, pipe, map, over, lensIndex, fromPairs } from 'ramda';\n\n/**\n * Creates a new object with the own properties of the provided object, but the\n * keys renamed according to logic of renaming function.\n *\n * Keep in mind that in the case of keys conflict is behaviour undefined and\n * the result may vary between various JS engines!\n *\n * @func renameKeysWith\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.5.0|v1.5.0}\n * @category Object\n * @sig (a -> b) -> {a: *} -> {b: *}\n * @param {Function} fn Function that renames the keys\n * @param {!Object} obj Provided object\n * @return {!Object} New object with renamed keys\n * @see {@link https://github.com/ramda/ramda/wiki/Cookbook#rename-keys-of-an-object-by-a-function|Ramda Cookbook}, {@link RA.renameKeys|renameKeys}\n * @example\n *\n * RA.renameKeysWith(R.concat('a'), { A: 1, B: 2, C: 3 }) //=> { aA: 1, aB: 2, aC: 3 }\n */\nvar renameKeysWith = curry(function (fn, obj) {\n  return pipe(toPairs, map(over(lensIndex(0), fn)), fromPairs)(obj);\n});\nexport default renameKeysWith;","map":{"version":3,"names":["curry","toPairs","pipe","map","over","lensIndex","fromPairs","renameKeysWith","fn","obj"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/renameKeysWith.js"],"sourcesContent":["import { curry, toPairs, pipe, map, over, lensIndex, fromPairs } from 'ramda';\n\n/**\n * Creates a new object with the own properties of the provided object, but the\n * keys renamed according to logic of renaming function.\n *\n * Keep in mind that in the case of keys conflict is behaviour undefined and\n * the result may vary between various JS engines!\n *\n * @func renameKeysWith\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.5.0|v1.5.0}\n * @category Object\n * @sig (a -> b) -> {a: *} -> {b: *}\n * @param {Function} fn Function that renames the keys\n * @param {!Object} obj Provided object\n * @return {!Object} New object with renamed keys\n * @see {@link https://github.com/ramda/ramda/wiki/Cookbook#rename-keys-of-an-object-by-a-function|Ramda Cookbook}, {@link RA.renameKeys|renameKeys}\n * @example\n *\n * RA.renameKeysWith(R.concat('a'), { A: 1, B: 2, C: 3 }) //=> { aA: 1, aB: 2, aC: 3 }\n */\nvar renameKeysWith = curry(function (fn, obj) {\n  return pipe(toPairs, map(over(lensIndex(0), fn)), fromPairs)(obj);\n});\nexport default renameKeysWith;"],"mappings":"AAAA,SAASA,KAAK,EAAEC,OAAO,EAAEC,IAAI,EAAEC,GAAG,EAAEC,IAAI,EAAEC,SAAS,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,cAAc,GAAGP,KAAK,CAAC,UAAUQ,EAAE,EAAEC,GAAG,EAAE;EAC5C,OAAOP,IAAI,CAACD,OAAO,EAAEE,GAAG,CAACC,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC,EAAEG,EAAE,CAAC,CAAC,EAAEF,SAAS,CAAC,CAACG,GAAG,CAAC;AACnE,CAAC,CAAC;AACF,eAAeF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}