{"ast":null,"code":"import _isArray from \"./_isArray.js\";\nimport _isInteger from \"./_isInteger.js\";\n\n/**\n * Makes a shallow clone of an object, applying the given fn to the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @private\n * @param {String|Number} prop The property name to set\n * @param {Function} fn The function to apply to the property\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original except for the changed property.\n */\nexport default function _modify(prop, fn, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[prop] = fn(arr[prop]);\n    return arr;\n  }\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = fn(result[prop]);\n  return result;\n}","map":{"version":3,"names":["_isArray","_isInteger","_modify","prop","fn","obj","arr","concat","result","p"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda/es/internal/_modify.js"],"sourcesContent":["import _isArray from \"./_isArray.js\";\nimport _isInteger from \"./_isInteger.js\";\n\n/**\n * Makes a shallow clone of an object, applying the given fn to the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @private\n * @param {String|Number} prop The property name to set\n * @param {Function} fn The function to apply to the property\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original except for the changed property.\n */\nexport default function _modify(prop, fn, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[prop] = fn(arr[prop]);\n    return arr;\n  }\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = fn(result[prop]);\n  return result;\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,eAAe;AACpC,OAAOC,UAAU,MAAM,iBAAiB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,OAAOA,CAACC,IAAI,EAAEC,EAAE,EAAEC,GAAG,EAAE;EAC7C,IAAIJ,UAAU,CAACE,IAAI,CAAC,IAAIH,QAAQ,CAACK,GAAG,CAAC,EAAE;IACrC,IAAIC,GAAG,GAAG,EAAE,CAACC,MAAM,CAACF,GAAG,CAAC;IACxBC,GAAG,CAACH,IAAI,CAAC,GAAGC,EAAE,CAACE,GAAG,CAACH,IAAI,CAAC,CAAC;IACzB,OAAOG,GAAG;EACZ;EACA,IAAIE,MAAM,GAAG,CAAC,CAAC;EACf,KAAK,IAAIC,CAAC,IAAIJ,GAAG,EAAE;IACjBG,MAAM,CAACC,CAAC,CAAC,GAAGJ,GAAG,CAACI,CAAC,CAAC;EACpB;EACAD,MAAM,CAACL,IAAI,CAAC,GAAGC,EAAE,CAACI,MAAM,CAACL,IAAI,CAAC,CAAC;EAC/B,OAAOK,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}