{"ast":null,"code":"import { ResolverError, HTTPResolver } from '@swagger-api/apidom-reference/configuration/empty';\nimport '../../../../../../helpers/fetch-polyfill.node.js';\nimport '../../../../../../helpers/abortcontroller-polyfill.node.js';\nimport Http from '../../../../../../http/index.js';\nclass HTTPResolverSwaggerClient extends HTTPResolver {\n  swaggerHTTPClient = Http;\n  swaggerHTTPClientConfig;\n  constructor({\n    swaggerHTTPClient = Http,\n    swaggerHTTPClientConfig = {},\n    ...rest\n  } = {}) {\n    super({\n      ...rest,\n      name: 'http-swagger-client'\n    });\n    this.swaggerHTTPClient = swaggerHTTPClient;\n    this.swaggerHTTPClientConfig = swaggerHTTPClientConfig;\n  }\n  getHttpClient() {\n    return this.swaggerHTTPClient;\n  }\n  async read(file) {\n    const client = this.getHttpClient();\n    const controller = new AbortController();\n    const {\n      signal\n    } = controller;\n    const timeoutID = setTimeout(() => {\n      controller.abort();\n    }, this.timeout);\n    const credentials = this.getHttpClient().withCredentials || this.withCredentials ? 'include' : 'same-origin';\n    const redirect = this.redirects === 0 ? 'error' : 'follow';\n    const follow = this.redirects > 0 ? this.redirects : undefined;\n    try {\n      const response = await client({\n        url: file.uri,\n        signal,\n        userFetch: async (resource, options) => {\n          let res = await fetch(resource, options);\n          try {\n            // undici supports mutations\n            res.headers.delete('Content-Type');\n          } catch {\n            // Fetch API has guards which prevent mutations\n            res = new Response(res.body, {\n              ...res,\n              headers: new Headers(res.headers)\n            });\n            res.headers.delete('Content-Type');\n          }\n          return res;\n        },\n        credentials,\n        redirect,\n        follow,\n        ...this.swaggerHTTPClientConfig\n      });\n      return response.text.arrayBuffer();\n    } catch (error) {\n      throw new ResolverError(`Error downloading \"${file.uri}\"`, {\n        cause: error\n      });\n    } finally {\n      clearTimeout(timeoutID);\n    }\n  }\n}\nexport default HTTPResolverSwaggerClient;","map":{"version":3,"names":["ResolverError","HTTPResolver","Http","HTTPResolverSwaggerClient","swaggerHTTPClient","swaggerHTTPClientConfig","constructor","rest","name","getHttpClient","read","file","client","controller","AbortController","signal","timeoutID","setTimeout","abort","timeout","credentials","withCredentials","redirect","redirects","follow","undefined","response","url","uri","userFetch","resource","options","res","fetch","headers","delete","Response","body","Headers","text","arrayBuffer","error","cause","clearTimeout"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/swagger-client/es/resolver/apidom/reference/resolve/resolvers/http-swagger-client/index.js"],"sourcesContent":["import { ResolverError, HTTPResolver } from '@swagger-api/apidom-reference/configuration/empty';\nimport '../../../../../../helpers/fetch-polyfill.node.js';\nimport '../../../../../../helpers/abortcontroller-polyfill.node.js';\nimport Http from '../../../../../../http/index.js';\nclass HTTPResolverSwaggerClient extends HTTPResolver {\n  swaggerHTTPClient = Http;\n  swaggerHTTPClientConfig;\n  constructor({\n    swaggerHTTPClient = Http,\n    swaggerHTTPClientConfig = {},\n    ...rest\n  } = {}) {\n    super({\n      ...rest,\n      name: 'http-swagger-client'\n    });\n    this.swaggerHTTPClient = swaggerHTTPClient;\n    this.swaggerHTTPClientConfig = swaggerHTTPClientConfig;\n  }\n  getHttpClient() {\n    return this.swaggerHTTPClient;\n  }\n  async read(file) {\n    const client = this.getHttpClient();\n    const controller = new AbortController();\n    const {\n      signal\n    } = controller;\n    const timeoutID = setTimeout(() => {\n      controller.abort();\n    }, this.timeout);\n    const credentials = this.getHttpClient().withCredentials || this.withCredentials ? 'include' : 'same-origin';\n    const redirect = this.redirects === 0 ? 'error' : 'follow';\n    const follow = this.redirects > 0 ? this.redirects : undefined;\n    try {\n      const response = await client({\n        url: file.uri,\n        signal,\n        userFetch: async (resource, options) => {\n          let res = await fetch(resource, options);\n          try {\n            // undici supports mutations\n            res.headers.delete('Content-Type');\n          } catch {\n            // Fetch API has guards which prevent mutations\n            res = new Response(res.body, {\n              ...res,\n              headers: new Headers(res.headers)\n            });\n            res.headers.delete('Content-Type');\n          }\n          return res;\n        },\n        credentials,\n        redirect,\n        follow,\n        ...this.swaggerHTTPClientConfig\n      });\n      return response.text.arrayBuffer();\n    } catch (error) {\n      throw new ResolverError(`Error downloading \"${file.uri}\"`, {\n        cause: error\n      });\n    } finally {\n      clearTimeout(timeoutID);\n    }\n  }\n}\nexport default HTTPResolverSwaggerClient;"],"mappings":"AAAA,SAASA,aAAa,EAAEC,YAAY,QAAQ,mDAAmD;AAC/F,OAAO,kDAAkD;AACzD,OAAO,4DAA4D;AACnE,OAAOC,IAAI,MAAM,iCAAiC;AAClD,MAAMC,yBAAyB,SAASF,YAAY,CAAC;EACnDG,iBAAiB,GAAGF,IAAI;EACxBG,uBAAuB;EACvBC,WAAWA,CAAC;IACVF,iBAAiB,GAAGF,IAAI;IACxBG,uBAAuB,GAAG,CAAC,CAAC;IAC5B,GAAGE;EACL,CAAC,GAAG,CAAC,CAAC,EAAE;IACN,KAAK,CAAC;MACJ,GAAGA,IAAI;MACPC,IAAI,EAAE;IACR,CAAC,CAAC;IACF,IAAI,CAACJ,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACC,uBAAuB,GAAGA,uBAAuB;EACxD;EACAI,aAAaA,CAAA,EAAG;IACd,OAAO,IAAI,CAACL,iBAAiB;EAC/B;EACA,MAAMM,IAAIA,CAACC,IAAI,EAAE;IACf,MAAMC,MAAM,GAAG,IAAI,CAACH,aAAa,CAAC,CAAC;IACnC,MAAMI,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;IACxC,MAAM;MACJC;IACF,CAAC,GAAGF,UAAU;IACd,MAAMG,SAAS,GAAGC,UAAU,CAAC,MAAM;MACjCJ,UAAU,CAACK,KAAK,CAAC,CAAC;IACpB,CAAC,EAAE,IAAI,CAACC,OAAO,CAAC;IAChB,MAAMC,WAAW,GAAG,IAAI,CAACX,aAAa,CAAC,CAAC,CAACY,eAAe,IAAI,IAAI,CAACA,eAAe,GAAG,SAAS,GAAG,aAAa;IAC5G,MAAMC,QAAQ,GAAG,IAAI,CAACC,SAAS,KAAK,CAAC,GAAG,OAAO,GAAG,QAAQ;IAC1D,MAAMC,MAAM,GAAG,IAAI,CAACD,SAAS,GAAG,CAAC,GAAG,IAAI,CAACA,SAAS,GAAGE,SAAS;IAC9D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,MAAM,CAAC;QAC5Be,GAAG,EAAEhB,IAAI,CAACiB,GAAG;QACbb,MAAM;QACNc,SAAS,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,OAAO,KAAK;UACtC,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAACH,QAAQ,EAAEC,OAAO,CAAC;UACxC,IAAI;YACF;YACAC,GAAG,CAACE,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC;UACpC,CAAC,CAAC,MAAM;YACN;YACAH,GAAG,GAAG,IAAII,QAAQ,CAACJ,GAAG,CAACK,IAAI,EAAE;cAC3B,GAAGL,GAAG;cACNE,OAAO,EAAE,IAAII,OAAO,CAACN,GAAG,CAACE,OAAO;YAClC,CAAC,CAAC;YACFF,GAAG,CAACE,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC;UACpC;UACA,OAAOH,GAAG;QACZ,CAAC;QACDZ,WAAW;QACXE,QAAQ;QACRE,MAAM;QACN,GAAG,IAAI,CAACnB;MACV,CAAC,CAAC;MACF,OAAOqB,QAAQ,CAACa,IAAI,CAACC,WAAW,CAAC,CAAC;IACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIzC,aAAa,CAAC,sBAAsBW,IAAI,CAACiB,GAAG,GAAG,EAAE;QACzDc,KAAK,EAAED;MACT,CAAC,CAAC;IACJ,CAAC,SAAS;MACRE,YAAY,CAAC3B,SAAS,CAAC;IACzB;EACF;AACF;AACA,eAAeb,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}