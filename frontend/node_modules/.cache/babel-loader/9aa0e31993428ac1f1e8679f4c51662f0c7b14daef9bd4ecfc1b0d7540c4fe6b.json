{"ast":null,"code":"import { curry } from 'ramda';\nimport invokeArgs from './invokeArgs.js';\n\n/**\n * Checks if an object exists in another object's prototype chain.\n *\n * @func isPrototypeOf\n * @category Object\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.31.0|v2.31.0}\n * @sig * -> Boolean\n * @param {Object} type The prototype that we're searching for\n * @param {Object} object The object whose prototype chain will be searched\n * @return {boolean}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf|Object.prorotype.isPrototypeOf}\n * @example\n * function Foo() {}\n * function Bar() {}\n * function Baz() {}\n *\n * Bar.prototype = Object.create(Foo.prototype);\n * Baz.prototype = Object.create(Bar.prototype);\n *\n * const baz = new Baz();\n *\n * RA.isPrototypeOf(Baz, baz); // => true\n * RA.isPrototypeOf(Bar, baz); // => true\n * RA.isPrototypeOf(Foo, baz); // => true\n * RA.isPrototypeOf(Object, baz); // => true\n */\nvar isPrototypeOf = curry(function (type, object) {\n  return Boolean(invokeArgs(['prototype', 'isPrototypeOf'], [object], type));\n});\nexport default isPrototypeOf;","map":{"version":3,"names":["curry","invokeArgs","isPrototypeOf","type","object","Boolean"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/isPrototypeOf.js"],"sourcesContent":["import { curry } from 'ramda';\nimport invokeArgs from './invokeArgs.js';\n\n/**\n * Checks if an object exists in another object's prototype chain.\n *\n * @func isPrototypeOf\n * @category Object\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.31.0|v2.31.0}\n * @sig * -> Boolean\n * @param {Object} type The prototype that we're searching for\n * @param {Object} object The object whose prototype chain will be searched\n * @return {boolean}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf|Object.prorotype.isPrototypeOf}\n * @example\n * function Foo() {}\n * function Bar() {}\n * function Baz() {}\n *\n * Bar.prototype = Object.create(Foo.prototype);\n * Baz.prototype = Object.create(Bar.prototype);\n *\n * const baz = new Baz();\n *\n * RA.isPrototypeOf(Baz, baz); // => true\n * RA.isPrototypeOf(Bar, baz); // => true\n * RA.isPrototypeOf(Foo, baz); // => true\n * RA.isPrototypeOf(Object, baz); // => true\n */\nvar isPrototypeOf = curry(function (type, object) {\n  return Boolean(invokeArgs(['prototype', 'isPrototypeOf'], [object], type));\n});\nexport default isPrototypeOf;"],"mappings":"AAAA,SAASA,KAAK,QAAQ,OAAO;AAC7B,OAAOC,UAAU,MAAM,iBAAiB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,aAAa,GAAGF,KAAK,CAAC,UAAUG,IAAI,EAAEC,MAAM,EAAE;EAChD,OAAOC,OAAO,CAACJ,UAAU,CAAC,CAAC,WAAW,EAAE,eAAe,CAAC,EAAE,CAACG,MAAM,CAAC,EAAED,IAAI,CAAC,CAAC;AAC5E,CAAC,CAAC;AACF,eAAeD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}