{"ast":null,"code":"import _curry2 from \"./internal/_curry2.js\";\nimport _filter from \"./internal/_filter.js\";\nimport _Set from \"./internal/_Set.js\";\nimport uniq from \"./uniq.js\";\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nvar intersection = /*#__PURE__*/_curry2(function intersection(list1, list2) {\n  var toKeep = new _Set();\n  for (var i = 0; i < list1.length; i += 1) {\n    toKeep.add(list1[i]);\n  }\n  return uniq(_filter(toKeep.has.bind(toKeep), list2));\n});\nexport default intersection;","map":{"version":3,"names":["_curry2","_filter","_Set","uniq","intersection","list1","list2","toKeep","i","length","add","has","bind"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda/es/intersection.js"],"sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\nimport _filter from \"./internal/_filter.js\";\nimport _Set from \"./internal/_Set.js\";\nimport uniq from \"./uniq.js\";\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nvar intersection = /*#__PURE__*/_curry2(function intersection(list1, list2) {\n  var toKeep = new _Set();\n  for (var i = 0; i < list1.length; i += 1) {\n    toKeep.add(list1[i]);\n  }\n  return uniq(_filter(toKeep.has.bind(toKeep), list2));\n});\nexport default intersection;"],"mappings":"AAAA,OAAOA,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,WAAW;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,YAAY,GAAG,aAAaJ,OAAO,CAAC,SAASI,YAAYA,CAACC,KAAK,EAAEC,KAAK,EAAE;EAC1E,IAAIC,MAAM,GAAG,IAAIL,IAAI,CAAC,CAAC;EACvB,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACxCD,MAAM,CAACG,GAAG,CAACL,KAAK,CAACG,CAAC,CAAC,CAAC;EACtB;EACA,OAAOL,IAAI,CAACF,OAAO,CAACM,MAAM,CAACI,GAAG,CAACC,IAAI,CAACL,MAAM,CAAC,EAAED,KAAK,CAAC,CAAC;AACtD,CAAC,CAAC;AACF,eAAeF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}