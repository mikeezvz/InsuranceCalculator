{"ast":null,"code":"import { pipe, uniq, curryN } from 'ramda';\nimport lengthLte from './lengthLte.js';\n\n// Original idea for this function was conceived by https://github.com/jackmellis\n// in https://github.com/char0n/ramda-adjunct/pull/513.\n\n/**\n * Returns true if all items in the list are equivalent using `R.equals` for equality comparisons.\n *\n * @func allEqual\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.9.0|v2.9.0}\n * @category List\n * @sig [a] -> Boolean\n * @param {Array} list The list of values\n * @return {boolean}\n * @see {@link https://ramdajs.com/docs/#equals|equals}\n * @example\n *\n * RA.allEqual([ 1, 2, 3, 4 ]); //=> false\n * RA.allEqual([ 1, 1, 1, 1 ]); //=> true\n * RA.allEqual([]); //=> true\n *\n */\nvar allEqual = curryN(1, pipe(uniq, lengthLte(1)));\nexport default allEqual;","map":{"version":3,"names":["pipe","uniq","curryN","lengthLte","allEqual"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/allEqual.js"],"sourcesContent":["import { pipe, uniq, curryN } from 'ramda';\nimport lengthLte from './lengthLte.js';\n\n// Original idea for this function was conceived by https://github.com/jackmellis\n// in https://github.com/char0n/ramda-adjunct/pull/513.\n\n/**\n * Returns true if all items in the list are equivalent using `R.equals` for equality comparisons.\n *\n * @func allEqual\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.9.0|v2.9.0}\n * @category List\n * @sig [a] -> Boolean\n * @param {Array} list The list of values\n * @return {boolean}\n * @see {@link https://ramdajs.com/docs/#equals|equals}\n * @example\n *\n * RA.allEqual([ 1, 2, 3, 4 ]); //=> false\n * RA.allEqual([ 1, 1, 1, 1 ]); //=> true\n * RA.allEqual([]); //=> true\n *\n */\nvar allEqual = curryN(1, pipe(uniq, lengthLte(1)));\nexport default allEqual;"],"mappings":"AAAA,SAASA,IAAI,EAAEC,IAAI,EAAEC,MAAM,QAAQ,OAAO;AAC1C,OAAOC,SAAS,MAAM,gBAAgB;;AAEtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,QAAQ,GAAGF,MAAM,CAAC,CAAC,EAAEF,IAAI,CAACC,IAAI,EAAEE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,eAAeC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}