{"ast":null,"code":"import curryN from \"./internal/_curryN.js\";\n\n/**\n * Takes a binary function `f`, a unary function `g`, and two values.\n * Applies `g` to each value, then applies the result of each to `f`.\n *\n * Also known as the P combinator.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig ((a, a) -> b) -> (c -> a) -> c -> c -> b\n * @param {Function} f a binary function\n * @param {Function} g a unary function\n * @param {any} a any value\n * @param {any} b any value\n * @return {any} The result of `f`\n * @example\n *\n *      const eqBy = R.on((a, b) => a === b);\n *      eqBy(R.prop('a'), {b:0, a:1}, {a:1}) //=> true;\n *\n *      const containsInsensitive = R.on(R.includes, R.toLower);\n *      containsInsensitive('o', 'FOO'); //=> true\n * @symb R.on(f, g, a, b) = f(g(a), g(b))\n */\nvar on = /*#__PURE__*/curryN(4, [], function on(f, g, a, b) {\n  return f(g(a), g(b));\n});\nexport default on;","map":{"version":3,"names":["curryN","on","f","g","a","b"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda/es/on.js"],"sourcesContent":["import curryN from \"./internal/_curryN.js\";\n\n/**\n * Takes a binary function `f`, a unary function `g`, and two values.\n * Applies `g` to each value, then applies the result of each to `f`.\n *\n * Also known as the P combinator.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig ((a, a) -> b) -> (c -> a) -> c -> c -> b\n * @param {Function} f a binary function\n * @param {Function} g a unary function\n * @param {any} a any value\n * @param {any} b any value\n * @return {any} The result of `f`\n * @example\n *\n *      const eqBy = R.on((a, b) => a === b);\n *      eqBy(R.prop('a'), {b:0, a:1}, {a:1}) //=> true;\n *\n *      const containsInsensitive = R.on(R.includes, R.toLower);\n *      containsInsensitive('o', 'FOO'); //=> true\n * @symb R.on(f, g, a, b) = f(g(a), g(b))\n */\nvar on = /*#__PURE__*/curryN(4, [], function on(f, g, a, b) {\n  return f(g(a), g(b));\n});\nexport default on;"],"mappings":"AAAA,OAAOA,MAAM,MAAM,uBAAuB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,EAAE,GAAG,aAAaD,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,SAASC,EAAEA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EAC1D,OAAOH,CAAC,CAACC,CAAC,CAACC,CAAC,CAAC,EAAED,CAAC,CAACE,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC;AACF,eAAeJ,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}