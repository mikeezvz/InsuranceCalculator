{"ast":null,"code":"import _curry2 from \"./internal/_curry2.js\";\nimport _dissoc from \"./internal/_dissoc.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport assoc from \"./assoc.js\";\n\n/**\n * Makes a shallow clone of an object. Note that this copies and flattens\n * prototype properties onto the new object as well. All non-primitive\n * properties are copied by reference.\n *\n * @private\n * @param {String|Integer} prop The prop operating\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original.\n */\nfunction _shallowCloneObject(prop, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    return [].concat(obj);\n  }\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  return result;\n}\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nvar dissocPath = /*#__PURE__*/_curry2(function dissocPath(path, obj) {\n  if (obj == null) {\n    return obj;\n  }\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return _dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      if (obj[head] == null) {\n        return _shallowCloneObject(head, obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n  }\n});\nexport default dissocPath;","map":{"version":3,"names":["_curry2","_dissoc","_isInteger","_isArray","assoc","_shallowCloneObject","prop","obj","concat","result","p","dissocPath","path","length","head","tail","Array","prototype","slice","call"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda/es/dissocPath.js"],"sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\nimport _dissoc from \"./internal/_dissoc.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport assoc from \"./assoc.js\";\n\n/**\n * Makes a shallow clone of an object. Note that this copies and flattens\n * prototype properties onto the new object as well. All non-primitive\n * properties are copied by reference.\n *\n * @private\n * @param {String|Integer} prop The prop operating\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original.\n */\nfunction _shallowCloneObject(prop, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    return [].concat(obj);\n  }\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  return result;\n}\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nvar dissocPath = /*#__PURE__*/_curry2(function dissocPath(path, obj) {\n  if (obj == null) {\n    return obj;\n  }\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return _dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      if (obj[head] == null) {\n        return _shallowCloneObject(head, obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n  }\n});\nexport default dissocPath;"],"mappings":"AAAA,OAAOA,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,YAAY;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,mBAAmBA,CAACC,IAAI,EAAEC,GAAG,EAAE;EACtC,IAAIL,UAAU,CAACI,IAAI,CAAC,IAAIH,QAAQ,CAACI,GAAG,CAAC,EAAE;IACrC,OAAO,EAAE,CAACC,MAAM,CAACD,GAAG,CAAC;EACvB;EACA,IAAIE,MAAM,GAAG,CAAC,CAAC;EACf,KAAK,IAAIC,CAAC,IAAIH,GAAG,EAAE;IACjBE,MAAM,CAACC,CAAC,CAAC,GAAGH,GAAG,CAACG,CAAC,CAAC;EACpB;EACA,OAAOD,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIE,UAAU,GAAG,aAAaX,OAAO,CAAC,SAASW,UAAUA,CAACC,IAAI,EAAEL,GAAG,EAAE;EACnE,IAAIA,GAAG,IAAI,IAAI,EAAE;IACf,OAAOA,GAAG;EACZ;EACA,QAAQK,IAAI,CAACC,MAAM;IACjB,KAAK,CAAC;MACJ,OAAON,GAAG;IACZ,KAAK,CAAC;MACJ,OAAON,OAAO,CAACW,IAAI,CAAC,CAAC,CAAC,EAAEL,GAAG,CAAC;IAC9B;MACE,IAAIO,IAAI,GAAGF,IAAI,CAAC,CAAC,CAAC;MAClB,IAAIG,IAAI,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACP,IAAI,EAAE,CAAC,CAAC;MAC9C,IAAIL,GAAG,CAACO,IAAI,CAAC,IAAI,IAAI,EAAE;QACrB,OAAOT,mBAAmB,CAACS,IAAI,EAAEP,GAAG,CAAC;MACvC,CAAC,MAAM;QACL,OAAOH,KAAK,CAACU,IAAI,EAAEH,UAAU,CAACI,IAAI,EAAER,GAAG,CAACO,IAAI,CAAC,CAAC,EAAEP,GAAG,CAAC;MACtD;EACJ;AACF,CAAC,CAAC;AACF,eAAeI,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}