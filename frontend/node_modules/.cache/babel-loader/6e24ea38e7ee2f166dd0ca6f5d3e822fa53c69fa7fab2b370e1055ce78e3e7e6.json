{"ast":null,"code":"import { complement } from 'ramda';\nimport isAsyncFunction from './isAsyncFunction.js';\n\n/* eslint-disable max-len */\n/**\n * Checks if input value is complement of `Async Function`\n *\n * @func isNotAsyncFunction\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/0.5.0|v0.5.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isFunction|isFunction}, {@link RA.isAsyncFunction|isAsyncFunction}, {@link RA.isGeneratorFunction|isGeneratorFunction}\n * @example\n *\n * RA.isNotAsyncFunction(async function test() { }); //=> false\n * RA.isNotAsyncFunction(null); //=> true\n * RA.isNotAsyncFunction(function test() { }); //=> true\n * RA.isNotAsyncFunction(() => {}); //=> true\n */\n/* eslint-enable max-len */\nvar isNotAsyncFunction = complement(isAsyncFunction);\nexport default isNotAsyncFunction;","map":{"version":3,"names":["complement","isAsyncFunction","isNotAsyncFunction"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/isNotAsyncFunction.js"],"sourcesContent":["import { complement } from 'ramda';\nimport isAsyncFunction from './isAsyncFunction.js';\n\n/* eslint-disable max-len */\n/**\n * Checks if input value is complement of `Async Function`\n *\n * @func isNotAsyncFunction\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/0.5.0|v0.5.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isFunction|isFunction}, {@link RA.isAsyncFunction|isAsyncFunction}, {@link RA.isGeneratorFunction|isGeneratorFunction}\n * @example\n *\n * RA.isNotAsyncFunction(async function test() { }); //=> false\n * RA.isNotAsyncFunction(null); //=> true\n * RA.isNotAsyncFunction(function test() { }); //=> true\n * RA.isNotAsyncFunction(() => {}); //=> true\n */\n/* eslint-enable max-len */\nvar isNotAsyncFunction = complement(isAsyncFunction);\nexport default isNotAsyncFunction;"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,eAAe,MAAM,sBAAsB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,kBAAkB,GAAGF,UAAU,CAACC,eAAe,CAAC;AACpD,eAAeC,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}