{"ast":null,"code":"import _AggregateError from \"@babel/runtime-corejs3/core-js/aggregate-error\";\nclass ApiDOMAggregateError extends _AggregateError {\n  constructor(errors, message, options) {\n    super(errors, message, options);\n    this.name = this.constructor.name;\n    if (typeof message === 'string') {\n      this.message = message;\n    }\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      this.stack = new Error(message).stack;\n    }\n\n    /**\n     * This needs to stay here until our minimum supported version of Node.js is >= 16.9.0.\n     * Node.js >= 16.9.0 supports error causes natively.\n     */\n    if (options != null && typeof options === 'object' && Object.hasOwn(options, 'cause') && !('cause' in this)) {\n      const {\n        cause\n      } = options;\n      this.cause = cause;\n      if (cause instanceof Error && 'stack' in cause) {\n        this.stack = `${this.stack}\\nCAUSE: ${cause.stack}`;\n      }\n    }\n  }\n}\nexport default ApiDOMAggregateError;","map":{"version":3,"names":["_AggregateError","ApiDOMAggregateError","constructor","errors","message","options","name","Error","captureStackTrace","stack","Object","hasOwn","cause"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/@swagger-api/apidom-error/es/ApiDOMAggregateError.mjs"],"sourcesContent":["import _AggregateError from \"@babel/runtime-corejs3/core-js/aggregate-error\";\nclass ApiDOMAggregateError extends _AggregateError {\n  constructor(errors, message, options) {\n    super(errors, message, options);\n    this.name = this.constructor.name;\n    if (typeof message === 'string') {\n      this.message = message;\n    }\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      this.stack = new Error(message).stack;\n    }\n\n    /**\n     * This needs to stay here until our minimum supported version of Node.js is >= 16.9.0.\n     * Node.js >= 16.9.0 supports error causes natively.\n     */\n    if (options != null && typeof options === 'object' && Object.hasOwn(options, 'cause') && !('cause' in this)) {\n      const {\n        cause\n      } = options;\n      this.cause = cause;\n      if (cause instanceof Error && 'stack' in cause) {\n        this.stack = `${this.stack}\\nCAUSE: ${cause.stack}`;\n      }\n    }\n  }\n}\nexport default ApiDOMAggregateError;"],"mappings":"AAAA,OAAOA,eAAe,MAAM,gDAAgD;AAC5E,MAAMC,oBAAoB,SAASD,eAAe,CAAC;EACjDE,WAAWA,CAACC,MAAM,EAAEC,OAAO,EAAEC,OAAO,EAAE;IACpC,KAAK,CAACF,MAAM,EAAEC,OAAO,EAAEC,OAAO,CAAC;IAC/B,IAAI,CAACC,IAAI,GAAG,IAAI,CAACJ,WAAW,CAACI,IAAI;IACjC,IAAI,OAAOF,OAAO,KAAK,QAAQ,EAAE;MAC/B,IAAI,CAACA,OAAO,GAAGA,OAAO;IACxB;IACA,IAAI,OAAOG,KAAK,CAACC,iBAAiB,KAAK,UAAU,EAAE;MACjDD,KAAK,CAACC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACN,WAAW,CAAC;IACjD,CAAC,MAAM;MACL,IAAI,CAACO,KAAK,GAAG,IAAIF,KAAK,CAACH,OAAO,CAAC,CAACK,KAAK;IACvC;;IAEA;AACJ;AACA;AACA;IACI,IAAIJ,OAAO,IAAI,IAAI,IAAI,OAAOA,OAAO,KAAK,QAAQ,IAAIK,MAAM,CAACC,MAAM,CAACN,OAAO,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,IAAI,IAAI,CAAC,EAAE;MAC3G,MAAM;QACJO;MACF,CAAC,GAAGP,OAAO;MACX,IAAI,CAACO,KAAK,GAAGA,KAAK;MAClB,IAAIA,KAAK,YAAYL,KAAK,IAAI,OAAO,IAAIK,KAAK,EAAE;QAC9C,IAAI,CAACH,KAAK,GAAG,GAAG,IAAI,CAACA,KAAK,YAAYG,KAAK,CAACH,KAAK,EAAE;MACrD;IACF;EACF;AACF;AACA,eAAeR,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}