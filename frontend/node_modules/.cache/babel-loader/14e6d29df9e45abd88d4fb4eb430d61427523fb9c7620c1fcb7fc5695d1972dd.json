{"ast":null,"code":"const negate = require('lodash/negate');\nconst ArraySlice = require('./ArraySlice');\n\n/**\n */\nclass ObjectSlice extends ArraySlice {\n  map(callback, thisArg) {\n    return this.elements.map(member => callback.bind(thisArg)(member.value, member.key, member));\n  }\n  filter(callback, thisArg) {\n    return new ObjectSlice(this.elements.filter(member => callback.bind(thisArg)(member.value, member.key, member)));\n  }\n  reject(callback, thisArg) {\n    return this.filter(negate(callback.bind(thisArg)));\n  }\n  forEach(callback, thisArg) {\n    return this.elements.forEach((member, index) => {\n      callback.bind(thisArg)(member.value, member.key, member, index);\n    });\n  }\n\n  /**\n   * @returns {array}\n   */\n  keys() {\n    return this.map((value, key) => key.toValue());\n  }\n\n  /**\n   * @returns {array}\n   */\n  values() {\n    return this.map(value => value.toValue());\n  }\n}\nmodule.exports = ObjectSlice;","map":{"version":3,"names":["negate","require","ArraySlice","ObjectSlice","map","callback","thisArg","elements","member","bind","value","key","filter","reject","forEach","index","keys","toValue","values","module","exports"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/minim/lib/ObjectSlice.js"],"sourcesContent":["const negate = require('lodash/negate');\nconst ArraySlice = require('./ArraySlice');\n\n/**\n */\nclass ObjectSlice extends ArraySlice {\n  map(callback, thisArg) {\n    return this.elements.map(member => callback.bind(thisArg)(member.value, member.key, member));\n  }\n\n  filter(callback, thisArg) {\n    return new ObjectSlice(this.elements.filter(member => callback.bind(thisArg)(member.value, member.key, member)));\n  }\n\n  reject(callback, thisArg) {\n    return this.filter(negate(callback.bind(thisArg)));\n  }\n\n  forEach(callback, thisArg) {\n    return this.elements.forEach((member, index) => { callback.bind(thisArg)(member.value, member.key, member, index); });\n  }\n\n  /**\n   * @returns {array}\n   */\n  keys() {\n    return this.map((value, key) => key.toValue());\n  }\n\n  /**\n   * @returns {array}\n   */\n  values() {\n    return this.map(value => value.toValue());\n  }\n}\n\nmodule.exports = ObjectSlice;\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,eAAe,CAAC;AACvC,MAAMC,UAAU,GAAGD,OAAO,CAAC,cAAc,CAAC;;AAE1C;AACA;AACA,MAAME,WAAW,SAASD,UAAU,CAAC;EACnCE,GAAGA,CAACC,QAAQ,EAAEC,OAAO,EAAE;IACrB,OAAO,IAAI,CAACC,QAAQ,CAACH,GAAG,CAACI,MAAM,IAAIH,QAAQ,CAACI,IAAI,CAACH,OAAO,CAAC,CAACE,MAAM,CAACE,KAAK,EAAEF,MAAM,CAACG,GAAG,EAAEH,MAAM,CAAC,CAAC;EAC9F;EAEAI,MAAMA,CAACP,QAAQ,EAAEC,OAAO,EAAE;IACxB,OAAO,IAAIH,WAAW,CAAC,IAAI,CAACI,QAAQ,CAACK,MAAM,CAACJ,MAAM,IAAIH,QAAQ,CAACI,IAAI,CAACH,OAAO,CAAC,CAACE,MAAM,CAACE,KAAK,EAAEF,MAAM,CAACG,GAAG,EAAEH,MAAM,CAAC,CAAC,CAAC;EAClH;EAEAK,MAAMA,CAACR,QAAQ,EAAEC,OAAO,EAAE;IACxB,OAAO,IAAI,CAACM,MAAM,CAACZ,MAAM,CAACK,QAAQ,CAACI,IAAI,CAACH,OAAO,CAAC,CAAC,CAAC;EACpD;EAEAQ,OAAOA,CAACT,QAAQ,EAAEC,OAAO,EAAE;IACzB,OAAO,IAAI,CAACC,QAAQ,CAACO,OAAO,CAAC,CAACN,MAAM,EAAEO,KAAK,KAAK;MAAEV,QAAQ,CAACI,IAAI,CAACH,OAAO,CAAC,CAACE,MAAM,CAACE,KAAK,EAAEF,MAAM,CAACG,GAAG,EAAEH,MAAM,EAAEO,KAAK,CAAC;IAAE,CAAC,CAAC;EACvH;;EAEA;AACF;AACA;EACEC,IAAIA,CAAA,EAAG;IACL,OAAO,IAAI,CAACZ,GAAG,CAAC,CAACM,KAAK,EAAEC,GAAG,KAAKA,GAAG,CAACM,OAAO,CAAC,CAAC,CAAC;EAChD;;EAEA;AACF;AACA;EACEC,MAAMA,CAAA,EAAG;IACP,OAAO,IAAI,CAACd,GAAG,CAACM,KAAK,IAAIA,KAAK,CAACO,OAAO,CAAC,CAAC,CAAC;EAC3C;AACF;AAEAE,MAAM,CAACC,OAAO,GAAGjB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}