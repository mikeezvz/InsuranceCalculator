{"ast":null,"code":"import parse from \"./parse/index.mjs\";\nconst isEncoded = parameterValue => {\n  try {\n    return typeof parameterValue === 'string' && decodeURIComponent(parameterValue) !== parameterValue;\n  } catch {\n    return false;\n  }\n};\nexport const encodePathComponent = parameterValue => {\n  if (isEncoded(parameterValue)) {\n    return parameterValue;\n  }\n  return encodeURIComponent(parameterValue).replace(/%5B/g, '[').replace(/%5D/g, ']');\n};\nconst significantTypes = ['slash', 'path-literal', 'query-marker', 'query-literal', 'template-expression-param-name'];\nconst resolve = (pathTemplate, parameters, options = {}) => {\n  const defaultOptions = {\n    encoder: encodePathComponent\n  };\n  const mergedOptions = {\n    ...defaultOptions,\n    ...options\n  };\n  const parseResult = parse(pathTemplate);\n  if (!parseResult.result.success) return pathTemplate;\n  const parts = [];\n  parseResult.ast.translate(parts);\n  const resolvedParts = parts.filter(([type]) => significantTypes.includes(type)).map(([type, value]) => {\n    if (type === 'template-expression-param-name') {\n      return Object.hasOwn(parameters, value) ? mergedOptions.encoder(parameters[value], value) : `{${value}}`;\n    }\n    return value;\n  });\n  return resolvedParts.join('');\n};\nexport default resolve;","map":{"version":3,"names":["parse","isEncoded","parameterValue","decodeURIComponent","encodePathComponent","encodeURIComponent","replace","significantTypes","resolve","pathTemplate","parameters","options","defaultOptions","encoder","mergedOptions","parseResult","result","success","parts","ast","translate","resolvedParts","filter","type","includes","map","value","Object","hasOwn","join"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/openapi-path-templating/es/resolve.mjs"],"sourcesContent":["import parse from \"./parse/index.mjs\";\nconst isEncoded = parameterValue => {\n  try {\n    return typeof parameterValue === 'string' && decodeURIComponent(parameterValue) !== parameterValue;\n  } catch {\n    return false;\n  }\n};\nexport const encodePathComponent = parameterValue => {\n  if (isEncoded(parameterValue)) {\n    return parameterValue;\n  }\n  return encodeURIComponent(parameterValue).replace(/%5B/g, '[').replace(/%5D/g, ']');\n};\nconst significantTypes = ['slash', 'path-literal', 'query-marker', 'query-literal', 'template-expression-param-name'];\nconst resolve = (pathTemplate, parameters, options = {}) => {\n  const defaultOptions = {\n    encoder: encodePathComponent\n  };\n  const mergedOptions = {\n    ...defaultOptions,\n    ...options\n  };\n  const parseResult = parse(pathTemplate);\n  if (!parseResult.result.success) return pathTemplate;\n  const parts = [];\n  parseResult.ast.translate(parts);\n  const resolvedParts = parts.filter(([type]) => significantTypes.includes(type)).map(([type, value]) => {\n    if (type === 'template-expression-param-name') {\n      return Object.hasOwn(parameters, value) ? mergedOptions.encoder(parameters[value], value) : `{${value}}`;\n    }\n    return value;\n  });\n  return resolvedParts.join('');\n};\nexport default resolve;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,mBAAmB;AACrC,MAAMC,SAAS,GAAGC,cAAc,IAAI;EAClC,IAAI;IACF,OAAO,OAAOA,cAAc,KAAK,QAAQ,IAAIC,kBAAkB,CAACD,cAAc,CAAC,KAAKA,cAAc;EACpG,CAAC,CAAC,MAAM;IACN,OAAO,KAAK;EACd;AACF,CAAC;AACD,OAAO,MAAME,mBAAmB,GAAGF,cAAc,IAAI;EACnD,IAAID,SAAS,CAACC,cAAc,CAAC,EAAE;IAC7B,OAAOA,cAAc;EACvB;EACA,OAAOG,kBAAkB,CAACH,cAAc,CAAC,CAACI,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;AACrF,CAAC;AACD,MAAMC,gBAAgB,GAAG,CAAC,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,eAAe,EAAE,gCAAgC,CAAC;AACrH,MAAMC,OAAO,GAAGA,CAACC,YAAY,EAAEC,UAAU,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAC1D,MAAMC,cAAc,GAAG;IACrBC,OAAO,EAAET;EACX,CAAC;EACD,MAAMU,aAAa,GAAG;IACpB,GAAGF,cAAc;IACjB,GAAGD;EACL,CAAC;EACD,MAAMI,WAAW,GAAGf,KAAK,CAACS,YAAY,CAAC;EACvC,IAAI,CAACM,WAAW,CAACC,MAAM,CAACC,OAAO,EAAE,OAAOR,YAAY;EACpD,MAAMS,KAAK,GAAG,EAAE;EAChBH,WAAW,CAACI,GAAG,CAACC,SAAS,CAACF,KAAK,CAAC;EAChC,MAAMG,aAAa,GAAGH,KAAK,CAACI,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,KAAKhB,gBAAgB,CAACiB,QAAQ,CAACD,IAAI,CAAC,CAAC,CAACE,GAAG,CAAC,CAAC,CAACF,IAAI,EAAEG,KAAK,CAAC,KAAK;IACrG,IAAIH,IAAI,KAAK,gCAAgC,EAAE;MAC7C,OAAOI,MAAM,CAACC,MAAM,CAAClB,UAAU,EAAEgB,KAAK,CAAC,GAAGZ,aAAa,CAACD,OAAO,CAACH,UAAU,CAACgB,KAAK,CAAC,EAAEA,KAAK,CAAC,GAAG,IAAIA,KAAK,GAAG;IAC1G;IACA,OAAOA,KAAK;EACd,CAAC,CAAC;EACF,OAAOL,aAAa,CAACQ,IAAI,CAAC,EAAE,CAAC;AAC/B,CAAC;AACD,eAAerB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}