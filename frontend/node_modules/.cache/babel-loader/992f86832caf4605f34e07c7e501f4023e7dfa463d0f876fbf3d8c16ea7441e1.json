{"ast":null,"code":"import Node from \"../../Node.mjs\";\nimport { isScalar, isMapping, isSequence, isAlias } from \"./predicates.mjs\";\nclass YamlKeyValuePair extends Node {\n  static type = 'keyValuePair';\n  styleGroup;\n  constructor({\n    styleGroup,\n    ...rest\n  }) {\n    super({\n      ...rest\n    });\n    this.styleGroup = styleGroup;\n  }\n}\nObject.defineProperties(YamlKeyValuePair.prototype, {\n  key: {\n    get() {\n      return this.children.filter(node => isScalar(node) || isMapping(node) || isSequence(node))[0];\n    },\n    enumerable: true\n  },\n  value: {\n    get() {\n      const {\n        key,\n        children\n      } = this;\n      const excludeKeyPredicate = node => node !== key;\n      const valuePredicate = node => isScalar(node) || isMapping(node) || isSequence(node) || isAlias(node);\n      return children.filter(node => excludeKeyPredicate(node) && valuePredicate(node))[0];\n    },\n    enumerable: true\n  }\n});\nexport default YamlKeyValuePair;","map":{"version":3,"names":["Node","isScalar","isMapping","isSequence","isAlias","YamlKeyValuePair","type","styleGroup","constructor","rest","Object","defineProperties","prototype","key","get","children","filter","node","enumerable","value","excludeKeyPredicate","valuePredicate"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/@swagger-api/apidom-ast/es/yaml/nodes/YamlKeyValuePair.mjs"],"sourcesContent":["import Node from \"../../Node.mjs\";\nimport { isScalar, isMapping, isSequence, isAlias } from \"./predicates.mjs\";\nclass YamlKeyValuePair extends Node {\n  static type = 'keyValuePair';\n  styleGroup;\n  constructor({\n    styleGroup,\n    ...rest\n  }) {\n    super({\n      ...rest\n    });\n    this.styleGroup = styleGroup;\n  }\n}\nObject.defineProperties(YamlKeyValuePair.prototype, {\n  key: {\n    get() {\n      return this.children.filter(node => isScalar(node) || isMapping(node) || isSequence(node))[0];\n    },\n    enumerable: true\n  },\n  value: {\n    get() {\n      const {\n        key,\n        children\n      } = this;\n      const excludeKeyPredicate = node => node !== key;\n      const valuePredicate = node => isScalar(node) || isMapping(node) || isSequence(node) || isAlias(node);\n      return children.filter(node => excludeKeyPredicate(node) && valuePredicate(node))[0];\n    },\n    enumerable: true\n  }\n});\nexport default YamlKeyValuePair;"],"mappings":"AAAA,OAAOA,IAAI,MAAM,gBAAgB;AACjC,SAASC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,EAAEC,OAAO,QAAQ,kBAAkB;AAC3E,MAAMC,gBAAgB,SAASL,IAAI,CAAC;EAClC,OAAOM,IAAI,GAAG,cAAc;EAC5BC,UAAU;EACVC,WAAWA,CAAC;IACVD,UAAU;IACV,GAAGE;EACL,CAAC,EAAE;IACD,KAAK,CAAC;MACJ,GAAGA;IACL,CAAC,CAAC;IACF,IAAI,CAACF,UAAU,GAAGA,UAAU;EAC9B;AACF;AACAG,MAAM,CAACC,gBAAgB,CAACN,gBAAgB,CAACO,SAAS,EAAE;EAClDC,GAAG,EAAE;IACHC,GAAGA,CAAA,EAAG;MACJ,OAAO,IAAI,CAACC,QAAQ,CAACC,MAAM,CAACC,IAAI,IAAIhB,QAAQ,CAACgB,IAAI,CAAC,IAAIf,SAAS,CAACe,IAAI,CAAC,IAAId,UAAU,CAACc,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/F,CAAC;IACDC,UAAU,EAAE;EACd,CAAC;EACDC,KAAK,EAAE;IACLL,GAAGA,CAAA,EAAG;MACJ,MAAM;QACJD,GAAG;QACHE;MACF,CAAC,GAAG,IAAI;MACR,MAAMK,mBAAmB,GAAGH,IAAI,IAAIA,IAAI,KAAKJ,GAAG;MAChD,MAAMQ,cAAc,GAAGJ,IAAI,IAAIhB,QAAQ,CAACgB,IAAI,CAAC,IAAIf,SAAS,CAACe,IAAI,CAAC,IAAId,UAAU,CAACc,IAAI,CAAC,IAAIb,OAAO,CAACa,IAAI,CAAC;MACrG,OAAOF,QAAQ,CAACC,MAAM,CAACC,IAAI,IAAIG,mBAAmB,CAACH,IAAI,CAAC,IAAII,cAAc,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACtF,CAAC;IACDC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AACF,eAAeb,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}