{"ast":null,"code":"import btoa from '../../helpers/btoa.node.js';\n\n// This function runs after the common function,\n// `src/execute/index.js#buildRequest`\nexport default function buildRequest(options, req) {\n  const {\n    spec,\n    operation,\n    securities,\n    requestContentType,\n    responseContentType,\n    attachContentTypeForEmptyPayload\n  } = options;\n  // Add securities, which are applicable\n  req = applySecurities({\n    request: req,\n    securities,\n    operation,\n    spec\n  });\n  if (req.body || req.form || attachContentTypeForEmptyPayload) {\n    // all following conditionals are Swagger2 only\n    if (requestContentType) {\n      req.headers['Content-Type'] = requestContentType;\n    } else if (Array.isArray(operation.consumes)) {\n      [req.headers['Content-Type']] = operation.consumes;\n    } else if (Array.isArray(spec.consumes)) {\n      [req.headers['Content-Type']] = spec.consumes;\n    } else if (operation.parameters && operation.parameters.filter(p => p.type === 'file').length) {\n      req.headers['Content-Type'] = 'multipart/form-data';\n    } else if (operation.parameters && operation.parameters.filter(p => p.in === 'formData').length) {\n      req.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    }\n  } else if (requestContentType) {\n    const isBodyParamPresent = operation.parameters && operation.parameters.filter(p => p.in === 'body').length > 0;\n    const isFormDataParamPresent = operation.parameters && operation.parameters.filter(p => p.in === 'formData').length > 0;\n    if (isBodyParamPresent || isFormDataParamPresent) {\n      req.headers['Content-Type'] = requestContentType;\n    }\n  }\n  if (!responseContentType && Array.isArray(operation.produces) && operation.produces.length > 0) {\n    req.headers.accept = operation.produces.join(', ');\n  }\n  return req;\n}\n\n// Add security values, to operations - that declare their need on them\nexport function applySecurities({\n  request,\n  securities = {},\n  operation = {},\n  spec\n}) {\n  const result = {\n    ...request\n  };\n  const {\n    authorized = {},\n    specSecurity = []\n  } = securities;\n  const security = operation.security || specSecurity;\n  const isAuthorized = authorized && !!Object.keys(authorized).length;\n  const securityDef = spec.securityDefinitions;\n  result.headers = result.headers || {};\n  result.query = result.query || {};\n  if (!Object.keys(securities).length || !isAuthorized || !security || Array.isArray(operation.security) && !operation.security.length) {\n    return request;\n  }\n  security.forEach(securityObj => {\n    Object.keys(securityObj).forEach(key => {\n      const auth = authorized[key];\n      if (!auth) {\n        return;\n      }\n      const {\n        token\n      } = auth;\n      const value = auth.value || auth;\n      const schema = securityDef[key];\n      const {\n        type\n      } = schema;\n      const tokenName = schema['x-tokenName'] || 'access_token';\n      const oauthToken = token && token[tokenName];\n      let tokenType = token && token.token_type;\n      if (auth) {\n        if (type === 'apiKey') {\n          const inType = schema.in === 'query' ? 'query' : 'headers';\n          result[inType] = result[inType] || {};\n          result[inType][schema.name] = value;\n        } else if (type === 'basic') {\n          if (value.header) {\n            result.headers.authorization = value.header;\n          } else {\n            const username = value.username || '';\n            const password = value.password || '';\n            value.base64 = btoa(`${username}:${password}`);\n            result.headers.authorization = `Basic ${value.base64}`;\n          }\n        } else if (type === 'oauth2' && oauthToken) {\n          tokenType = !tokenType || tokenType.toLowerCase() === 'bearer' ? 'Bearer' : tokenType;\n          result.headers.authorization = `${tokenType} ${oauthToken}`;\n        }\n      }\n    });\n  });\n  return result;\n}","map":{"version":3,"names":["btoa","buildRequest","options","req","spec","operation","securities","requestContentType","responseContentType","attachContentTypeForEmptyPayload","applySecurities","request","body","form","headers","Array","isArray","consumes","parameters","filter","p","type","length","in","isBodyParamPresent","isFormDataParamPresent","produces","accept","join","result","authorized","specSecurity","security","isAuthorized","Object","keys","securityDef","securityDefinitions","query","forEach","securityObj","key","auth","token","value","schema","tokenName","oauthToken","tokenType","token_type","inType","name","header","authorization","username","password","base64","toLowerCase"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/swagger-client/es/execute/swagger2/build-request.js"],"sourcesContent":["import btoa from '../../helpers/btoa.node.js';\n\n// This function runs after the common function,\n// `src/execute/index.js#buildRequest`\nexport default function buildRequest(options, req) {\n  const {\n    spec,\n    operation,\n    securities,\n    requestContentType,\n    responseContentType,\n    attachContentTypeForEmptyPayload\n  } = options;\n  // Add securities, which are applicable\n  req = applySecurities({\n    request: req,\n    securities,\n    operation,\n    spec\n  });\n  if (req.body || req.form || attachContentTypeForEmptyPayload) {\n    // all following conditionals are Swagger2 only\n    if (requestContentType) {\n      req.headers['Content-Type'] = requestContentType;\n    } else if (Array.isArray(operation.consumes)) {\n      [req.headers['Content-Type']] = operation.consumes;\n    } else if (Array.isArray(spec.consumes)) {\n      [req.headers['Content-Type']] = spec.consumes;\n    } else if (operation.parameters && operation.parameters.filter(p => p.type === 'file').length) {\n      req.headers['Content-Type'] = 'multipart/form-data';\n    } else if (operation.parameters && operation.parameters.filter(p => p.in === 'formData').length) {\n      req.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    }\n  } else if (requestContentType) {\n    const isBodyParamPresent = operation.parameters && operation.parameters.filter(p => p.in === 'body').length > 0;\n    const isFormDataParamPresent = operation.parameters && operation.parameters.filter(p => p.in === 'formData').length > 0;\n    if (isBodyParamPresent || isFormDataParamPresent) {\n      req.headers['Content-Type'] = requestContentType;\n    }\n  }\n  if (!responseContentType && Array.isArray(operation.produces) && operation.produces.length > 0) {\n    req.headers.accept = operation.produces.join(', ');\n  }\n  return req;\n}\n\n// Add security values, to operations - that declare their need on them\nexport function applySecurities({\n  request,\n  securities = {},\n  operation = {},\n  spec\n}) {\n  const result = {\n    ...request\n  };\n  const {\n    authorized = {},\n    specSecurity = []\n  } = securities;\n  const security = operation.security || specSecurity;\n  const isAuthorized = authorized && !!Object.keys(authorized).length;\n  const securityDef = spec.securityDefinitions;\n  result.headers = result.headers || {};\n  result.query = result.query || {};\n  if (!Object.keys(securities).length || !isAuthorized || !security || Array.isArray(operation.security) && !operation.security.length) {\n    return request;\n  }\n  security.forEach(securityObj => {\n    Object.keys(securityObj).forEach(key => {\n      const auth = authorized[key];\n      if (!auth) {\n        return;\n      }\n      const {\n        token\n      } = auth;\n      const value = auth.value || auth;\n      const schema = securityDef[key];\n      const {\n        type\n      } = schema;\n      const tokenName = schema['x-tokenName'] || 'access_token';\n      const oauthToken = token && token[tokenName];\n      let tokenType = token && token.token_type;\n      if (auth) {\n        if (type === 'apiKey') {\n          const inType = schema.in === 'query' ? 'query' : 'headers';\n          result[inType] = result[inType] || {};\n          result[inType][schema.name] = value;\n        } else if (type === 'basic') {\n          if (value.header) {\n            result.headers.authorization = value.header;\n          } else {\n            const username = value.username || '';\n            const password = value.password || '';\n            value.base64 = btoa(`${username}:${password}`);\n            result.headers.authorization = `Basic ${value.base64}`;\n          }\n        } else if (type === 'oauth2' && oauthToken) {\n          tokenType = !tokenType || tokenType.toLowerCase() === 'bearer' ? 'Bearer' : tokenType;\n          result.headers.authorization = `${tokenType} ${oauthToken}`;\n        }\n      }\n    });\n  });\n  return result;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}