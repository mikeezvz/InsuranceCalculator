{"ast":null,"code":"import { complement, curryN } from 'ramda';\nimport isFloat from './isFloat.js';\n\n/**\n * Checks whether the passed value is complement of a `float`.\n *\n * @func isNotFloat\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.14.0|v1.14.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isFloat|isFloat}\n * @example\n *\n * RA.isNotFloat(0); //=> true\n * RA.isNotFloat(1); //=> true\n * RA.isNotFloat(-100000); //=> true\n *\n * RA.isNotFloat(0.1);       //=> false\n * RA.isNotFloat(Math.PI);   //=> false\n *\n * RA.isNotFloat(NaN);       //=> true\n * RA.isNotFloat(Infinity);  //=> true\n * RA.isNotFloat(-Infinity); //=> true\n * RA.isNotFloat('10');      //=> true\n * RA.isNotFloat(true);      //=> true\n * RA.isNotFloat(false);     //=> true\n * RA.isNotFloat([1]);       //=> true\n */\nvar isNotFloat = curryN(1, complement(isFloat));\nexport default isNotFloat;","map":{"version":3,"names":["complement","curryN","isFloat","isNotFloat"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/isNotFloat.js"],"sourcesContent":["import { complement, curryN } from 'ramda';\nimport isFloat from './isFloat.js';\n\n/**\n * Checks whether the passed value is complement of a `float`.\n *\n * @func isNotFloat\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.14.0|v1.14.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isFloat|isFloat}\n * @example\n *\n * RA.isNotFloat(0); //=> true\n * RA.isNotFloat(1); //=> true\n * RA.isNotFloat(-100000); //=> true\n *\n * RA.isNotFloat(0.1);       //=> false\n * RA.isNotFloat(Math.PI);   //=> false\n *\n * RA.isNotFloat(NaN);       //=> true\n * RA.isNotFloat(Infinity);  //=> true\n * RA.isNotFloat(-Infinity); //=> true\n * RA.isNotFloat('10');      //=> true\n * RA.isNotFloat(true);      //=> true\n * RA.isNotFloat(false);     //=> true\n * RA.isNotFloat([1]);       //=> true\n */\nvar isNotFloat = curryN(1, complement(isFloat));\nexport default isNotFloat;"],"mappings":"AAAA,SAASA,UAAU,EAAEC,MAAM,QAAQ,OAAO;AAC1C,OAAOC,OAAO,MAAM,cAAc;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,UAAU,GAAGF,MAAM,CAAC,CAAC,EAAED,UAAU,CAACE,OAAO,CAAC,CAAC;AAC/C,eAAeC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}