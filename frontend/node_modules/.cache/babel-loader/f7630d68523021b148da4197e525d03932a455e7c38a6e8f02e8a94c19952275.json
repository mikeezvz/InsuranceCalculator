{"ast":null,"code":"import { resolve as resolvePathTemplate } from 'openapi-path-templating';\nimport stylize, { encodeCharacters } from './style-serializer.js';\nimport serialize from './content-serializer.js';\nexport function path({\n  req,\n  value,\n  parameter,\n  baseURL\n}) {\n  const {\n    name,\n    style,\n    explode,\n    content\n  } = parameter;\n  if (value === undefined) return;\n  const pathname = req.url.replace(baseURL, '');\n  let resolvedPathname;\n  if (content) {\n    const effectiveMediaType = Object.keys(content)[0];\n    resolvedPathname = resolvePathTemplate(pathname, {\n      [name]: value\n    }, {\n      encoder: val => encodeCharacters(serialize(val, effectiveMediaType))\n    });\n  } else {\n    resolvedPathname = resolvePathTemplate(pathname, {\n      [name]: value\n    }, {\n      encoder: val => stylize({\n        key: parameter.name,\n        value: val,\n        style: style || 'simple',\n        explode: explode || false,\n        escape: 'reserved'\n      })\n    });\n  }\n  req.url = baseURL + resolvedPathname;\n}\nexport function query({\n  req,\n  value,\n  parameter\n}) {\n  req.query = req.query || {};\n  if (value !== undefined && parameter.content) {\n    const effectiveMediaType = Object.keys(parameter.content)[0];\n    const serializedValue = serialize(value, effectiveMediaType);\n    if (serializedValue) {\n      req.query[parameter.name] = serializedValue;\n    } else if (parameter.allowEmptyValue) {\n      const paramName = parameter.name;\n      req.query[paramName] = req.query[paramName] || {};\n      req.query[paramName].allowEmptyValue = true;\n    }\n    return;\n  }\n  if (value === false) {\n    value = 'false';\n  }\n  if (value === 0) {\n    value = '0';\n  }\n  if (value) {\n    const {\n      style,\n      explode,\n      allowReserved\n    } = parameter;\n    req.query[parameter.name] = {\n      value,\n      serializationOption: {\n        style,\n        explode,\n        allowReserved\n      }\n    };\n  } else if (parameter.allowEmptyValue && value !== undefined) {\n    const paramName = parameter.name;\n    req.query[paramName] = req.query[paramName] || {};\n    req.query[paramName].allowEmptyValue = true;\n  }\n}\nconst PARAMETER_HEADER_BLACKLIST = ['accept', 'authorization', 'content-type'];\nexport function header({\n  req,\n  parameter,\n  value\n}) {\n  req.headers = req.headers || {};\n  if (PARAMETER_HEADER_BLACKLIST.indexOf(parameter.name.toLowerCase()) > -1) {\n    return;\n  }\n  if (value !== undefined && parameter.content) {\n    const effectiveMediaType = Object.keys(parameter.content)[0];\n    req.headers[parameter.name] = serialize(value, effectiveMediaType);\n    return;\n  }\n  if (value !== undefined && !(Array.isArray(value) && value.length === 0)) {\n    req.headers[parameter.name] = stylize({\n      key: parameter.name,\n      value,\n      style: parameter.style || 'simple',\n      explode: typeof parameter.explode === 'undefined' ? false : parameter.explode,\n      escape: false\n    });\n  }\n}\nexport function cookie({\n  req,\n  parameter,\n  value\n}) {\n  req.headers = req.headers || {};\n  const type = typeof value;\n  if (value !== undefined && parameter.content) {\n    const effectiveMediaType = Object.keys(parameter.content)[0];\n    req.headers.Cookie = `${parameter.name}=${serialize(value, effectiveMediaType)}`;\n    return;\n  }\n  if (value !== undefined && !(Array.isArray(value) && value.length === 0)) {\n    const prefix = type === 'object' && !Array.isArray(value) && parameter.explode ? '' : `${parameter.name}=`;\n    req.headers.Cookie = prefix + stylize({\n      key: parameter.name,\n      value,\n      escape: false,\n      style: parameter.style || 'form',\n      explode: typeof parameter.explode === 'undefined' ? false : parameter.explode\n    });\n  }\n}","map":{"version":3,"names":["resolve","resolvePathTemplate","stylize","encodeCharacters","serialize","path","req","value","parameter","baseURL","name","style","explode","content","undefined","pathname","url","replace","resolvedPathname","effectiveMediaType","Object","keys","encoder","val","key","escape","query","serializedValue","allowEmptyValue","paramName","allowReserved","serializationOption","PARAMETER_HEADER_BLACKLIST","header","headers","indexOf","toLowerCase","Array","isArray","length","cookie","type","Cookie","prefix"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/swagger-client/es/execute/oas3/parameter-builders.js"],"sourcesContent":["import { resolve as resolvePathTemplate } from 'openapi-path-templating';\nimport stylize, { encodeCharacters } from './style-serializer.js';\nimport serialize from './content-serializer.js';\nexport function path({\n  req,\n  value,\n  parameter,\n  baseURL\n}) {\n  const {\n    name,\n    style,\n    explode,\n    content\n  } = parameter;\n  if (value === undefined) return;\n  const pathname = req.url.replace(baseURL, '');\n  let resolvedPathname;\n  if (content) {\n    const effectiveMediaType = Object.keys(content)[0];\n    resolvedPathname = resolvePathTemplate(pathname, {\n      [name]: value\n    }, {\n      encoder: val => encodeCharacters(serialize(val, effectiveMediaType))\n    });\n  } else {\n    resolvedPathname = resolvePathTemplate(pathname, {\n      [name]: value\n    }, {\n      encoder: val => stylize({\n        key: parameter.name,\n        value: val,\n        style: style || 'simple',\n        explode: explode || false,\n        escape: 'reserved'\n      })\n    });\n  }\n  req.url = baseURL + resolvedPathname;\n}\nexport function query({\n  req,\n  value,\n  parameter\n}) {\n  req.query = req.query || {};\n  if (value !== undefined && parameter.content) {\n    const effectiveMediaType = Object.keys(parameter.content)[0];\n    const serializedValue = serialize(value, effectiveMediaType);\n    if (serializedValue) {\n      req.query[parameter.name] = serializedValue;\n    } else if (parameter.allowEmptyValue) {\n      const paramName = parameter.name;\n      req.query[paramName] = req.query[paramName] || {};\n      req.query[paramName].allowEmptyValue = true;\n    }\n    return;\n  }\n  if (value === false) {\n    value = 'false';\n  }\n  if (value === 0) {\n    value = '0';\n  }\n  if (value) {\n    const {\n      style,\n      explode,\n      allowReserved\n    } = parameter;\n    req.query[parameter.name] = {\n      value,\n      serializationOption: {\n        style,\n        explode,\n        allowReserved\n      }\n    };\n  } else if (parameter.allowEmptyValue && value !== undefined) {\n    const paramName = parameter.name;\n    req.query[paramName] = req.query[paramName] || {};\n    req.query[paramName].allowEmptyValue = true;\n  }\n}\nconst PARAMETER_HEADER_BLACKLIST = ['accept', 'authorization', 'content-type'];\nexport function header({\n  req,\n  parameter,\n  value\n}) {\n  req.headers = req.headers || {};\n  if (PARAMETER_HEADER_BLACKLIST.indexOf(parameter.name.toLowerCase()) > -1) {\n    return;\n  }\n  if (value !== undefined && parameter.content) {\n    const effectiveMediaType = Object.keys(parameter.content)[0];\n    req.headers[parameter.name] = serialize(value, effectiveMediaType);\n    return;\n  }\n  if (value !== undefined && !(Array.isArray(value) && value.length === 0)) {\n    req.headers[parameter.name] = stylize({\n      key: parameter.name,\n      value,\n      style: parameter.style || 'simple',\n      explode: typeof parameter.explode === 'undefined' ? false : parameter.explode,\n      escape: false\n    });\n  }\n}\nexport function cookie({\n  req,\n  parameter,\n  value\n}) {\n  req.headers = req.headers || {};\n  const type = typeof value;\n  if (value !== undefined && parameter.content) {\n    const effectiveMediaType = Object.keys(parameter.content)[0];\n    req.headers.Cookie = `${parameter.name}=${serialize(value, effectiveMediaType)}`;\n    return;\n  }\n  if (value !== undefined && !(Array.isArray(value) && value.length === 0)) {\n    const prefix = type === 'object' && !Array.isArray(value) && parameter.explode ? '' : `${parameter.name}=`;\n    req.headers.Cookie = prefix + stylize({\n      key: parameter.name,\n      value,\n      escape: false,\n      style: parameter.style || 'form',\n      explode: typeof parameter.explode === 'undefined' ? false : parameter.explode\n    });\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}