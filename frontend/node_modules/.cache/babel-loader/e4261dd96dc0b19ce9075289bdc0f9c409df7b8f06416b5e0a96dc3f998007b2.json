{"ast":null,"code":"import { Mixin } from 'ts-mixer';\nimport { difference } from 'ramda';\nimport { BREAK } from '@swagger-api/apidom-core';\nimport FixedFieldsVisitor from \"./FixedFieldsVisitor.mjs\";\nimport PatternedFieldsVisitor from \"./PatternedFieldsVisitor.mjs\";\nclass MixedFieldsVisitor extends Mixin(FixedFieldsVisitor, PatternedFieldsVisitor) {\n  specPathFixedFields;\n  specPathPatternedFields;\n  constructor({\n    specPathFixedFields,\n    specPathPatternedFields,\n    ...rest\n  }) {\n    super({\n      ...rest\n    });\n    this.specPathFixedFields = specPathFixedFields;\n    this.specPathPatternedFields = specPathPatternedFields;\n  }\n  ObjectElement(objectElement) {\n    const {\n      specPath,\n      ignoredFields\n    } = this;\n    try {\n      this.specPath = this.specPathFixedFields;\n      const fixedFields = this.retrieveFixedFields(this.specPath(objectElement));\n      // let FixedFieldsVisitor only process fixed fields and leave rest to PatternedFieldsVisitor\n      // @ts-ignore\n      this.ignoredFields = [...ignoredFields, ...difference(objectElement.keys(), fixedFields)];\n      FixedFieldsVisitor.prototype.ObjectElement.call(this, objectElement);\n      this.specPath = this.specPathPatternedFields;\n      this.ignoredFields = fixedFields;\n      PatternedFieldsVisitor.prototype.ObjectElement.call(this, objectElement);\n    } catch (e) {\n      this.specPath = specPath;\n      throw e;\n    }\n    return BREAK;\n  }\n}\nexport default MixedFieldsVisitor;","map":{"version":3,"names":["Mixin","difference","BREAK","FixedFieldsVisitor","PatternedFieldsVisitor","MixedFieldsVisitor","specPathFixedFields","specPathPatternedFields","constructor","rest","ObjectElement","objectElement","specPath","ignoredFields","fixedFields","retrieveFixedFields","keys","prototype","call","e"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/@swagger-api/apidom-ns-openapi-3-0/es/refractor/visitors/generics/MixedFieldsVisitor.mjs"],"sourcesContent":["import { Mixin } from 'ts-mixer';\nimport { difference } from 'ramda';\nimport { BREAK } from '@swagger-api/apidom-core';\nimport FixedFieldsVisitor from \"./FixedFieldsVisitor.mjs\";\nimport PatternedFieldsVisitor from \"./PatternedFieldsVisitor.mjs\";\nclass MixedFieldsVisitor extends Mixin(FixedFieldsVisitor, PatternedFieldsVisitor) {\n  specPathFixedFields;\n  specPathPatternedFields;\n  constructor({\n    specPathFixedFields,\n    specPathPatternedFields,\n    ...rest\n  }) {\n    super({\n      ...rest\n    });\n    this.specPathFixedFields = specPathFixedFields;\n    this.specPathPatternedFields = specPathPatternedFields;\n  }\n  ObjectElement(objectElement) {\n    const {\n      specPath,\n      ignoredFields\n    } = this;\n    try {\n      this.specPath = this.specPathFixedFields;\n      const fixedFields = this.retrieveFixedFields(this.specPath(objectElement));\n      // let FixedFieldsVisitor only process fixed fields and leave rest to PatternedFieldsVisitor\n      // @ts-ignore\n      this.ignoredFields = [...ignoredFields, ...difference(objectElement.keys(), fixedFields)];\n      FixedFieldsVisitor.prototype.ObjectElement.call(this, objectElement);\n      this.specPath = this.specPathPatternedFields;\n      this.ignoredFields = fixedFields;\n      PatternedFieldsVisitor.prototype.ObjectElement.call(this, objectElement);\n    } catch (e) {\n      this.specPath = specPath;\n      throw e;\n    }\n    return BREAK;\n  }\n}\nexport default MixedFieldsVisitor;"],"mappings":"AAAA,SAASA,KAAK,QAAQ,UAAU;AAChC,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,KAAK,QAAQ,0BAA0B;AAChD,OAAOC,kBAAkB,MAAM,0BAA0B;AACzD,OAAOC,sBAAsB,MAAM,8BAA8B;AACjE,MAAMC,kBAAkB,SAASL,KAAK,CAACG,kBAAkB,EAAEC,sBAAsB,CAAC,CAAC;EACjFE,mBAAmB;EACnBC,uBAAuB;EACvBC,WAAWA,CAAC;IACVF,mBAAmB;IACnBC,uBAAuB;IACvB,GAAGE;EACL,CAAC,EAAE;IACD,KAAK,CAAC;MACJ,GAAGA;IACL,CAAC,CAAC;IACF,IAAI,CAACH,mBAAmB,GAAGA,mBAAmB;IAC9C,IAAI,CAACC,uBAAuB,GAAGA,uBAAuB;EACxD;EACAG,aAAaA,CAACC,aAAa,EAAE;IAC3B,MAAM;MACJC,QAAQ;MACRC;IACF,CAAC,GAAG,IAAI;IACR,IAAI;MACF,IAAI,CAACD,QAAQ,GAAG,IAAI,CAACN,mBAAmB;MACxC,MAAMQ,WAAW,GAAG,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACH,QAAQ,CAACD,aAAa,CAAC,CAAC;MAC1E;MACA;MACA,IAAI,CAACE,aAAa,GAAG,CAAC,GAAGA,aAAa,EAAE,GAAGZ,UAAU,CAACU,aAAa,CAACK,IAAI,CAAC,CAAC,EAAEF,WAAW,CAAC,CAAC;MACzFX,kBAAkB,CAACc,SAAS,CAACP,aAAa,CAACQ,IAAI,CAAC,IAAI,EAAEP,aAAa,CAAC;MACpE,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACL,uBAAuB;MAC5C,IAAI,CAACM,aAAa,GAAGC,WAAW;MAChCV,sBAAsB,CAACa,SAAS,CAACP,aAAa,CAACQ,IAAI,CAAC,IAAI,EAAEP,aAAa,CAAC;IAC1E,CAAC,CAAC,OAAOQ,CAAC,EAAE;MACV,IAAI,CAACP,QAAQ,GAAGA,QAAQ;MACxB,MAAMO,CAAC;IACT;IACA,OAAOjB,KAAK;EACd;AACF;AACA,eAAeG,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}