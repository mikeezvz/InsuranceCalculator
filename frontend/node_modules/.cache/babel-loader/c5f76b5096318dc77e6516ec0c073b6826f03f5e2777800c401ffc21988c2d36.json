{"ast":null,"code":"import { startsWith } from 'ramda';\nimport { isStringElement, isObjectElement, toValue } from '@swagger-api/apidom-core';\nexport const isReferenceLikeElement = element => {\n  return isObjectElement(element) && element.hasKey('$ref');\n};\nexport const isServerLikeElement = isObjectElement;\nexport const isTagLikeElement = isObjectElement;\nexport const isOpenApiExtension = element => {\n  // @ts-ignore\n  return isStringElement(element.key) && startsWith('x-', toValue(element.key));\n};","map":{"version":3,"names":["startsWith","isStringElement","isObjectElement","toValue","isReferenceLikeElement","element","hasKey","isServerLikeElement","isTagLikeElement","isOpenApiExtension","key"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/@swagger-api/apidom-ns-openapi-3-0/es/refractor/predicates.mjs"],"sourcesContent":["import { startsWith } from 'ramda';\nimport { isStringElement, isObjectElement, toValue } from '@swagger-api/apidom-core';\nexport const isReferenceLikeElement = element => {\n  return isObjectElement(element) && element.hasKey('$ref');\n};\nexport const isServerLikeElement = isObjectElement;\nexport const isTagLikeElement = isObjectElement;\nexport const isOpenApiExtension = element => {\n  // @ts-ignore\n  return isStringElement(element.key) && startsWith('x-', toValue(element.key));\n};"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,eAAe,EAAEC,eAAe,EAAEC,OAAO,QAAQ,0BAA0B;AACpF,OAAO,MAAMC,sBAAsB,GAAGC,OAAO,IAAI;EAC/C,OAAOH,eAAe,CAACG,OAAO,CAAC,IAAIA,OAAO,CAACC,MAAM,CAAC,MAAM,CAAC;AAC3D,CAAC;AACD,OAAO,MAAMC,mBAAmB,GAAGL,eAAe;AAClD,OAAO,MAAMM,gBAAgB,GAAGN,eAAe;AAC/C,OAAO,MAAMO,kBAAkB,GAAGJ,OAAO,IAAI;EAC3C;EACA,OAAOJ,eAAe,CAACI,OAAO,CAACK,GAAG,CAAC,IAAIV,UAAU,CAAC,IAAI,EAAEG,OAAO,CAACE,OAAO,CAACK,GAAG,CAAC,CAAC;AAC/E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}