{"ast":null,"code":"import { filter, addIndex, curry, includes } from 'ramda';\n\n// helpers\nvar filterIndexed = addIndex(filter);\nvar containsIndex = curry(function (indexes, val, index) {\n  return includes(index, indexes);\n});\n\n/**\n * Picks values from list by indexes.\n *\n * Note: pickIndexes will skip non existing indexes. If you want to include them\n * use ramda's `props` function.\n *\n * @func pickIndexes\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.1.0|v1.1.0}\n * @category List\n * @sig  [Number] -> [a] -> [a]\n * @param {Array} indexes The indexes to pick\n * @param {Array} list The list to pick values from\n * @return {Array} New array containing only values at `indexes`\n * @see {@link http://ramdajs.com/docs/#pick|R.pick}, {@link RA.omitIndexes|omitIndexes}\n * @example\n *\n * RA.pickIndexes([0, 2], ['a', 'b', 'c']); //=> ['a', 'c']\n */\nvar pickIndexes = curry(function (indexes, list) {\n  return filterIndexed(containsIndex(indexes), list);\n});\nexport default pickIndexes;","map":{"version":3,"names":["filter","addIndex","curry","includes","filterIndexed","containsIndex","indexes","val","index","pickIndexes","list"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/pickIndexes.js"],"sourcesContent":["import { filter, addIndex, curry, includes } from 'ramda';\n\n// helpers\nvar filterIndexed = addIndex(filter);\nvar containsIndex = curry(function (indexes, val, index) {\n  return includes(index, indexes);\n});\n\n/**\n * Picks values from list by indexes.\n *\n * Note: pickIndexes will skip non existing indexes. If you want to include them\n * use ramda's `props` function.\n *\n * @func pickIndexes\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.1.0|v1.1.0}\n * @category List\n * @sig  [Number] -> [a] -> [a]\n * @param {Array} indexes The indexes to pick\n * @param {Array} list The list to pick values from\n * @return {Array} New array containing only values at `indexes`\n * @see {@link http://ramdajs.com/docs/#pick|R.pick}, {@link RA.omitIndexes|omitIndexes}\n * @example\n *\n * RA.pickIndexes([0, 2], ['a', 'b', 'c']); //=> ['a', 'c']\n */\nvar pickIndexes = curry(function (indexes, list) {\n  return filterIndexed(containsIndex(indexes), list);\n});\nexport default pickIndexes;"],"mappings":"AAAA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,OAAO;;AAEzD;AACA,IAAIC,aAAa,GAAGH,QAAQ,CAACD,MAAM,CAAC;AACpC,IAAIK,aAAa,GAAGH,KAAK,CAAC,UAAUI,OAAO,EAAEC,GAAG,EAAEC,KAAK,EAAE;EACvD,OAAOL,QAAQ,CAACK,KAAK,EAAEF,OAAO,CAAC;AACjC,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIG,WAAW,GAAGP,KAAK,CAAC,UAAUI,OAAO,EAAEI,IAAI,EAAE;EAC/C,OAAON,aAAa,CAACC,aAAa,CAACC,OAAO,CAAC,EAAEI,IAAI,CAAC;AACpD,CAAC,CAAC;AACF,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}