{"ast":null,"code":"import { isStringElement, MemberElement, BREAK, cloneDeep, toValue } from '@swagger-api/apidom-core';\nimport SpecificationVisitor from \"../SpecificationVisitor.mjs\";\nimport { isOpenApiExtension } from \"../../predicates.mjs\";\nclass FixedFieldsVisitor extends SpecificationVisitor {\n  specPath;\n  ignoredFields;\n  canSupportSpecificationExtensions = true;\n  specificationExtensionPredicate = isOpenApiExtension;\n  constructor({\n    specPath,\n    ignoredFields,\n    canSupportSpecificationExtensions,\n    specificationExtensionPredicate,\n    ...rest\n  }) {\n    super({\n      ...rest\n    });\n    this.specPath = specPath;\n    this.ignoredFields = ignoredFields || [];\n    if (typeof canSupportSpecificationExtensions === 'boolean') {\n      this.canSupportSpecificationExtensions = canSupportSpecificationExtensions;\n    }\n    if (typeof specificationExtensionPredicate === 'function') {\n      this.specificationExtensionPredicate = specificationExtensionPredicate;\n    }\n  }\n  ObjectElement(objectElement) {\n    const specPath = this.specPath(objectElement);\n    const fields = this.retrieveFixedFields(specPath);\n\n    // @ts-ignore\n    objectElement.forEach((value, key, memberElement) => {\n      if (isStringElement(key) && fields.includes(toValue(key)) && !this.ignoredFields.includes(toValue(key))) {\n        const fixedFieldElement = this.toRefractedElement([...specPath, 'fixedFields', toValue(key)], value);\n        const newMemberElement = new MemberElement(cloneDeep(key), fixedFieldElement);\n        this.copyMetaAndAttributes(memberElement, newMemberElement);\n        newMemberElement.classes.push('fixed-field');\n        this.element.content.push(newMemberElement);\n      } else if (this.canSupportSpecificationExtensions && this.specificationExtensionPredicate(memberElement)) {\n        const extensionElement = this.toRefractedElement(['document', 'extension'], memberElement);\n        this.element.content.push(extensionElement);\n      } else if (!this.ignoredFields.includes(toValue(key))) {\n        this.element.content.push(cloneDeep(memberElement));\n      }\n    });\n    this.copyMetaAndAttributes(objectElement, this.element);\n    return BREAK;\n  }\n}\nexport default FixedFieldsVisitor;","map":{"version":3,"names":["isStringElement","MemberElement","BREAK","cloneDeep","toValue","SpecificationVisitor","isOpenApiExtension","FixedFieldsVisitor","specPath","ignoredFields","canSupportSpecificationExtensions","specificationExtensionPredicate","constructor","rest","ObjectElement","objectElement","fields","retrieveFixedFields","forEach","value","key","memberElement","includes","fixedFieldElement","toRefractedElement","newMemberElement","copyMetaAndAttributes","classes","push","element","content","extensionElement"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/@swagger-api/apidom-ns-openapi-3-0/es/refractor/visitors/generics/FixedFieldsVisitor.mjs"],"sourcesContent":["import { isStringElement, MemberElement, BREAK, cloneDeep, toValue } from '@swagger-api/apidom-core';\nimport SpecificationVisitor from \"../SpecificationVisitor.mjs\";\nimport { isOpenApiExtension } from \"../../predicates.mjs\";\nclass FixedFieldsVisitor extends SpecificationVisitor {\n  specPath;\n  ignoredFields;\n  canSupportSpecificationExtensions = true;\n  specificationExtensionPredicate = isOpenApiExtension;\n  constructor({\n    specPath,\n    ignoredFields,\n    canSupportSpecificationExtensions,\n    specificationExtensionPredicate,\n    ...rest\n  }) {\n    super({\n      ...rest\n    });\n    this.specPath = specPath;\n    this.ignoredFields = ignoredFields || [];\n    if (typeof canSupportSpecificationExtensions === 'boolean') {\n      this.canSupportSpecificationExtensions = canSupportSpecificationExtensions;\n    }\n    if (typeof specificationExtensionPredicate === 'function') {\n      this.specificationExtensionPredicate = specificationExtensionPredicate;\n    }\n  }\n  ObjectElement(objectElement) {\n    const specPath = this.specPath(objectElement);\n    const fields = this.retrieveFixedFields(specPath);\n\n    // @ts-ignore\n    objectElement.forEach((value, key, memberElement) => {\n      if (isStringElement(key) && fields.includes(toValue(key)) && !this.ignoredFields.includes(toValue(key))) {\n        const fixedFieldElement = this.toRefractedElement([...specPath, 'fixedFields', toValue(key)], value);\n        const newMemberElement = new MemberElement(cloneDeep(key), fixedFieldElement);\n        this.copyMetaAndAttributes(memberElement, newMemberElement);\n        newMemberElement.classes.push('fixed-field');\n        this.element.content.push(newMemberElement);\n      } else if (this.canSupportSpecificationExtensions && this.specificationExtensionPredicate(memberElement)) {\n        const extensionElement = this.toRefractedElement(['document', 'extension'], memberElement);\n        this.element.content.push(extensionElement);\n      } else if (!this.ignoredFields.includes(toValue(key))) {\n        this.element.content.push(cloneDeep(memberElement));\n      }\n    });\n    this.copyMetaAndAttributes(objectElement, this.element);\n    return BREAK;\n  }\n}\nexport default FixedFieldsVisitor;"],"mappings":"AAAA,SAASA,eAAe,EAAEC,aAAa,EAAEC,KAAK,EAAEC,SAAS,EAAEC,OAAO,QAAQ,0BAA0B;AACpG,OAAOC,oBAAoB,MAAM,6BAA6B;AAC9D,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,MAAMC,kBAAkB,SAASF,oBAAoB,CAAC;EACpDG,QAAQ;EACRC,aAAa;EACbC,iCAAiC,GAAG,IAAI;EACxCC,+BAA+B,GAAGL,kBAAkB;EACpDM,WAAWA,CAAC;IACVJ,QAAQ;IACRC,aAAa;IACbC,iCAAiC;IACjCC,+BAA+B;IAC/B,GAAGE;EACL,CAAC,EAAE;IACD,KAAK,CAAC;MACJ,GAAGA;IACL,CAAC,CAAC;IACF,IAAI,CAACL,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,aAAa,GAAGA,aAAa,IAAI,EAAE;IACxC,IAAI,OAAOC,iCAAiC,KAAK,SAAS,EAAE;MAC1D,IAAI,CAACA,iCAAiC,GAAGA,iCAAiC;IAC5E;IACA,IAAI,OAAOC,+BAA+B,KAAK,UAAU,EAAE;MACzD,IAAI,CAACA,+BAA+B,GAAGA,+BAA+B;IACxE;EACF;EACAG,aAAaA,CAACC,aAAa,EAAE;IAC3B,MAAMP,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACO,aAAa,CAAC;IAC7C,MAAMC,MAAM,GAAG,IAAI,CAACC,mBAAmB,CAACT,QAAQ,CAAC;;IAEjD;IACAO,aAAa,CAACG,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,EAAEC,aAAa,KAAK;MACnD,IAAIrB,eAAe,CAACoB,GAAG,CAAC,IAAIJ,MAAM,CAACM,QAAQ,CAAClB,OAAO,CAACgB,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAACX,aAAa,CAACa,QAAQ,CAAClB,OAAO,CAACgB,GAAG,CAAC,CAAC,EAAE;QACvG,MAAMG,iBAAiB,GAAG,IAAI,CAACC,kBAAkB,CAAC,CAAC,GAAGhB,QAAQ,EAAE,aAAa,EAAEJ,OAAO,CAACgB,GAAG,CAAC,CAAC,EAAED,KAAK,CAAC;QACpG,MAAMM,gBAAgB,GAAG,IAAIxB,aAAa,CAACE,SAAS,CAACiB,GAAG,CAAC,EAAEG,iBAAiB,CAAC;QAC7E,IAAI,CAACG,qBAAqB,CAACL,aAAa,EAAEI,gBAAgB,CAAC;QAC3DA,gBAAgB,CAACE,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;QAC5C,IAAI,CAACC,OAAO,CAACC,OAAO,CAACF,IAAI,CAACH,gBAAgB,CAAC;MAC7C,CAAC,MAAM,IAAI,IAAI,CAACf,iCAAiC,IAAI,IAAI,CAACC,+BAA+B,CAACU,aAAa,CAAC,EAAE;QACxG,MAAMU,gBAAgB,GAAG,IAAI,CAACP,kBAAkB,CAAC,CAAC,UAAU,EAAE,WAAW,CAAC,EAAEH,aAAa,CAAC;QAC1F,IAAI,CAACQ,OAAO,CAACC,OAAO,CAACF,IAAI,CAACG,gBAAgB,CAAC;MAC7C,CAAC,MAAM,IAAI,CAAC,IAAI,CAACtB,aAAa,CAACa,QAAQ,CAAClB,OAAO,CAACgB,GAAG,CAAC,CAAC,EAAE;QACrD,IAAI,CAACS,OAAO,CAACC,OAAO,CAACF,IAAI,CAACzB,SAAS,CAACkB,aAAa,CAAC,CAAC;MACrD;IACF,CAAC,CAAC;IACF,IAAI,CAACK,qBAAqB,CAACX,aAAa,EAAE,IAAI,CAACc,OAAO,CAAC;IACvD,OAAO3B,KAAK;EACd;AACF;AACA,eAAeK,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}