{"ast":null,"code":"import { invoker, both, pipe, curryN } from 'ramda';\nimport isDate from './isDate.js';\nimport isNotNaN from './isNotNaN.js';\n\n/* eslint-disable max-len */\n/**\n * Checks if value is valid `Date` object.\n *\n * @func isValidDate\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.8.0|v1.8.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isDate|isDate}, {@link RA.isNotDate|isNotDate}, {@link RA.isNotValidDate|isNotValidDate}\n * @example\n *\n * RA.isValidDate(new Date()); //=> true\n * RA.isValidDate(new Date('a')); //=> false\n */\n/* eslint-enable max-len */\nvar isValidDate = curryN(1, both(isDate, pipe(invoker(0, 'getTime'), isNotNaN)));\nexport default isValidDate;","map":{"version":3,"names":["invoker","both","pipe","curryN","isDate","isNotNaN","isValidDate"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/isValidDate.js"],"sourcesContent":["import { invoker, both, pipe, curryN } from 'ramda';\nimport isDate from './isDate.js';\nimport isNotNaN from './isNotNaN.js';\n\n/* eslint-disable max-len */\n/**\n * Checks if value is valid `Date` object.\n *\n * @func isValidDate\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/1.8.0|v1.8.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isDate|isDate}, {@link RA.isNotDate|isNotDate}, {@link RA.isNotValidDate|isNotValidDate}\n * @example\n *\n * RA.isValidDate(new Date()); //=> true\n * RA.isValidDate(new Date('a')); //=> false\n */\n/* eslint-enable max-len */\nvar isValidDate = curryN(1, both(isDate, pipe(invoker(0, 'getTime'), isNotNaN)));\nexport default isValidDate;"],"mappings":"AAAA,SAASA,OAAO,EAAEC,IAAI,EAAEC,IAAI,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,QAAQ,MAAM,eAAe;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,WAAW,GAAGH,MAAM,CAAC,CAAC,EAAEF,IAAI,CAACG,MAAM,EAAEF,IAAI,CAACF,OAAO,CAAC,CAAC,EAAE,SAAS,CAAC,EAAEK,QAAQ,CAAC,CAAC,CAAC;AAChF,eAAeC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}