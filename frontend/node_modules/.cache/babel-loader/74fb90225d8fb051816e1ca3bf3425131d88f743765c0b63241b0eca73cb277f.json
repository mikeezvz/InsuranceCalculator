{"ast":null,"code":"import { curryN, invoker } from 'ramda';\nimport isFunction from './isFunction.js';\nimport ponyfill from './internal/ponyfills/String.replaceAll.js';\nexport var replaceAllPonyfill = curryN(3, ponyfill);\nexport var replaceAllInvoker = invoker(2, 'replaceAll');\n\n/**\n * Replaces all substring matches in a string with a replacement.\n *\n * @func replaceAll\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.17.0|v2.17.0}\n * @category String\n * @sig String -> String -> String -> String\n * @param {string} searchValue The substring or a global RegExp to match\n * @param {string} replaceValue The string to replace the matches with\n * @param {string} str The String to do the search and replacement in\n * @return {string} A new string containing all the `searchValue` replaced with the `replaceValue`\n * @throws {TypeError} When invalid arguments provided\n * @see {@link http://ramdajs.com/docs/#replace|R.replace}, {@link https://github.com/tc39/proposal-string-replaceall|TC39 proposal}\n * @example\n *\n * RA.replaceAll('ac', 'ef', 'ac ab ac ab'); //=> 'ef ab ef ab'\n * RA.replaceAll('', '_', 'xxx'); //=> '_x_x_x_'\n * RA.replaceAll(/x/g, 'v', 'xxx'); //=> 'vvv'\n * RA.replaceAll(/x/, 'v', 'xxx'); //=> TypeError\n */\nvar replaceAll = isFunction(String.prototype.replaceAll) ? replaceAllInvoker : replaceAllPonyfill;\nexport default replaceAll;","map":{"version":3,"names":["curryN","invoker","isFunction","ponyfill","replaceAllPonyfill","replaceAllInvoker","replaceAll","String","prototype"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/replaceAll.js"],"sourcesContent":["import { curryN, invoker } from 'ramda';\nimport isFunction from './isFunction.js';\nimport ponyfill from './internal/ponyfills/String.replaceAll.js';\nexport var replaceAllPonyfill = curryN(3, ponyfill);\nexport var replaceAllInvoker = invoker(2, 'replaceAll');\n\n/**\n * Replaces all substring matches in a string with a replacement.\n *\n * @func replaceAll\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.17.0|v2.17.0}\n * @category String\n * @sig String -> String -> String -> String\n * @param {string} searchValue The substring or a global RegExp to match\n * @param {string} replaceValue The string to replace the matches with\n * @param {string} str The String to do the search and replacement in\n * @return {string} A new string containing all the `searchValue` replaced with the `replaceValue`\n * @throws {TypeError} When invalid arguments provided\n * @see {@link http://ramdajs.com/docs/#replace|R.replace}, {@link https://github.com/tc39/proposal-string-replaceall|TC39 proposal}\n * @example\n *\n * RA.replaceAll('ac', 'ef', 'ac ab ac ab'); //=> 'ef ab ef ab'\n * RA.replaceAll('', '_', 'xxx'); //=> '_x_x_x_'\n * RA.replaceAll(/x/g, 'v', 'xxx'); //=> 'vvv'\n * RA.replaceAll(/x/, 'v', 'xxx'); //=> TypeError\n */\nvar replaceAll = isFunction(String.prototype.replaceAll) ? replaceAllInvoker : replaceAllPonyfill;\nexport default replaceAll;"],"mappings":"AAAA,SAASA,MAAM,EAAEC,OAAO,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,QAAQ,MAAM,2CAA2C;AAChE,OAAO,IAAIC,kBAAkB,GAAGJ,MAAM,CAAC,CAAC,EAAEG,QAAQ,CAAC;AACnD,OAAO,IAAIE,iBAAiB,GAAGJ,OAAO,CAAC,CAAC,EAAE,YAAY,CAAC;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIK,UAAU,GAAGJ,UAAU,CAACK,MAAM,CAACC,SAAS,CAACF,UAAU,CAAC,GAAGD,iBAAiB,GAAGD,kBAAkB;AACjG,eAAeE,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}