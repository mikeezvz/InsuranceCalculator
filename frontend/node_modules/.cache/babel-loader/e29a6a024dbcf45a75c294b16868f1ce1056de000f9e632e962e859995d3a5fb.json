{"ast":null,"code":"import { curryN } from 'ramda';\nimport toUinteger32 from './toUinteger32.js';\n\n/**\n * Checks whether the passed value is an unsigned 32 bit integer.\n *\n * @func isUinteger32\n * @aliases isUint32\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/3.2.0|v3.2.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.toUinteger32|toUinteger32}\n * @example\n *\n * RA.isUinteger32(0); //=> true\n * RA.isUinteger32(2 ** 32 - 1); //=> true\n *\n * RA.isUinteger32(Infinity); //=> false\n * RA.isUinteger32(NaN); //=> false\n * RA.isUinteger32(-1); //=> false\n * RA.isUinteger32(2 ** 32); //=> false\n */\nvar isUinteger32 = curryN(1, function (val) {\n  return toUinteger32(val) === val;\n});\nexport default isUinteger32;","map":{"version":3,"names":["curryN","toUinteger32","isUinteger32","val"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/isUinteger32.js"],"sourcesContent":["import { curryN } from 'ramda';\nimport toUinteger32 from './toUinteger32.js';\n\n/**\n * Checks whether the passed value is an unsigned 32 bit integer.\n *\n * @func isUinteger32\n * @aliases isUint32\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/3.2.0|v3.2.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.toUinteger32|toUinteger32}\n * @example\n *\n * RA.isUinteger32(0); //=> true\n * RA.isUinteger32(2 ** 32 - 1); //=> true\n *\n * RA.isUinteger32(Infinity); //=> false\n * RA.isUinteger32(NaN); //=> false\n * RA.isUinteger32(-1); //=> false\n * RA.isUinteger32(2 ** 32); //=> false\n */\nvar isUinteger32 = curryN(1, function (val) {\n  return toUinteger32(val) === val;\n});\nexport default isUinteger32;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,OAAOC,YAAY,MAAM,mBAAmB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,YAAY,GAAGF,MAAM,CAAC,CAAC,EAAE,UAAUG,GAAG,EAAE;EAC1C,OAAOF,YAAY,CAACE,GAAG,CAAC,KAAKA,GAAG;AAClC,CAAC,CAAC;AACF,eAAeD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}