{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sanitizeUrl = void 0;\nvar constants_1 = require(\"./constants\");\nfunction isRelativeUrlWithoutProtocol(url) {\n  return constants_1.relativeFirstCharacters.indexOf(url[0]) > -1;\n}\n// adapted from https://stackoverflow.com/a/29824550/2601552\nfunction decodeHtmlCharacters(str) {\n  var removedNullByte = str.replace(constants_1.ctrlCharactersRegex, \"\");\n  return removedNullByte.replace(constants_1.htmlEntitiesRegex, function (match, dec) {\n    return String.fromCharCode(dec);\n  });\n}\nfunction decodeURI(uri) {\n  try {\n    return decodeURIComponent(uri);\n  } catch (e) {\n    // Ignoring error\n    // It is possible that the URI contains a `%` not associated\n    // with URI/URL-encoding.\n    return uri;\n  }\n}\nfunction sanitizeUrl(url) {\n  if (!url) {\n    return constants_1.BLANK_URL;\n  }\n  var charsToDecode;\n  var decodedUrl = decodeURI(url);\n  do {\n    decodedUrl = decodeHtmlCharacters(decodedUrl).replace(constants_1.htmlCtrlEntityRegex, \"\").replace(constants_1.ctrlCharactersRegex, \"\").replace(constants_1.whitespaceEscapeCharsRegex, \"\").trim();\n    decodedUrl = decodeURI(decodedUrl);\n    charsToDecode = decodedUrl.match(constants_1.ctrlCharactersRegex) || decodedUrl.match(constants_1.htmlEntitiesRegex) || decodedUrl.match(constants_1.htmlCtrlEntityRegex) || decodedUrl.match(constants_1.whitespaceEscapeCharsRegex);\n  } while (charsToDecode && charsToDecode.length > 0);\n  var sanitizedUrl = decodedUrl;\n  if (!sanitizedUrl) {\n    return constants_1.BLANK_URL;\n  }\n  if (isRelativeUrlWithoutProtocol(sanitizedUrl)) {\n    return sanitizedUrl;\n  }\n  var urlSchemeParseResults = sanitizedUrl.match(constants_1.urlSchemeRegex);\n  if (!urlSchemeParseResults) {\n    return sanitizedUrl;\n  }\n  var urlScheme = urlSchemeParseResults[0];\n  if (constants_1.invalidProtocolRegex.test(urlScheme)) {\n    return constants_1.BLANK_URL;\n  }\n  return sanitizedUrl;\n}\nexports.sanitizeUrl = sanitizeUrl;","map":{"version":3,"names":["Object","defineProperty","exports","value","sanitizeUrl","constants_1","require","isRelativeUrlWithoutProtocol","url","relativeFirstCharacters","indexOf","decodeHtmlCharacters","str","removedNullByte","replace","ctrlCharactersRegex","htmlEntitiesRegex","match","dec","String","fromCharCode","decodeURI","uri","decodeURIComponent","e","BLANK_URL","charsToDecode","decodedUrl","htmlCtrlEntityRegex","whitespaceEscapeCharsRegex","trim","length","sanitizedUrl","urlSchemeParseResults","urlSchemeRegex","urlScheme","invalidProtocolRegex","test"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/@braintree/sanitize-url/dist/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sanitizeUrl = void 0;\nvar constants_1 = require(\"./constants\");\nfunction isRelativeUrlWithoutProtocol(url) {\n    return constants_1.relativeFirstCharacters.indexOf(url[0]) > -1;\n}\n// adapted from https://stackoverflow.com/a/29824550/2601552\nfunction decodeHtmlCharacters(str) {\n    var removedNullByte = str.replace(constants_1.ctrlCharactersRegex, \"\");\n    return removedNullByte.replace(constants_1.htmlEntitiesRegex, function (match, dec) {\n        return String.fromCharCode(dec);\n    });\n}\nfunction decodeURI(uri) {\n    try {\n        return decodeURIComponent(uri);\n    }\n    catch (e) {\n        // Ignoring error\n        // It is possible that the URI contains a `%` not associated\n        // with URI/URL-encoding.\n        return uri;\n    }\n}\nfunction sanitizeUrl(url) {\n    if (!url) {\n        return constants_1.BLANK_URL;\n    }\n    var charsToDecode;\n    var decodedUrl = decodeURI(url);\n    do {\n        decodedUrl = decodeHtmlCharacters(decodedUrl)\n            .replace(constants_1.htmlCtrlEntityRegex, \"\")\n            .replace(constants_1.ctrlCharactersRegex, \"\")\n            .replace(constants_1.whitespaceEscapeCharsRegex, \"\")\n            .trim();\n        decodedUrl = decodeURI(decodedUrl);\n        charsToDecode =\n            decodedUrl.match(constants_1.ctrlCharactersRegex) ||\n                decodedUrl.match(constants_1.htmlEntitiesRegex) ||\n                decodedUrl.match(constants_1.htmlCtrlEntityRegex) ||\n                decodedUrl.match(constants_1.whitespaceEscapeCharsRegex);\n    } while (charsToDecode && charsToDecode.length > 0);\n    var sanitizedUrl = decodedUrl;\n    if (!sanitizedUrl) {\n        return constants_1.BLANK_URL;\n    }\n    if (isRelativeUrlWithoutProtocol(sanitizedUrl)) {\n        return sanitizedUrl;\n    }\n    var urlSchemeParseResults = sanitizedUrl.match(constants_1.urlSchemeRegex);\n    if (!urlSchemeParseResults) {\n        return sanitizedUrl;\n    }\n    var urlScheme = urlSchemeParseResults[0];\n    if (constants_1.invalidProtocolRegex.test(urlScheme)) {\n        return constants_1.BLANK_URL;\n    }\n    return sanitizedUrl;\n}\nexports.sanitizeUrl = sanitizeUrl;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,WAAW,GAAG,KAAK,CAAC;AAC5B,IAAIC,WAAW,GAAGC,OAAO,CAAC,aAAa,CAAC;AACxC,SAASC,4BAA4BA,CAACC,GAAG,EAAE;EACvC,OAAOH,WAAW,CAACI,uBAAuB,CAACC,OAAO,CAACF,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnE;AACA;AACA,SAASG,oBAAoBA,CAACC,GAAG,EAAE;EAC/B,IAAIC,eAAe,GAAGD,GAAG,CAACE,OAAO,CAACT,WAAW,CAACU,mBAAmB,EAAE,EAAE,CAAC;EACtE,OAAOF,eAAe,CAACC,OAAO,CAACT,WAAW,CAACW,iBAAiB,EAAE,UAAUC,KAAK,EAAEC,GAAG,EAAE;IAChF,OAAOC,MAAM,CAACC,YAAY,CAACF,GAAG,CAAC;EACnC,CAAC,CAAC;AACN;AACA,SAASG,SAASA,CAACC,GAAG,EAAE;EACpB,IAAI;IACA,OAAOC,kBAAkB,CAACD,GAAG,CAAC;EAClC,CAAC,CACD,OAAOE,CAAC,EAAE;IACN;IACA;IACA;IACA,OAAOF,GAAG;EACd;AACJ;AACA,SAASlB,WAAWA,CAACI,GAAG,EAAE;EACtB,IAAI,CAACA,GAAG,EAAE;IACN,OAAOH,WAAW,CAACoB,SAAS;EAChC;EACA,IAAIC,aAAa;EACjB,IAAIC,UAAU,GAAGN,SAAS,CAACb,GAAG,CAAC;EAC/B,GAAG;IACCmB,UAAU,GAAGhB,oBAAoB,CAACgB,UAAU,CAAC,CACxCb,OAAO,CAACT,WAAW,CAACuB,mBAAmB,EAAE,EAAE,CAAC,CAC5Cd,OAAO,CAACT,WAAW,CAACU,mBAAmB,EAAE,EAAE,CAAC,CAC5CD,OAAO,CAACT,WAAW,CAACwB,0BAA0B,EAAE,EAAE,CAAC,CACnDC,IAAI,CAAC,CAAC;IACXH,UAAU,GAAGN,SAAS,CAACM,UAAU,CAAC;IAClCD,aAAa,GACTC,UAAU,CAACV,KAAK,CAACZ,WAAW,CAACU,mBAAmB,CAAC,IAC7CY,UAAU,CAACV,KAAK,CAACZ,WAAW,CAACW,iBAAiB,CAAC,IAC/CW,UAAU,CAACV,KAAK,CAACZ,WAAW,CAACuB,mBAAmB,CAAC,IACjDD,UAAU,CAACV,KAAK,CAACZ,WAAW,CAACwB,0BAA0B,CAAC;EACpE,CAAC,QAAQH,aAAa,IAAIA,aAAa,CAACK,MAAM,GAAG,CAAC;EAClD,IAAIC,YAAY,GAAGL,UAAU;EAC7B,IAAI,CAACK,YAAY,EAAE;IACf,OAAO3B,WAAW,CAACoB,SAAS;EAChC;EACA,IAAIlB,4BAA4B,CAACyB,YAAY,CAAC,EAAE;IAC5C,OAAOA,YAAY;EACvB;EACA,IAAIC,qBAAqB,GAAGD,YAAY,CAACf,KAAK,CAACZ,WAAW,CAAC6B,cAAc,CAAC;EAC1E,IAAI,CAACD,qBAAqB,EAAE;IACxB,OAAOD,YAAY;EACvB;EACA,IAAIG,SAAS,GAAGF,qBAAqB,CAAC,CAAC,CAAC;EACxC,IAAI5B,WAAW,CAAC+B,oBAAoB,CAACC,IAAI,CAACF,SAAS,CAAC,EAAE;IAClD,OAAO9B,WAAW,CAACoB,SAAS;EAChC;EACA,OAAOO,YAAY;AACvB;AACA9B,OAAO,CAACE,WAAW,GAAGA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}