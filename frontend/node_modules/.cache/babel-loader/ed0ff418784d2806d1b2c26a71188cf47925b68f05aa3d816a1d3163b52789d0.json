{"ast":null,"code":"const Element = require('../primitives/Element');\n\n/** Hyperlinking MAY be used to link to other resources, provide links to\n * instructions on how to process a given element (by way of a profile or\n * other means), and may be used to provide meta data about the element in\n * which it's found. The meaning and purpose of the hyperlink is defined by\n * the link relation according to RFC 5988.\n *\n * @class LinkElement\n *\n * @param content\n * @param meta\n * @param attributes\n */\nmodule.exports = class LinkElement extends Element {\n  constructor(content, meta, attributes) {\n    super(content || [], meta, attributes);\n    this.element = 'link';\n  }\n\n  /**\n   * The relation identifier for the link, as defined in RFC 5988.\n   * @type StringElement\n   */\n  get relation() {\n    return this.attributes.get('relation');\n  }\n  set relation(relation) {\n    this.attributes.set('relation', relation);\n  }\n\n  /**\n   * The URI for the given link.\n   * @type StringElement\n   */\n  get href() {\n    return this.attributes.get('href');\n  }\n  set href(href) {\n    this.attributes.set('href', href);\n  }\n};","map":{"version":3,"names":["Element","require","module","exports","LinkElement","constructor","content","meta","attributes","element","relation","get","set","href"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/minim/lib/elements/LinkElement.js"],"sourcesContent":["const Element = require('../primitives/Element');\n\n/** Hyperlinking MAY be used to link to other resources, provide links to\n * instructions on how to process a given element (by way of a profile or\n * other means), and may be used to provide meta data about the element in\n * which it's found. The meaning and purpose of the hyperlink is defined by\n * the link relation according to RFC 5988.\n *\n * @class LinkElement\n *\n * @param content\n * @param meta\n * @param attributes\n */\nmodule.exports = class LinkElement extends Element {\n  constructor(content, meta, attributes) {\n    super(content || [], meta, attributes);\n    this.element = 'link';\n  }\n\n  /**\n   * The relation identifier for the link, as defined in RFC 5988.\n   * @type StringElement\n   */\n  get relation() {\n    return this.attributes.get('relation');\n  }\n\n  set relation(relation) {\n    this.attributes.set('relation', relation);\n  }\n\n  /**\n   * The URI for the given link.\n   * @type StringElement\n   */\n  get href() {\n    return this.attributes.get('href');\n  }\n\n  set href(href) {\n    this.attributes.set('href', href);\n  }\n};\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,uBAAuB,CAAC;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,MAAMC,WAAW,SAASJ,OAAO,CAAC;EACjDK,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAEC,UAAU,EAAE;IACrC,KAAK,CAACF,OAAO,IAAI,EAAE,EAAEC,IAAI,EAAEC,UAAU,CAAC;IACtC,IAAI,CAACC,OAAO,GAAG,MAAM;EACvB;;EAEA;AACF;AACA;AACA;EACE,IAAIC,QAAQA,CAAA,EAAG;IACb,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAC,UAAU,CAAC;EACxC;EAEA,IAAID,QAAQA,CAACA,QAAQ,EAAE;IACrB,IAAI,CAACF,UAAU,CAACI,GAAG,CAAC,UAAU,EAAEF,QAAQ,CAAC;EAC3C;;EAEA;AACF;AACA;AACA;EACE,IAAIG,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACL,UAAU,CAACG,GAAG,CAAC,MAAM,CAAC;EACpC;EAEA,IAAIE,IAAIA,CAACA,IAAI,EAAE;IACb,IAAI,CAACL,UAAU,CAACI,GAAG,CAAC,MAAM,EAAEC,IAAI,CAAC;EACnC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}