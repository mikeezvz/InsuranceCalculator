{"ast":null,"code":"import { Mixin } from 'ts-mixer';\nimport { always } from 'ramda';\nimport { isStringElement } from '@swagger-api/apidom-core';\nimport JSONReferenceElement from \"../../../../elements/JSONReference.mjs\";\nimport FixedFieldsVisitor from \"../../generics/FixedFieldsVisitor.mjs\";\nimport FallbackVisitor from \"../../FallbackVisitor.mjs\";\nclass JSONReferenceVisitor extends Mixin(FixedFieldsVisitor, FallbackVisitor) {\n  constructor(options) {\n    super(options);\n    this.element = new JSONReferenceElement();\n    this.specPath = always(['document', 'objects', 'JSONReference']);\n  }\n  ObjectElement(objectElement) {\n    const result = FixedFieldsVisitor.prototype.ObjectElement.call(this, objectElement);\n\n    // mark this JSONReferenceElement with reference metadata\n    if (isStringElement(this.element.$ref)) {\n      this.element.classes.push('reference-element');\n    }\n    return result;\n  }\n}\nexport default JSONReferenceVisitor;","map":{"version":3,"names":["Mixin","always","isStringElement","JSONReferenceElement","FixedFieldsVisitor","FallbackVisitor","JSONReferenceVisitor","constructor","options","element","specPath","ObjectElement","objectElement","result","prototype","call","$ref","classes","push"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/@swagger-api/apidom-ns-json-schema-draft-4/es/refractor/visitors/json-schema/json-reference/index.mjs"],"sourcesContent":["import { Mixin } from 'ts-mixer';\nimport { always } from 'ramda';\nimport { isStringElement } from '@swagger-api/apidom-core';\nimport JSONReferenceElement from \"../../../../elements/JSONReference.mjs\";\nimport FixedFieldsVisitor from \"../../generics/FixedFieldsVisitor.mjs\";\nimport FallbackVisitor from \"../../FallbackVisitor.mjs\";\nclass JSONReferenceVisitor extends Mixin(FixedFieldsVisitor, FallbackVisitor) {\n  constructor(options) {\n    super(options);\n    this.element = new JSONReferenceElement();\n    this.specPath = always(['document', 'objects', 'JSONReference']);\n  }\n  ObjectElement(objectElement) {\n    const result = FixedFieldsVisitor.prototype.ObjectElement.call(this, objectElement);\n\n    // mark this JSONReferenceElement with reference metadata\n    if (isStringElement(this.element.$ref)) {\n      this.element.classes.push('reference-element');\n    }\n    return result;\n  }\n}\nexport default JSONReferenceVisitor;"],"mappings":"AAAA,SAASA,KAAK,QAAQ,UAAU;AAChC,SAASC,MAAM,QAAQ,OAAO;AAC9B,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,OAAOC,oBAAoB,MAAM,wCAAwC;AACzE,OAAOC,kBAAkB,MAAM,uCAAuC;AACtE,OAAOC,eAAe,MAAM,2BAA2B;AACvD,MAAMC,oBAAoB,SAASN,KAAK,CAACI,kBAAkB,EAAEC,eAAe,CAAC,CAAC;EAC5EE,WAAWA,CAACC,OAAO,EAAE;IACnB,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,OAAO,GAAG,IAAIN,oBAAoB,CAAC,CAAC;IACzC,IAAI,CAACO,QAAQ,GAAGT,MAAM,CAAC,CAAC,UAAU,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;EAClE;EACAU,aAAaA,CAACC,aAAa,EAAE;IAC3B,MAAMC,MAAM,GAAGT,kBAAkB,CAACU,SAAS,CAACH,aAAa,CAACI,IAAI,CAAC,IAAI,EAAEH,aAAa,CAAC;;IAEnF;IACA,IAAIV,eAAe,CAAC,IAAI,CAACO,OAAO,CAACO,IAAI,CAAC,EAAE;MACtC,IAAI,CAACP,OAAO,CAACQ,OAAO,CAACC,IAAI,CAAC,mBAAmB,CAAC;IAChD;IACA,OAAOL,MAAM;EACf;AACF;AACA,eAAeP,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}