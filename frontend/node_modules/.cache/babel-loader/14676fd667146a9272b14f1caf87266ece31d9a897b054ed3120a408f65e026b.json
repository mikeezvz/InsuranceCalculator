{"ast":null,"code":"/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Immutable = factory();\n})(this, function () {\n  'use strict';\n\n  var SLICE$0 = Array.prototype.slice;\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n  function Iterable(value) {\n    return isIterable(value) ? value : Seq(value);\n  }\n  createClass(KeyedIterable, Iterable);\n  function KeyedIterable(value) {\n    return isKeyed(value) ? value : KeyedSeq(value);\n  }\n  createClass(IndexedIterable, Iterable);\n  function IndexedIterable(value) {\n    return isIndexed(value) ? value : IndexedSeq(value);\n  }\n  createClass(SetIterable, Iterable);\n  function SetIterable(value) {\n    return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n  }\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = {\n    value: false\n  };\n  var DID_ALTER = {\n    value: false\n  };\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32âˆ’1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n  function returnTrue() {\n    return true;\n  }\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || size !== undefined && begin <= -size) && (end === undefined || size !== undefined && end >= size);\n  }\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ? defaultIndex : index < 0 ? Math.max(0, size + index) : size === undefined ? index : Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n  function Iterator(next) {\n    this.next = next;\n  }\n  Iterator.prototype.toString = function () {\n    return '[Iterator]';\n  };\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n  Iterator.prototype.inspect = Iterator.prototype.toSource = function () {\n    return this.toString();\n  };\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? iteratorResult.value = value : iteratorResult = {\n      value: value,\n      done: false\n    };\n    return iteratorResult;\n  }\n  function iteratorDone() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL] || iterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n  createClass(Seq, Iterable);\n  function Seq(value) {\n    return value === null || value === undefined ? emptySequence() : isIterable(value) ? value.toSeq() : seqFromValue(value);\n  }\n  Seq.of = function /*...values*/\n  () {\n    return Seq(arguments);\n  };\n  Seq.prototype.toSeq = function () {\n    return this;\n  };\n  Seq.prototype.toString = function () {\n    return this.__toString('Seq {', '}');\n  };\n  Seq.prototype.cacheResult = function () {\n    if (!this._cache && this.__iterateUncached) {\n      this._cache = this.entrySeq().toArray();\n      this.size = this._cache.length;\n    }\n    return this;\n  };\n\n  // abstract __iterateUncached(fn, reverse)\n\n  Seq.prototype.__iterate = function (fn, reverse) {\n    return seqIterate(this, fn, reverse, true);\n  };\n\n  // abstract __iteratorUncached(type, reverse)\n\n  Seq.prototype.__iterator = function (type, reverse) {\n    return seqIterator(this, type, reverse, true);\n  };\n  createClass(KeyedSeq, Seq);\n  function KeyedSeq(value) {\n    return value === null || value === undefined ? emptySequence().toKeyedSeq() : isIterable(value) ? isKeyed(value) ? value.toSeq() : value.fromEntrySeq() : keyedSeqFromValue(value);\n  }\n  KeyedSeq.prototype.toKeyedSeq = function () {\n    return this;\n  };\n  createClass(IndexedSeq, Seq);\n  function IndexedSeq(value) {\n    return value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n  }\n  IndexedSeq.of = function /*...values*/\n  () {\n    return IndexedSeq(arguments);\n  };\n  IndexedSeq.prototype.toIndexedSeq = function () {\n    return this;\n  };\n  IndexedSeq.prototype.toString = function () {\n    return this.__toString('Seq [', ']');\n  };\n  IndexedSeq.prototype.__iterate = function (fn, reverse) {\n    return seqIterate(this, fn, reverse, false);\n  };\n  IndexedSeq.prototype.__iterator = function (type, reverse) {\n    return seqIterator(this, type, reverse, false);\n  };\n  createClass(SetSeq, Seq);\n  function SetSeq(value) {\n    return (value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value).toSetSeq();\n  }\n  SetSeq.of = function /*...values*/\n  () {\n    return SetSeq(arguments);\n  };\n  SetSeq.prototype.toSetSeq = function () {\n    return this;\n  };\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n  createClass(ArraySeq, IndexedSeq);\n  function ArraySeq(array) {\n    this._array = array;\n    this.size = array.length;\n  }\n  ArraySeq.prototype.get = function (index, notSetValue) {\n    return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n  };\n  ArraySeq.prototype.__iterate = function (fn, reverse) {\n    var array = this._array;\n    var maxIndex = array.length - 1;\n    for (var ii = 0; ii <= maxIndex; ii++) {\n      if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n        return ii + 1;\n      }\n    }\n    return ii;\n  };\n  ArraySeq.prototype.__iterator = function (type, reverse) {\n    var array = this._array;\n    var maxIndex = array.length - 1;\n    var ii = 0;\n    return new Iterator(function () {\n      return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++]);\n    });\n  };\n  createClass(ObjectSeq, KeyedSeq);\n  function ObjectSeq(object) {\n    var keys = Object.keys(object);\n    this._object = object;\n    this._keys = keys;\n    this.size = keys.length;\n  }\n  ObjectSeq.prototype.get = function (key, notSetValue) {\n    if (notSetValue !== undefined && !this.has(key)) {\n      return notSetValue;\n    }\n    return this._object[key];\n  };\n  ObjectSeq.prototype.has = function (key) {\n    return this._object.hasOwnProperty(key);\n  };\n  ObjectSeq.prototype.__iterate = function (fn, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var maxIndex = keys.length - 1;\n    for (var ii = 0; ii <= maxIndex; ii++) {\n      var key = keys[reverse ? maxIndex - ii : ii];\n      if (fn(object[key], key, this) === false) {\n        return ii + 1;\n      }\n    }\n    return ii;\n  };\n  ObjectSeq.prototype.__iterator = function (type, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var maxIndex = keys.length - 1;\n    var ii = 0;\n    return new Iterator(function () {\n      var key = keys[reverse ? maxIndex - ii : ii];\n      return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, key, object[key]);\n    });\n  };\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n  createClass(IterableSeq, IndexedSeq);\n  function IterableSeq(iterable) {\n    this._iterable = iterable;\n    this.size = iterable.length || iterable.size;\n  }\n  IterableSeq.prototype.__iterateUncached = function (fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterable = this._iterable;\n    var iterator = getIterator(iterable);\n    var iterations = 0;\n    if (isIterator(iterator)) {\n      var step;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n    }\n    return iterations;\n  };\n  IterableSeq.prototype.__iteratorUncached = function (type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterable = this._iterable;\n    var iterator = getIterator(iterable);\n    if (!isIterator(iterator)) {\n      return new Iterator(iteratorDone);\n    }\n    var iterations = 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, iterations++, step.value);\n    });\n  };\n  createClass(IteratorSeq, IndexedSeq);\n  function IteratorSeq(iterator) {\n    this._iterator = iterator;\n    this._iteratorCache = [];\n  }\n  IteratorSeq.prototype.__iterateUncached = function (fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterator = this._iterator;\n    var cache = this._iteratorCache;\n    var iterations = 0;\n    while (iterations < cache.length) {\n      if (fn(cache[iterations], iterations++, this) === false) {\n        return iterations;\n      }\n    }\n    var step;\n    while (!(step = iterator.next()).done) {\n      var val = step.value;\n      cache[iterations] = val;\n      if (fn(val, iterations++, this) === false) {\n        break;\n      }\n    }\n    return iterations;\n  };\n  IteratorSeq.prototype.__iteratorUncached = function (type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = this._iterator;\n    var cache = this._iteratorCache;\n    var iterations = 0;\n    return new Iterator(function () {\n      if (iterations >= cache.length) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        cache[iterations] = step.value;\n      }\n      return iteratorValue(type, iterations, cache[iterations++]);\n    });\n  };\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n  var EMPTY_SEQ;\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n  function keyedSeqFromValue(value) {\n    var seq = Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() : isIterator(value) ? new IteratorSeq(value).fromEntrySeq() : hasIterator(value) ? new IterableSeq(value).fromEntrySeq() : typeof value === 'object' ? new ObjectSeq(value) : undefined;\n    if (!seq) {\n      throw new TypeError('Expected Array or iterable object of [k, v] entries, ' + 'or keyed object: ' + value);\n    }\n    return seq;\n  }\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError('Expected Array or iterable object of values: ' + value);\n    }\n    return seq;\n  }\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) || typeof value === 'object' && new ObjectSeq(value);\n    if (!seq) {\n      throw new TypeError('Expected Array or iterable object of values, or keyed object: ' + value);\n    }\n    return seq;\n  }\n  function maybeIndexedSeqFromValue(value) {\n    return isArrayLike(value) ? new ArraySeq(value) : isIterator(value) ? new IteratorSeq(value) : hasIterator(value) ? new IterableSeq(value) : undefined;\n  }\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function () {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n  function fromJS(json, converter) {\n    return converter ? fromJSWith(converter, json, '', {\n      '': json\n    }) : fromJSDefault(json);\n  }\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function (v, k) {\n        return fromJSWith(converter, v, k, json);\n      }));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function (v, k) {\n        return fromJSWith(converter, v, k, json);\n      }));\n    }\n    return json;\n  }\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || valueA !== valueA && valueB !== valueB) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' && typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || valueA !== valueA && valueB !== valueB) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' && typeof valueB.equals === 'function' && valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n    if (!isIterable(b) || a.size !== undefined && b.size !== undefined && a.size !== b.size || a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash || isKeyed(a) !== isKeyed(b) || isIndexed(a) !== isIndexed(b) || isOrdered(a) !== isOrdered(b)) {\n      return false;\n    }\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n    var notAssociative = !isAssociative(a);\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function (v, k) {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n    var flipped = false;\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n    var allEqual = true;\n    var bSize = b.__iterate(function (v, k) {\n      if (notAssociative ? !a.has(v) : flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n    return allEqual && a.size === bSize;\n  }\n  createClass(Repeat, IndexedSeq);\n  function Repeat(value, times) {\n    if (!(this instanceof Repeat)) {\n      return new Repeat(value, times);\n    }\n    this._value = value;\n    this.size = times === undefined ? Infinity : Math.max(0, times);\n    if (this.size === 0) {\n      if (EMPTY_REPEAT) {\n        return EMPTY_REPEAT;\n      }\n      EMPTY_REPEAT = this;\n    }\n  }\n  Repeat.prototype.toString = function () {\n    if (this.size === 0) {\n      return 'Repeat []';\n    }\n    return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n  };\n  Repeat.prototype.get = function (index, notSetValue) {\n    return this.has(index) ? this._value : notSetValue;\n  };\n  Repeat.prototype.includes = function (searchValue) {\n    return is(this._value, searchValue);\n  };\n  Repeat.prototype.slice = function (begin, end) {\n    var size = this.size;\n    return wholeSlice(begin, end, size) ? this : new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n  };\n  Repeat.prototype.reverse = function () {\n    return this;\n  };\n  Repeat.prototype.indexOf = function (searchValue) {\n    if (is(this._value, searchValue)) {\n      return 0;\n    }\n    return -1;\n  };\n  Repeat.prototype.lastIndexOf = function (searchValue) {\n    if (is(this._value, searchValue)) {\n      return this.size;\n    }\n    return -1;\n  };\n  Repeat.prototype.__iterate = function (fn, reverse) {\n    for (var ii = 0; ii < this.size; ii++) {\n      if (fn(this._value, ii, this) === false) {\n        return ii + 1;\n      }\n    }\n    return ii;\n  };\n  Repeat.prototype.__iterator = function (type, reverse) {\n    var this$0 = this;\n    var ii = 0;\n    return new Iterator(function () {\n      return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone();\n    });\n  };\n  Repeat.prototype.equals = function (other) {\n    return other instanceof Repeat ? is(this._value, other._value) : deepEqual(other);\n  };\n  var EMPTY_REPEAT;\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n  createClass(Range, IndexedSeq);\n  function Range(start, end, step) {\n    if (!(this instanceof Range)) {\n      return new Range(start, end, step);\n    }\n    invariant(step !== 0, 'Cannot step a Range by 0');\n    start = start || 0;\n    if (end === undefined) {\n      end = Infinity;\n    }\n    step = step === undefined ? 1 : Math.abs(step);\n    if (end < start) {\n      step = -step;\n    }\n    this._start = start;\n    this._end = end;\n    this._step = step;\n    this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n    if (this.size === 0) {\n      if (EMPTY_RANGE) {\n        return EMPTY_RANGE;\n      }\n      EMPTY_RANGE = this;\n    }\n  }\n  Range.prototype.toString = function () {\n    if (this.size === 0) {\n      return 'Range []';\n    }\n    return 'Range [ ' + this._start + '...' + this._end + (this._step !== 1 ? ' by ' + this._step : '') + ' ]';\n  };\n  Range.prototype.get = function (index, notSetValue) {\n    return this.has(index) ? this._start + wrapIndex(this, index) * this._step : notSetValue;\n  };\n  Range.prototype.includes = function (searchValue) {\n    var possibleIndex = (searchValue - this._start) / this._step;\n    return possibleIndex >= 0 && possibleIndex < this.size && possibleIndex === Math.floor(possibleIndex);\n  };\n  Range.prototype.slice = function (begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    begin = resolveBegin(begin, this.size);\n    end = resolveEnd(end, this.size);\n    if (end <= begin) {\n      return new Range(0, 0);\n    }\n    return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n  };\n  Range.prototype.indexOf = function (searchValue) {\n    var offsetValue = searchValue - this._start;\n    if (offsetValue % this._step === 0) {\n      var index = offsetValue / this._step;\n      if (index >= 0 && index < this.size) {\n        return index;\n      }\n    }\n    return -1;\n  };\n  Range.prototype.lastIndexOf = function (searchValue) {\n    return this.indexOf(searchValue);\n  };\n  Range.prototype.__iterate = function (fn, reverse) {\n    var maxIndex = this.size - 1;\n    var step = this._step;\n    var value = reverse ? this._start + maxIndex * step : this._start;\n    for (var ii = 0; ii <= maxIndex; ii++) {\n      if (fn(value, ii, this) === false) {\n        return ii + 1;\n      }\n      value += reverse ? -step : step;\n    }\n    return ii;\n  };\n  Range.prototype.__iterator = function (type, reverse) {\n    var maxIndex = this.size - 1;\n    var step = this._step;\n    var value = reverse ? this._start + maxIndex * step : this._start;\n    var ii = 0;\n    return new Iterator(function () {\n      var v = value;\n      value += reverse ? -step : step;\n      return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n    });\n  };\n  Range.prototype.equals = function (other) {\n    return other instanceof Range ? this._start === other._start && this._end === other._end && this._step === other._step : deepEqual(this, other);\n  };\n  var EMPTY_RANGE;\n  createClass(Collection, Iterable);\n  function Collection() {\n    throw TypeError('Abstract');\n  }\n  createClass(KeyedCollection, Collection);\n  function KeyedCollection() {}\n  createClass(IndexedCollection, Collection);\n  function IndexedCollection() {}\n  createClass(SetCollection, Collection);\n  function SetCollection() {}\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n  var imul = typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ? Math.imul : function imul(a, b) {\n    a = a | 0; // int\n    b = b | 0; // int\n    var c = a & 0xffff;\n    var d = b & 0xffff;\n    // Shift by 0 fixes the sign on the high part.\n    return c * d + ((a >>> 16) * d + c * (b >>> 16) << 16 >>> 0) | 0; // int\n  };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return i32 >>> 1 & 0x40000000 | i32 & 0xBFFFFFFF;\n  }\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      if (o !== o || o === Infinity) {\n        return 0;\n      }\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined && obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function () {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = function () {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }();\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1:\n          // Element\n          return node.uniqueID;\n        case 9:\n          // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n  var objHashUID = 0;\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n  function assertNotInfinite(size) {\n    invariant(size !== Infinity, 'Cannot perform this action with an infinite size.');\n  }\n  createClass(Map, KeyedCollection);\n\n  // @pragma Construction\n\n  function Map(value) {\n    return value === null || value === undefined ? emptyMap() : isMap(value) && !isOrdered(value) ? value : emptyMap().withMutations(function (map) {\n      var iter = KeyedIterable(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v, k) {\n        return map.set(k, v);\n      });\n    });\n  }\n  Map.of = function () {\n    var keyValues = SLICE$0.call(arguments, 0);\n    return emptyMap().withMutations(function (map) {\n      for (var i = 0; i < keyValues.length; i += 2) {\n        if (i + 1 >= keyValues.length) {\n          throw new Error('Missing value for key: ' + keyValues[i]);\n        }\n        map.set(keyValues[i], keyValues[i + 1]);\n      }\n    });\n  };\n  Map.prototype.toString = function () {\n    return this.__toString('Map {', '}');\n  };\n\n  // @pragma Access\n\n  Map.prototype.get = function (k, notSetValue) {\n    return this._root ? this._root.get(0, undefined, k, notSetValue) : notSetValue;\n  };\n\n  // @pragma Modification\n\n  Map.prototype.set = function (k, v) {\n    return updateMap(this, k, v);\n  };\n  Map.prototype.setIn = function (keyPath, v) {\n    return this.updateIn(keyPath, NOT_SET, function () {\n      return v;\n    });\n  };\n  Map.prototype.remove = function (k) {\n    return updateMap(this, k, NOT_SET);\n  };\n  Map.prototype.deleteIn = function (keyPath) {\n    return this.updateIn(keyPath, function () {\n      return NOT_SET;\n    });\n  };\n  Map.prototype.update = function (k, notSetValue, updater) {\n    return arguments.length === 1 ? k(this) : this.updateIn([k], notSetValue, updater);\n  };\n  Map.prototype.updateIn = function (keyPath, notSetValue, updater) {\n    if (!updater) {\n      updater = notSetValue;\n      notSetValue = undefined;\n    }\n    var updatedValue = updateInDeepMap(this, forceIterator(keyPath), notSetValue, updater);\n    return updatedValue === NOT_SET ? undefined : updatedValue;\n  };\n  Map.prototype.clear = function () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._root = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyMap();\n  };\n\n  // @pragma Composition\n\n  Map.prototype.merge = function /*...iters*/\n  () {\n    return mergeIntoMapWith(this, undefined, arguments);\n  };\n  Map.prototype.mergeWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return mergeIntoMapWith(this, merger, iters);\n  };\n  Map.prototype.mergeIn = function (keyPath) {\n    var iters = SLICE$0.call(arguments, 1);\n    return this.updateIn(keyPath, emptyMap(), function (m) {\n      return typeof m.merge === 'function' ? m.merge.apply(m, iters) : iters[iters.length - 1];\n    });\n  };\n  Map.prototype.mergeDeep = function /*...iters*/\n  () {\n    return mergeIntoMapWith(this, deepMerger, arguments);\n  };\n  Map.prototype.mergeDeepWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n  };\n  Map.prototype.mergeDeepIn = function (keyPath) {\n    var iters = SLICE$0.call(arguments, 1);\n    return this.updateIn(keyPath, emptyMap(), function (m) {\n      return typeof m.mergeDeep === 'function' ? m.mergeDeep.apply(m, iters) : iters[iters.length - 1];\n    });\n  };\n  Map.prototype.sort = function (comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator));\n  };\n  Map.prototype.sortBy = function (mapper, comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator, mapper));\n  };\n\n  // @pragma Mutability\n\n  Map.prototype.withMutations = function (fn) {\n    var mutable = this.asMutable();\n    fn(mutable);\n    return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n  };\n  Map.prototype.asMutable = function () {\n    return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n  };\n  Map.prototype.asImmutable = function () {\n    return this.__ensureOwner();\n  };\n  Map.prototype.wasAltered = function () {\n    return this.__altered;\n  };\n  Map.prototype.__iterator = function (type, reverse) {\n    return new MapIterator(this, type, reverse);\n  };\n  Map.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    var iterations = 0;\n    this._root && this._root.iterate(function (entry) {\n      iterations++;\n      return fn(entry[1], entry[0], this$0);\n    }, reverse);\n    return iterations;\n  };\n  Map.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeMap(this.size, this._root, ownerID, this.__hash);\n  };\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n  Map.isMap = isMap;\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n  // #pragma Trie Nodes\n\n  function ArrayMapNode(ownerID, entries) {\n    this.ownerID = ownerID;\n    this.entries = entries;\n  }\n  ArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    var entries = this.entries;\n    for (var ii = 0, len = entries.length; ii < len; ii++) {\n      if (is(key, entries[ii][0])) {\n        return entries[ii][1];\n      }\n    }\n    return notSetValue;\n  };\n  ArrayMapNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    var removed = value === NOT_SET;\n    var entries = this.entries;\n    var idx = 0;\n    for (var len = entries.length; idx < len; idx++) {\n      if (is(key, entries[idx][0])) {\n        break;\n      }\n    }\n    var exists = idx < len;\n    if (exists ? entries[idx][1] === value : removed) {\n      return this;\n    }\n    SetRef(didAlter);\n    (removed || !exists) && SetRef(didChangeSize);\n    if (removed && entries.length === 1) {\n      return; // undefined\n    }\n    if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n      return createNodes(ownerID, entries, key, value);\n    }\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newEntries = isEditable ? entries : arrCopy(entries);\n    if (exists) {\n      if (removed) {\n        idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();\n      } else {\n        newEntries[idx] = [key, value];\n      }\n    } else {\n      newEntries.push([key, value]);\n    }\n    if (isEditable) {\n      this.entries = newEntries;\n      return this;\n    }\n    return new ArrayMapNode(ownerID, newEntries);\n  };\n  function BitmapIndexedNode(ownerID, bitmap, nodes) {\n    this.ownerID = ownerID;\n    this.bitmap = bitmap;\n    this.nodes = nodes;\n  }\n  BitmapIndexedNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n    var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);\n    var bitmap = this.bitmap;\n    return (bitmap & bit) === 0 ? notSetValue : this.nodes[popCount(bitmap & bit - 1)].get(shift + SHIFT, keyHash, key, notSetValue);\n  };\n  BitmapIndexedNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n    var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var bit = 1 << keyHashFrag;\n    var bitmap = this.bitmap;\n    var exists = (bitmap & bit) !== 0;\n    if (!exists && value === NOT_SET) {\n      return this;\n    }\n    var idx = popCount(bitmap & bit - 1);\n    var nodes = this.nodes;\n    var node = exists ? nodes[idx] : undefined;\n    var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n    if (newNode === node) {\n      return this;\n    }\n    if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n      return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n    }\n    if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n      return nodes[idx ^ 1];\n    }\n    if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n      return newNode;\n    }\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n    var newNodes = exists ? newNode ? setIn(nodes, idx, newNode, isEditable) : spliceOut(nodes, idx, isEditable) : spliceIn(nodes, idx, newNode, isEditable);\n    if (isEditable) {\n      this.bitmap = newBitmap;\n      this.nodes = newNodes;\n      return this;\n    }\n    return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n  };\n  function HashArrayMapNode(ownerID, count, nodes) {\n    this.ownerID = ownerID;\n    this.count = count;\n    this.nodes = nodes;\n  }\n  HashArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var node = this.nodes[idx];\n    return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n  };\n  HashArrayMapNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var removed = value === NOT_SET;\n    var nodes = this.nodes;\n    var node = nodes[idx];\n    if (removed && !node) {\n      return this;\n    }\n    var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n    if (newNode === node) {\n      return this;\n    }\n    var newCount = this.count;\n    if (!node) {\n      newCount++;\n    } else if (!newNode) {\n      newCount--;\n      if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n        return packNodes(ownerID, nodes, newCount, idx);\n      }\n    }\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newNodes = setIn(nodes, idx, newNode, isEditable);\n    if (isEditable) {\n      this.count = newCount;\n      this.nodes = newNodes;\n      return this;\n    }\n    return new HashArrayMapNode(ownerID, newCount, newNodes);\n  };\n  function HashCollisionNode(ownerID, keyHash, entries) {\n    this.ownerID = ownerID;\n    this.keyHash = keyHash;\n    this.entries = entries;\n  }\n  HashCollisionNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    var entries = this.entries;\n    for (var ii = 0, len = entries.length; ii < len; ii++) {\n      if (is(key, entries[ii][0])) {\n        return entries[ii][1];\n      }\n    }\n    return notSetValue;\n  };\n  HashCollisionNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n    var removed = value === NOT_SET;\n    if (keyHash !== this.keyHash) {\n      if (removed) {\n        return this;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n    }\n    var entries = this.entries;\n    var idx = 0;\n    for (var len = entries.length; idx < len; idx++) {\n      if (is(key, entries[idx][0])) {\n        break;\n      }\n    }\n    var exists = idx < len;\n    if (exists ? entries[idx][1] === value : removed) {\n      return this;\n    }\n    SetRef(didAlter);\n    (removed || !exists) && SetRef(didChangeSize);\n    if (removed && len === 2) {\n      return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n    }\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newEntries = isEditable ? entries : arrCopy(entries);\n    if (exists) {\n      if (removed) {\n        idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();\n      } else {\n        newEntries[idx] = [key, value];\n      }\n    } else {\n      newEntries.push([key, value]);\n    }\n    if (isEditable) {\n      this.entries = newEntries;\n      return this;\n    }\n    return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n  };\n  function ValueNode(ownerID, keyHash, entry) {\n    this.ownerID = ownerID;\n    this.keyHash = keyHash;\n    this.entry = entry;\n  }\n  ValueNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n  };\n  ValueNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    var removed = value === NOT_SET;\n    var keyMatch = is(key, this.entry[0]);\n    if (keyMatch ? value === this.entry[1] : removed) {\n      return this;\n    }\n    SetRef(didAlter);\n    if (removed) {\n      SetRef(didChangeSize);\n      return; // undefined\n    }\n    if (keyMatch) {\n      if (ownerID && ownerID === this.ownerID) {\n        this.entry[1] = value;\n        return this;\n      }\n      return new ValueNode(ownerID, this.keyHash, [key, value]);\n    }\n    SetRef(didChangeSize);\n    return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n  };\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  };\n  BitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  };\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  };\n  createClass(MapIterator, Iterator);\n  function MapIterator(map, type, reverse) {\n    this._type = type;\n    this._reverse = reverse;\n    this._stack = map._root && mapIteratorFrame(map._root);\n  }\n  MapIterator.prototype.next = function () {\n    var type = this._type;\n    var stack = this._stack;\n    while (stack) {\n      var node = stack.node;\n      var index = stack.index++;\n      var maxIndex;\n      if (node.entry) {\n        if (index === 0) {\n          return mapIteratorValue(type, node.entry);\n        }\n      } else if (node.entries) {\n        maxIndex = node.entries.length - 1;\n        if (index <= maxIndex) {\n          return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n        }\n      } else {\n        maxIndex = node.nodes.length - 1;\n        if (index <= maxIndex) {\n          var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n          if (subNode) {\n            if (subNode.entry) {\n              return mapIteratorValue(type, subNode.entry);\n            }\n            stack = this._stack = mapIteratorFrame(subNode, stack);\n          }\n          continue;\n        }\n      }\n      stack = this._stack = this._stack.__prev;\n    }\n    return iteratorDone();\n  };\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var newNode;\n    var nodes = idx1 === idx2 ? [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] : (newNode = new ValueNode(ownerID, keyHash, entry), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n    return new BitmapIndexedNode(ownerID, 1 << idx1 | 1 << idx2, nodes);\n  }\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function (v) {\n          return fromJS(v);\n        });\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ? existing.mergeDeep(value) : is(existing, value) ? existing : value;\n  }\n  function deepMergerWith(merger) {\n    return function (existing, value, key) {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function (x) {\n      return x.size !== 0;\n    });\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function (collection) {\n      var mergeIntoMap = merger ? function (value, key) {\n        collection.update(key, NOT_SET, function (existing) {\n          return existing === NOT_SET ? value : merger(existing, value, key);\n        });\n      } : function (value, key) {\n        collection.set(key, value);\n      };\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(isNotSet || existing && existing.set, 'invalid keyPath');\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(nextExisting, keyPathIter, notSetValue, updater);\n    return nextUpdated === nextExisting ? existing : nextUpdated === NOT_SET ? existing.remove(key) : (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n  function popCount(x) {\n    x = x - (x >> 1 & 0x55555555);\n    x = (x & 0x33333333) + (x >> 2 & 0x33333333);\n    x = x + (x >> 4) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n  createClass(List, IndexedCollection);\n\n  // @pragma Construction\n\n  function List(value) {\n    var empty = emptyList();\n    if (value === null || value === undefined) {\n      return empty;\n    }\n    if (isList(value)) {\n      return value;\n    }\n    var iter = IndexedIterable(value);\n    var size = iter.size;\n    if (size === 0) {\n      return empty;\n    }\n    assertNotInfinite(size);\n    if (size > 0 && size < SIZE) {\n      return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n    }\n    return empty.withMutations(function (list) {\n      list.setSize(size);\n      iter.forEach(function (v, i) {\n        return list.set(i, v);\n      });\n    });\n  }\n  List.of = function /*...values*/\n  () {\n    return this(arguments);\n  };\n  List.prototype.toString = function () {\n    return this.__toString('List [', ']');\n  };\n\n  // @pragma Access\n\n  List.prototype.get = function (index, notSetValue) {\n    index = wrapIndex(this, index);\n    if (index >= 0 && index < this.size) {\n      index += this._origin;\n      var node = listNodeFor(this, index);\n      return node && node.array[index & MASK];\n    }\n    return notSetValue;\n  };\n\n  // @pragma Modification\n\n  List.prototype.set = function (index, value) {\n    return updateList(this, index, value);\n  };\n  List.prototype.remove = function (index) {\n    return !this.has(index) ? this : index === 0 ? this.shift() : index === this.size - 1 ? this.pop() : this.splice(index, 1);\n  };\n  List.prototype.insert = function (index, value) {\n    return this.splice(index, 0, value);\n  };\n  List.prototype.clear = function () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = this._origin = this._capacity = 0;\n      this._level = SHIFT;\n      this._root = this._tail = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyList();\n  };\n  List.prototype.push = function /*...values*/\n  () {\n    var values = arguments;\n    var oldSize = this.size;\n    return this.withMutations(function (list) {\n      setListBounds(list, 0, oldSize + values.length);\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(oldSize + ii, values[ii]);\n      }\n    });\n  };\n  List.prototype.pop = function () {\n    return setListBounds(this, 0, -1);\n  };\n  List.prototype.unshift = function /*...values*/\n  () {\n    var values = arguments;\n    return this.withMutations(function (list) {\n      setListBounds(list, -values.length);\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(ii, values[ii]);\n      }\n    });\n  };\n  List.prototype.shift = function () {\n    return setListBounds(this, 1);\n  };\n\n  // @pragma Composition\n\n  List.prototype.merge = function /*...iters*/\n  () {\n    return mergeIntoListWith(this, undefined, arguments);\n  };\n  List.prototype.mergeWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return mergeIntoListWith(this, merger, iters);\n  };\n  List.prototype.mergeDeep = function /*...iters*/\n  () {\n    return mergeIntoListWith(this, deepMerger, arguments);\n  };\n  List.prototype.mergeDeepWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return mergeIntoListWith(this, deepMergerWith(merger), iters);\n  };\n  List.prototype.setSize = function (size) {\n    return setListBounds(this, 0, size);\n  };\n\n  // @pragma Iteration\n\n  List.prototype.slice = function (begin, end) {\n    var size = this.size;\n    if (wholeSlice(begin, end, size)) {\n      return this;\n    }\n    return setListBounds(this, resolveBegin(begin, size), resolveEnd(end, size));\n  };\n  List.prototype.__iterator = function (type, reverse) {\n    var index = 0;\n    var values = iterateList(this, reverse);\n    return new Iterator(function () {\n      var value = values();\n      return value === DONE ? iteratorDone() : iteratorValue(type, index++, value);\n    });\n  };\n  List.prototype.__iterate = function (fn, reverse) {\n    var index = 0;\n    var values = iterateList(this, reverse);\n    var value;\n    while ((value = values()) !== DONE) {\n      if (fn(value, index++, this) === false) {\n        break;\n      }\n    }\n    return index;\n  };\n  List.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      return this;\n    }\n    return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n  };\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n  List.isList = isList;\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn = ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n  function VNode(array, ownerID) {\n    this.array = array;\n    this.ownerID = ownerID;\n  }\n\n  // TODO: seems like these methods are very similar\n\n  VNode.prototype.removeBefore = function (ownerID, level, index) {\n    if (index === level ? 1 << level : 0 || this.array.length === 0) {\n      return this;\n    }\n    var originIndex = index >>> level & MASK;\n    if (originIndex >= this.array.length) {\n      return new VNode([], ownerID);\n    }\n    var removingFirst = originIndex === 0;\n    var newChild;\n    if (level > 0) {\n      var oldChild = this.array[originIndex];\n      newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n      if (newChild === oldChild && removingFirst) {\n        return this;\n      }\n    }\n    if (removingFirst && !newChild) {\n      return this;\n    }\n    var editable = editableVNode(this, ownerID);\n    if (!removingFirst) {\n      for (var ii = 0; ii < originIndex; ii++) {\n        editable.array[ii] = undefined;\n      }\n    }\n    if (newChild) {\n      editable.array[originIndex] = newChild;\n    }\n    return editable;\n  };\n  VNode.prototype.removeAfter = function (ownerID, level, index) {\n    if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n      return this;\n    }\n    var sizeIndex = index - 1 >>> level & MASK;\n    if (sizeIndex >= this.array.length) {\n      return this;\n    }\n    var newChild;\n    if (level > 0) {\n      var oldChild = this.array[sizeIndex];\n      newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n      if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n        return this;\n      }\n    }\n    var editable = editableVNode(this, ownerID);\n    editable.array.splice(sizeIndex + 1);\n    if (newChild) {\n      editable.array[sizeIndex] = newChild;\n    }\n    return editable;\n  };\n  var DONE = {};\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ? iterateLeaf(node, offset) : iterateNode(node, level, offset);\n    }\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function () {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : left - offset >> level;\n      var to = (right - offset >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function () {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(array && array[idx], level - SHIFT, offset + (idx << level));\n        } while (true);\n      };\n    }\n  }\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n    if (index !== index) {\n      return list;\n    }\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function (list) {\n        index < 0 ? setListBounds(list, index).set(0, value) : setListBounds(list, 0, index + 1).set(index, value);\n      });\n    }\n    index += list._origin;\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n    if (!didAlter.value) {\n      return list;\n    }\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = index >>> level & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n    var newNode;\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n    SetRef(didAlter);\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << list._level + SHIFT) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[rawIndex >>> level & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << newLevel + SHIFT) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ? listNodeFor(list, newCapacity - 1) : newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = oldTailOffset >>> level & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[oldTailOffset >>> SHIFT & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n      // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = newOrigin >>> newLevel & MASK;\n        if (beginIndex !== newTailOffset >>> newLevel & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function (v) {\n          return fromJS(v);\n        });\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : size - 1 >>> SHIFT << SHIFT;\n  }\n  createClass(OrderedMap, Map);\n\n  // @pragma Construction\n\n  function OrderedMap(value) {\n    return value === null || value === undefined ? emptyOrderedMap() : isOrderedMap(value) ? value : emptyOrderedMap().withMutations(function (map) {\n      var iter = KeyedIterable(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v, k) {\n        return map.set(k, v);\n      });\n    });\n  }\n  OrderedMap.of = function /*...values*/\n  () {\n    return this(arguments);\n  };\n  OrderedMap.prototype.toString = function () {\n    return this.__toString('OrderedMap {', '}');\n  };\n\n  // @pragma Access\n\n  OrderedMap.prototype.get = function (k, notSetValue) {\n    var index = this._map.get(k);\n    return index !== undefined ? this._list.get(index)[1] : notSetValue;\n  };\n\n  // @pragma Modification\n\n  OrderedMap.prototype.clear = function () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._map.clear();\n      this._list.clear();\n      return this;\n    }\n    return emptyOrderedMap();\n  };\n  OrderedMap.prototype.set = function (k, v) {\n    return updateOrderedMap(this, k, v);\n  };\n  OrderedMap.prototype.remove = function (k) {\n    return updateOrderedMap(this, k, NOT_SET);\n  };\n  OrderedMap.prototype.wasAltered = function () {\n    return this._map.wasAltered() || this._list.wasAltered();\n  };\n  OrderedMap.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return this._list.__iterate(function (entry) {\n      return entry && fn(entry[1], entry[0], this$0);\n    }, reverse);\n  };\n  OrderedMap.prototype.__iterator = function (type, reverse) {\n    return this._list.fromEntrySeq().__iterator(type, reverse);\n  };\n  OrderedMap.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    var newMap = this._map.__ensureOwner(ownerID);\n    var newList = this._list.__ensureOwner(ownerID);\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      this._list = newList;\n      return this;\n    }\n    return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n  };\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n  OrderedMap.isOrderedMap = isOrderedMap;\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) {\n      // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function (entry, idx) {\n          return entry !== undefined && i !== idx;\n        });\n        newMap = newList.toKeyedSeq().map(function (entry) {\n          return entry[0];\n        }).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n  createClass(ToKeyedSequence, KeyedSeq);\n  function ToKeyedSequence(indexed, useKeys) {\n    this._iter = indexed;\n    this._useKeys = useKeys;\n    this.size = indexed.size;\n  }\n  ToKeyedSequence.prototype.get = function (key, notSetValue) {\n    return this._iter.get(key, notSetValue);\n  };\n  ToKeyedSequence.prototype.has = function (key) {\n    return this._iter.has(key);\n  };\n  ToKeyedSequence.prototype.valueSeq = function () {\n    return this._iter.valueSeq();\n  };\n  ToKeyedSequence.prototype.reverse = function () {\n    var this$0 = this;\n    var reversedSequence = reverseFactory(this, true);\n    if (!this._useKeys) {\n      reversedSequence.valueSeq = function () {\n        return this$0._iter.toSeq().reverse();\n      };\n    }\n    return reversedSequence;\n  };\n  ToKeyedSequence.prototype.map = function (mapper, context) {\n    var this$0 = this;\n    var mappedSequence = mapFactory(this, mapper, context);\n    if (!this._useKeys) {\n      mappedSequence.valueSeq = function () {\n        return this$0._iter.toSeq().map(mapper, context);\n      };\n    }\n    return mappedSequence;\n  };\n  ToKeyedSequence.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    var ii;\n    return this._iter.__iterate(this._useKeys ? function (v, k) {\n      return fn(v, k, this$0);\n    } : (ii = reverse ? resolveSize(this) : 0, function (v) {\n      return fn(v, reverse ? --ii : ii++, this$0);\n    }), reverse);\n  };\n  ToKeyedSequence.prototype.__iterator = function (type, reverse) {\n    if (this._useKeys) {\n      return this._iter.__iterator(type, reverse);\n    }\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    var ii = reverse ? resolveSize(this) : 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n    });\n  };\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n  createClass(ToIndexedSequence, IndexedSeq);\n  function ToIndexedSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n  ToIndexedSequence.prototype.includes = function (value) {\n    return this._iter.includes(value);\n  };\n  ToIndexedSequence.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    var iterations = 0;\n    return this._iter.__iterate(function (v) {\n      return fn(v, iterations++, this$0);\n    }, reverse);\n  };\n  ToIndexedSequence.prototype.__iterator = function (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    var iterations = 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, iterations++, step.value, step);\n    });\n  };\n  createClass(ToSetSequence, SetSeq);\n  function ToSetSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n  ToSetSequence.prototype.has = function (key) {\n    return this._iter.includes(key);\n  };\n  ToSetSequence.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return this._iter.__iterate(function (v) {\n      return fn(v, v, this$0);\n    }, reverse);\n  };\n  ToSetSequence.prototype.__iterator = function (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, step.value, step.value, step);\n    });\n  };\n  createClass(FromEntriesSequence, KeyedSeq);\n  function FromEntriesSequence(entries) {\n    this._iter = entries;\n    this.size = entries.size;\n  }\n  FromEntriesSequence.prototype.entrySeq = function () {\n    return this._iter.toSeq();\n  };\n  FromEntriesSequence.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return this._iter.__iterate(function (entry) {\n      // Check if entry exists first so array access doesn't throw for holes\n      // in the parent iteration.\n      if (entry) {\n        validateEntry(entry);\n        var indexedIterable = isIterable(entry);\n        return fn(indexedIterable ? entry.get(1) : entry[1], indexedIterable ? entry.get(0) : entry[0], this$0);\n      }\n    }, reverse);\n  };\n  FromEntriesSequence.prototype.__iterator = function (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return iteratorValue(type, indexedIterable ? entry.get(0) : entry[0], indexedIterable ? entry.get(1) : entry[1], step);\n        }\n      }\n    });\n  };\n  ToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function () {\n      return iterable;\n    };\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function () {\n        return iterable.reverse();\n      };\n      return reversedSequence;\n    };\n    flipSequence.has = function (key) {\n      return iterable.includes(key);\n    };\n    flipSequence.includes = function (key) {\n      return iterable.has(key);\n    };\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      return iterable.__iterate(function (v, k) {\n        return fn(k, v, this$0) !== false;\n      }, reverse);\n    };\n    flipSequence.__iteratorUncached = function (type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function () {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES, reverse);\n    };\n    return flipSequence;\n  }\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function (key) {\n      return iterable.has(key);\n    };\n    mappedSequence.get = function (key, notSetValue) {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ? notSetValue : mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      return iterable.__iterate(function (v, k, c) {\n        return fn(mapper.call(context, v, k, c), k, this$0) !== false;\n      }, reverse);\n    };\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function () {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(type, key, mapper.call(context, entry[1], key, iterable), step);\n      });\n    };\n    return mappedSequence;\n  }\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function () {\n      return iterable;\n    };\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function () {\n          return iterable.flip();\n        };\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function (key, notSetValue) {\n      return iterable.get(useKeys ? key : -1 - key, notSetValue);\n    };\n    reversedSequence.has = function (key) {\n      return iterable.has(useKeys ? key : -1 - key);\n    };\n    reversedSequence.includes = function (value) {\n      return iterable.includes(value);\n    };\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {\n      var this$0 = this;\n      return iterable.__iterate(function (v, k) {\n        return fn(v, k, this$0);\n      }, !reverse);\n    };\n    reversedSequence.__iterator = function (type, reverse) {\n      return iterable.__iterator(type, !reverse);\n    };\n    return reversedSequence;\n  }\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function (key) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function (key, notSetValue) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ? v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function (v, k, c) {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function () {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    };\n    return filterSequence;\n  }\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function (v, k) {\n      groups.update(grouper.call(context, v, k, iterable), 0, function (a) {\n        return a + 1;\n      });\n    });\n    return groups.asImmutable();\n  }\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function (v, k) {\n      groups.update(grouper.call(context, v, k, iterable), function (a) {\n        return a = a || [], a.push(isKeyedIter ? [k, v] : v), a;\n      });\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function (arr) {\n      return reify(iterable, coerce(arr));\n    });\n  }\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      if (end === Infinity) {\n        end = originalSize;\n      } else {\n        end = end | 0;\n      }\n    }\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ? iterable.get(index + resolvedBegin, notSetValue) : notSetValue;\n      };\n    }\n    sliceSeq.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function (v, k) {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false && iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n    sliceSeq.__iteratorUncached = function (type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function () {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    };\n    return sliceSeq;\n  }\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function (v, k, c) {\n        return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0);\n      });\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function (type, reverse) {\n      var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function () {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function (v, k, c) {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function (type, reverse) {\n      var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function () {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function (v) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ? keyedSeqFromValue(v) : indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function (v) {\n      return v.size !== 0;\n    });\n    if (iters.length === 0) {\n      return iterable;\n    }\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable || isKeyedIterable && isKeyed(singleton) || isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(function (sum, seq) {\n      if (sum !== undefined) {\n        var size = seq.size;\n        if (size !== undefined) {\n          return sum + size;\n        }\n      }\n    }, 0);\n    return concatSeq;\n  }\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function (fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {\n        var this$0 = this;\n        iter.__iterate(function (v, k) {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    };\n    flatSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function () {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    };\n    return flatSequence;\n  }\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(function (v, k) {\n      return coerce(mapper.call(context, v, k, iterable));\n    }).flatten(true);\n  }\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 - 1;\n    interposedSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function (v, k) {\n        return (!iterations || fn(separator, iterations++, this$0) !== false) && fn(v, iterations++, this$0) !== false;\n      }, reverse);\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function () {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ? iteratorValue(type, iterations++, separator) : iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(function (v, k) {\n      return [k, v, index++, mapper ? mapper(v, k, iterable) : v];\n    }).toArray();\n    entries.sort(function (a, b) {\n      return comparator(a[3], b[3]) || a[2] - b[2];\n    }).forEach(isKeyedIterable ? function (v, i) {\n      entries[i].length = 2;\n    } : function (v, i) {\n      entries[i] = v[1];\n    });\n    return isKeyedIterable ? KeyedSeq(entries) : isIndexed(iterable) ? IndexedSeq(entries) : SetSeq(entries);\n  }\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq().map(function (v, k) {\n        return [v, mapper(v, k, iterable)];\n      }).reduce(function (a, b) {\n        return maxCompare(comparator, a[1], b[1]) ? b : a;\n      });\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function (a, b) {\n        return maxCompare(comparator, a, b) ? b : a;\n      });\n    }\n  }\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return comp === 0 && b !== a && (b === undefined || b === null || b !== b) || comp > 0;\n  }\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function (i) {\n      return i.size;\n    }).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function (fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function (type, reverse) {\n      var iterators = iters.map(function (i) {\n        return i = Iterable(i), getIterator(reverse ? i.reverse() : i);\n      });\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function () {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function (i) {\n            return i.next();\n          });\n          isDone = steps.some(function (s) {\n            return s.done;\n          });\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(type, iterations++, zipper.apply(null, steps.map(function (s) {\n          return s.value;\n        })));\n      });\n    };\n    return zipSequence;\n  }\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable : isIndexed(iterable) ? IndexedIterable : SetIterable;\n  }\n  function makeSequence(iterable) {\n    return Object.create((isKeyed(iterable) ? KeyedSeq : isIndexed(iterable) ? IndexedSeq : SetSeq).prototype);\n  }\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n  createClass(Record, KeyedCollection);\n  function Record(defaultValues, name) {\n    var hasInitialized;\n    var RecordType = function Record(values) {\n      if (values instanceof RecordType) {\n        return values;\n      }\n      if (!(this instanceof RecordType)) {\n        return new RecordType(values);\n      }\n      if (!hasInitialized) {\n        hasInitialized = true;\n        var keys = Object.keys(defaultValues);\n        setProps(RecordTypePrototype, keys);\n        RecordTypePrototype.size = keys.length;\n        RecordTypePrototype._name = name;\n        RecordTypePrototype._keys = keys;\n        RecordTypePrototype._defaultValues = defaultValues;\n      }\n      this._map = Map(values);\n    };\n    var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n    RecordTypePrototype.constructor = RecordType;\n    return RecordType;\n  }\n  Record.prototype.toString = function () {\n    return this.__toString(recordName(this) + ' {', '}');\n  };\n\n  // @pragma Access\n\n  Record.prototype.has = function (k) {\n    return this._defaultValues.hasOwnProperty(k);\n  };\n  Record.prototype.get = function (k, notSetValue) {\n    if (!this.has(k)) {\n      return notSetValue;\n    }\n    var defaultVal = this._defaultValues[k];\n    return this._map ? this._map.get(k, defaultVal) : defaultVal;\n  };\n\n  // @pragma Modification\n\n  Record.prototype.clear = function () {\n    if (this.__ownerID) {\n      this._map && this._map.clear();\n      return this;\n    }\n    var RecordType = this.constructor;\n    return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n  };\n  Record.prototype.set = function (k, v) {\n    if (!this.has(k)) {\n      throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n    }\n    if (this._map && !this._map.has(k)) {\n      var defaultVal = this._defaultValues[k];\n      if (v === defaultVal) {\n        return this;\n      }\n    }\n    var newMap = this._map && this._map.set(k, v);\n    if (this.__ownerID || newMap === this._map) {\n      return this;\n    }\n    return makeRecord(this, newMap);\n  };\n  Record.prototype.remove = function (k) {\n    if (!this.has(k)) {\n      return this;\n    }\n    var newMap = this._map && this._map.remove(k);\n    if (this.__ownerID || newMap === this._map) {\n      return this;\n    }\n    return makeRecord(this, newMap);\n  };\n  Record.prototype.wasAltered = function () {\n    return this._map.wasAltered();\n  };\n  Record.prototype.__iterator = function (type, reverse) {\n    var this$0 = this;\n    return KeyedIterable(this._defaultValues).map(function (_, k) {\n      return this$0.get(k);\n    }).__iterator(type, reverse);\n  };\n  Record.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return KeyedIterable(this._defaultValues).map(function (_, k) {\n      return this$0.get(k);\n    }).__iterate(fn, reverse);\n  };\n  Record.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    var newMap = this._map && this._map.__ensureOwner(ownerID);\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      return this;\n    }\n    return makeRecord(this, newMap, ownerID);\n  };\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn = RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function () {\n        return this.get(name);\n      },\n      set: function (value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n  createClass(Set, SetCollection);\n\n  // @pragma Construction\n\n  function Set(value) {\n    return value === null || value === undefined ? emptySet() : isSet(value) && !isOrdered(value) ? value : emptySet().withMutations(function (set) {\n      var iter = SetIterable(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v) {\n        return set.add(v);\n      });\n    });\n  }\n  Set.of = function /*...values*/\n  () {\n    return this(arguments);\n  };\n  Set.fromKeys = function (value) {\n    return this(KeyedIterable(value).keySeq());\n  };\n  Set.prototype.toString = function () {\n    return this.__toString('Set {', '}');\n  };\n\n  // @pragma Access\n\n  Set.prototype.has = function (value) {\n    return this._map.has(value);\n  };\n\n  // @pragma Modification\n\n  Set.prototype.add = function (value) {\n    return updateSet(this, this._map.set(value, true));\n  };\n  Set.prototype.remove = function (value) {\n    return updateSet(this, this._map.remove(value));\n  };\n  Set.prototype.clear = function () {\n    return updateSet(this, this._map.clear());\n  };\n\n  // @pragma Composition\n\n  Set.prototype.union = function () {\n    var iters = SLICE$0.call(arguments, 0);\n    iters = iters.filter(function (x) {\n      return x.size !== 0;\n    });\n    if (iters.length === 0) {\n      return this;\n    }\n    if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n      return this.constructor(iters[0]);\n    }\n    return this.withMutations(function (set) {\n      for (var ii = 0; ii < iters.length; ii++) {\n        SetIterable(iters[ii]).forEach(function (value) {\n          return set.add(value);\n        });\n      }\n    });\n  };\n  Set.prototype.intersect = function () {\n    var iters = SLICE$0.call(arguments, 0);\n    if (iters.length === 0) {\n      return this;\n    }\n    iters = iters.map(function (iter) {\n      return SetIterable(iter);\n    });\n    var originalSet = this;\n    return this.withMutations(function (set) {\n      originalSet.forEach(function (value) {\n        if (!iters.every(function (iter) {\n          return iter.includes(value);\n        })) {\n          set.remove(value);\n        }\n      });\n    });\n  };\n  Set.prototype.subtract = function () {\n    var iters = SLICE$0.call(arguments, 0);\n    if (iters.length === 0) {\n      return this;\n    }\n    iters = iters.map(function (iter) {\n      return SetIterable(iter);\n    });\n    var originalSet = this;\n    return this.withMutations(function (set) {\n      originalSet.forEach(function (value) {\n        if (iters.some(function (iter) {\n          return iter.includes(value);\n        })) {\n          set.remove(value);\n        }\n      });\n    });\n  };\n  Set.prototype.merge = function () {\n    return this.union.apply(this, arguments);\n  };\n  Set.prototype.mergeWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return this.union.apply(this, iters);\n  };\n  Set.prototype.sort = function (comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator));\n  };\n  Set.prototype.sortBy = function (mapper, comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator, mapper));\n  };\n  Set.prototype.wasAltered = function () {\n    return this._map.wasAltered();\n  };\n  Set.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return this._map.__iterate(function (_, k) {\n      return fn(k, k, this$0);\n    }, reverse);\n  };\n  Set.prototype.__iterator = function (type, reverse) {\n    return this._map.map(function (_, k) {\n      return k;\n    }).__iterator(type, reverse);\n  };\n  Set.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    var newMap = this._map.__ensureOwner(ownerID);\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      return this;\n    }\n    return this.__make(newMap, ownerID);\n  };\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n  Set.isSet = isSet;\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set : newMap.size === 0 ? set.__empty() : set.__make(newMap);\n  }\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n  createClass(OrderedSet, Set);\n\n  // @pragma Construction\n\n  function OrderedSet(value) {\n    return value === null || value === undefined ? emptyOrderedSet() : isOrderedSet(value) ? value : emptyOrderedSet().withMutations(function (set) {\n      var iter = SetIterable(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v) {\n        return set.add(v);\n      });\n    });\n  }\n  OrderedSet.of = function /*...values*/\n  () {\n    return this(arguments);\n  };\n  OrderedSet.fromKeys = function (value) {\n    return this(KeyedIterable(value).keySeq());\n  };\n  OrderedSet.prototype.toString = function () {\n    return this.__toString('OrderedSet {', '}');\n  };\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n  OrderedSet.isOrderedSet = isOrderedSet;\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n  createClass(Stack, IndexedCollection);\n\n  // @pragma Construction\n\n  function Stack(value) {\n    return value === null || value === undefined ? emptyStack() : isStack(value) ? value : emptyStack().unshiftAll(value);\n  }\n  Stack.of = function /*...values*/\n  () {\n    return this(arguments);\n  };\n  Stack.prototype.toString = function () {\n    return this.__toString('Stack [', ']');\n  };\n\n  // @pragma Access\n\n  Stack.prototype.get = function (index, notSetValue) {\n    var head = this._head;\n    index = wrapIndex(this, index);\n    while (head && index--) {\n      head = head.next;\n    }\n    return head ? head.value : notSetValue;\n  };\n  Stack.prototype.peek = function () {\n    return this._head && this._head.value;\n  };\n\n  // @pragma Modification\n\n  Stack.prototype.push = function /*...values*/\n  () {\n    if (arguments.length === 0) {\n      return this;\n    }\n    var newSize = this.size + arguments.length;\n    var head = this._head;\n    for (var ii = arguments.length - 1; ii >= 0; ii--) {\n      head = {\n        value: arguments[ii],\n        next: head\n      };\n    }\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n  Stack.prototype.pushAll = function (iter) {\n    iter = IndexedIterable(iter);\n    if (iter.size === 0) {\n      return this;\n    }\n    assertNotInfinite(iter.size);\n    var newSize = this.size;\n    var head = this._head;\n    iter.reverse().forEach(function (value) {\n      newSize++;\n      head = {\n        value: value,\n        next: head\n      };\n    });\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n  Stack.prototype.pop = function () {\n    return this.slice(1);\n  };\n  Stack.prototype.unshift = function /*...values*/\n  () {\n    return this.push.apply(this, arguments);\n  };\n  Stack.prototype.unshiftAll = function (iter) {\n    return this.pushAll(iter);\n  };\n  Stack.prototype.shift = function () {\n    return this.pop.apply(this, arguments);\n  };\n  Stack.prototype.clear = function () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._head = undefined;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyStack();\n  };\n  Stack.prototype.slice = function (begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    var resolvedBegin = resolveBegin(begin, this.size);\n    var resolvedEnd = resolveEnd(end, this.size);\n    if (resolvedEnd !== this.size) {\n      // super.slice(begin, end);\n      return IndexedCollection.prototype.slice.call(this, begin, end);\n    }\n    var newSize = this.size - resolvedBegin;\n    var head = this._head;\n    while (resolvedBegin--) {\n      head = head.next;\n    }\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  // @pragma Mutability\n\n  Stack.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeStack(this.size, this._head, ownerID, this.__hash);\n  };\n\n  // @pragma Iteration\n\n  Stack.prototype.__iterate = function (fn, reverse) {\n    if (reverse) {\n      return this.reverse().__iterate(fn);\n    }\n    var iterations = 0;\n    var node = this._head;\n    while (node) {\n      if (fn(node.value, iterations++, this) === false) {\n        break;\n      }\n      node = node.next;\n    }\n    return iterations;\n  };\n  Stack.prototype.__iterator = function (type, reverse) {\n    if (reverse) {\n      return this.reverse().__iterator(type);\n    }\n    var iterations = 0;\n    var node = this._head;\n    return new Iterator(function () {\n      if (node) {\n        var value = node.value;\n        node = node.next;\n        return iteratorValue(type, iterations++, value);\n      }\n      return iteratorDone();\n    });\n  };\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n  Stack.isStack = isStack;\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function (key) {\n      ctor.prototype[key] = methods[key];\n    };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols && Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n  Iterable.Iterator = Iterator;\n  mixin(Iterable, {\n    // ### Conversion to other types\n\n    toArray: function () {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function (v, i) {\n        array[i] = v;\n      });\n      return array;\n    },\n    toIndexedSeq: function () {\n      return new ToIndexedSequence(this);\n    },\n    toJS: function () {\n      return this.toSeq().map(function (value) {\n        return value && typeof value.toJS === 'function' ? value.toJS() : value;\n      }).__toJS();\n    },\n    toJSON: function () {\n      return this.toSeq().map(function (value) {\n        return value && typeof value.toJSON === 'function' ? value.toJSON() : value;\n      }).__toJS();\n    },\n    toKeyedSeq: function () {\n      return new ToKeyedSequence(this, true);\n    },\n    toMap: function () {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n    toObject: function () {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function (v, k) {\n        object[k] = v;\n      });\n      return object;\n    },\n    toOrderedMap: function () {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n    toOrderedSet: function () {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n    toSet: function () {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n    toSetSeq: function () {\n      return new ToSetSequence(this);\n    },\n    toSeq: function () {\n      return isIndexed(this) ? this.toIndexedSeq() : isKeyed(this) ? this.toKeyedSeq() : this.toSetSeq();\n    },\n    toStack: function () {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n    toList: function () {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n    // ### Common JavaScript methods and properties\n\n    toString: function () {\n      return '[Iterable]';\n    },\n    __toString: function (head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function () {\n      var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n    includes: function (searchValue) {\n      return this.some(function (value) {\n        return is(value, searchValue);\n      });\n    },\n    entries: function () {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n    every: function (predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function (v, k, c) {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n    filter: function (predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n    find: function (predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n    forEach: function (sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n    join: function (separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function (v) {\n        isFirst ? isFirst = false : joined += separator;\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n    keys: function () {\n      return this.__iterator(ITERATE_KEYS);\n    },\n    map: function (mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n    reduce: function (reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function (v, k, c) {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n    reduceRight: function (reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n    reverse: function () {\n      return reify(this, reverseFactory(this, true));\n    },\n    slice: function (begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n    some: function (predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n    sort: function (comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n    values: function () {\n      return this.__iterator(ITERATE_VALUES);\n    },\n    // ### More sequential methods\n\n    butLast: function () {\n      return this.slice(0, -1);\n    },\n    isEmpty: function () {\n      return this.size !== undefined ? this.size === 0 : !this.some(function () {\n        return true;\n      });\n    },\n    count: function (predicate, context) {\n      return ensureSize(predicate ? this.toSeq().filter(predicate, context) : this);\n    },\n    countBy: function (grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n    equals: function (other) {\n      return deepEqual(this, other);\n    },\n    entrySeq: function () {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function () {\n        return iterable.toSeq();\n      };\n      return entriesSequence;\n    },\n    filterNot: function (predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n    findEntry: function (predicate, context, notSetValue) {\n      var found = notSetValue;\n      this.__iterate(function (v, k, c) {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n    findKey: function (predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n    findLast: function (predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n    findLastEntry: function (predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n    },\n    findLastKey: function (predicate, context) {\n      return this.toKeyedSeq().reverse().findKey(predicate, context);\n    },\n    first: function () {\n      return this.find(returnTrue);\n    },\n    flatMap: function (mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n    flatten: function (depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n    fromEntrySeq: function () {\n      return new FromEntriesSequence(this);\n    },\n    get: function (searchKey, notSetValue) {\n      return this.find(function (_, key) {\n        return is(key, searchKey);\n      }, undefined, notSetValue);\n    },\n    getIn: function (searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n    groupBy: function (grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n    has: function (searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n    hasIn: function (searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n    isSubset: function (iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function (value) {\n        return iter.includes(value);\n      });\n    },\n    isSuperset: function (iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n    keyOf: function (searchValue) {\n      return this.findKey(function (value) {\n        return is(value, searchValue);\n      });\n    },\n    keySeq: function () {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n    last: function () {\n      return this.toSeq().reverse().first();\n    },\n    lastKeyOf: function (searchValue) {\n      return this.toKeyedSeq().reverse().keyOf(searchValue);\n    },\n    max: function (comparator) {\n      return maxFactory(this, comparator);\n    },\n    maxBy: function (mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n    min: function (comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n    minBy: function (mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n    rest: function () {\n      return this.slice(1);\n    },\n    skip: function (amount) {\n      return this.slice(Math.max(0, amount));\n    },\n    skipLast: function (amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n    skipWhile: function (predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n    skipUntil: function (predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n    sortBy: function (mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n    take: function (amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n    takeLast: function (amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n    takeWhile: function (predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n    takeUntil: function (predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n    valueSeq: function () {\n      return this.toIndexedSeq();\n    },\n    // ### Hashable Object\n\n    hashCode: function () {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect = IterablePrototype.toSource = function () {\n    return this.toString();\n  };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n  mixin(KeyedIterable, {\n    // ### More sequential methods\n\n    flip: function () {\n      return reify(this, flipFactory(this));\n    },\n    mapEntries: function (mapper, context) {\n      var this$0 = this;\n      var iterations = 0;\n      return reify(this, this.toSeq().map(function (v, k) {\n        return mapper.call(context, [k, v], iterations++, this$0);\n      }).fromEntrySeq());\n    },\n    mapKeys: function (mapper, context) {\n      var this$0 = this;\n      return reify(this, this.toSeq().flip().map(function (k, v) {\n        return mapper.call(context, k, v, this$0);\n      }).flip());\n    }\n  });\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function (v, k) {\n    return JSON.stringify(k) + ': ' + quoteString(v);\n  };\n  mixin(IndexedIterable, {\n    // ### Conversion to other types\n\n    toKeyedSeq: function () {\n      return new ToKeyedSequence(this, false);\n    },\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function (predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n    findIndex: function (predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n    indexOf: function (searchValue) {\n      var key = this.keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n    lastIndexOf: function (searchValue) {\n      var key = this.lastKeyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n    reverse: function () {\n      return reify(this, reverseFactory(this, false));\n    },\n    slice: function (begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n    splice: function (index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || numArgs === 2 && !removeNum) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(this, numArgs === 1 ? spliced : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum)));\n    },\n    // ### More collection methods\n\n    findLastIndex: function (predicate, context) {\n      var entry = this.findLastEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n    first: function () {\n      return this.get(0);\n    },\n    flatten: function (depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n    get: function (index, notSetValue) {\n      index = wrapIndex(this, index);\n      return index < 0 || this.size === Infinity || this.size !== undefined && index > this.size ? notSetValue : this.find(function (_, key) {\n        return key === index;\n      }, undefined, notSetValue);\n    },\n    has: function (index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ? this.size === Infinity || index < this.size : this.indexOf(index) !== -1);\n    },\n    interpose: function (separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n    interleave: function /*...iterables*/\n    () {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n    keySeq: function () {\n      return Range(0, this.size);\n    },\n    last: function () {\n      return this.get(-1);\n    },\n    skipWhile: function (predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n    zip: function /*, ...iterables */\n    () {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n    zipWith: function (zipper /*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n  });\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n  mixin(SetIterable, {\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function (value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n    includes: function (value) {\n      return this.has(value);\n    },\n    // ### More sequential methods\n\n    keySeq: function () {\n      return this.valueSeq();\n    }\n  });\n  SetIterable.prototype.has = IterablePrototype.includes;\n  SetIterable.prototype.contains = SetIterable.prototype.includes;\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n  function not(predicate) {\n    return function () {\n      return !predicate.apply(this, arguments);\n    };\n  }\n  function neg(predicate) {\n    return function () {\n      return -predicate.apply(this, arguments);\n    };\n  }\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  }\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(keyed ? ordered ? function (v, k) {\n      h = 31 * h + hashMerge(hash(v), hash(k)) | 0;\n    } : function (v, k) {\n      h = h + hashMerge(hash(v), hash(k)) | 0;\n    } : ordered ? function (v) {\n      h = 31 * h + hash(v) | 0;\n    } : function (v) {\n      h = h + hash(v) | 0;\n    });\n    return murmurHashOfSize(size, h);\n  }\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n  var Immutable = {\n    Iterable: Iterable,\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n    is: is,\n    fromJS: fromJS\n  };\n  return Immutable;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","Immutable","SLICE$0","Array","prototype","slice","createClass","ctor","superClass","Object","create","constructor","Iterable","value","isIterable","Seq","KeyedIterable","isKeyed","KeyedSeq","IndexedIterable","isIndexed","IndexedSeq","SetIterable","isAssociative","SetSeq","maybeIterable","IS_ITERABLE_SENTINEL","maybeKeyed","IS_KEYED_SENTINEL","maybeIndexed","IS_INDEXED_SENTINEL","maybeAssociative","isOrdered","maybeOrdered","IS_ORDERED_SENTINEL","Keyed","Indexed","Set","DELETE","SHIFT","SIZE","MASK","NOT_SET","CHANGE_LENGTH","DID_ALTER","MakeRef","ref","SetRef","OwnerID","arrCopy","arr","offset","len","Math","max","length","newArr","ii","ensureSize","iter","size","undefined","__iterate","returnTrue","wrapIndex","index","uint32Index","NaN","wholeSlice","begin","end","resolveBegin","resolveIndex","resolveEnd","defaultIndex","min","ITERATE_KEYS","ITERATE_VALUES","ITERATE_ENTRIES","REAL_ITERATOR_SYMBOL","Symbol","iterator","FAUX_ITERATOR_SYMBOL","ITERATOR_SYMBOL","Iterator","next","toString","KEYS","VALUES","ENTRIES","inspect","toSource","iteratorValue","type","k","v","iteratorResult","done","iteratorDone","hasIterator","getIteratorFn","isIterator","maybeIterator","getIterator","iterable","iteratorFn","call","isArrayLike","emptySequence","toSeq","seqFromValue","of","arguments","__toString","cacheResult","_cache","__iterateUncached","entrySeq","toArray","fn","reverse","seqIterate","__iterator","seqIterator","toKeyedSeq","fromEntrySeq","keyedSeqFromValue","indexedSeqFromValue","toIndexedSeq","toSetSeq","isSeq","IS_SEQ_SENTINEL","ArraySeq","array","_array","get","notSetValue","has","maxIndex","ObjectSeq","object","keys","_object","_keys","key","hasOwnProperty","IterableSeq","_iterable","iterations","step","__iteratorUncached","IteratorSeq","_iterator","_iteratorCache","cache","val","maybeSeq","EMPTY_SEQ","seq","isArray","TypeError","maybeIndexedSeqFromValue","useKeys","entry","fromJS","json","converter","fromJSWith","fromJSDefault","parentJSON","map","isPlainObj","toList","toMap","is","valueA","valueB","valueOf","equals","deepEqual","a","b","__hash","notAssociative","entries","every","flipped","_","allEqual","bSize","Repeat","times","_value","Infinity","EMPTY_REPEAT","includes","searchValue","indexOf","lastIndexOf","this$0","other","invariant","condition","error","Error","Range","start","abs","_start","_end","_step","ceil","EMPTY_RANGE","possibleIndex","floor","offsetValue","Collection","KeyedCollection","IndexedCollection","SetCollection","imul","c","d","smi","i32","hash","o","h","STRING_HASH_CACHE_MIN_STRLEN","cachedHashString","hashString","hashCode","hashJSObj","string","stringHashCache","STRING_HASH_CACHE_SIZE","STRING_HASH_CACHE_MAX_SIZE","charCodeAt","obj","usingWeakMap","weakMap","UID_HASH_KEY","canDefineProperty","propertyIsEnumerable","getIENodeHash","objHashUID","set","isExtensible","defineProperty","apply","nodeType","e","node","uniqueID","documentElement","WeakMap","assertNotInfinite","Map","emptyMap","isMap","withMutations","forEach","keyValues","i","_root","updateMap","setIn","keyPath","updateIn","remove","deleteIn","update","updater","updatedValue","updateInDeepMap","forceIterator","clear","__ownerID","__altered","merge","mergeIntoMapWith","mergeWith","merger","iters","mergeIn","m","mergeDeep","deepMerger","mergeDeepWith","deepMergerWith","mergeDeepIn","sort","comparator","OrderedMap","sortFactory","sortBy","mapper","mutable","asMutable","wasAltered","__ensureOwner","asImmutable","MapIterator","iterate","ownerID","makeMap","maybeMap","IS_MAP_SENTINEL","MapPrototype","removeIn","ArrayMapNode","shift","keyHash","didChangeSize","didAlter","removed","idx","exists","MAX_ARRAY_MAP_SIZE","createNodes","isEditable","newEntries","pop","push","BitmapIndexedNode","bitmap","nodes","bit","popCount","keyHashFrag","newNode","updateNode","MAX_BITMAP_INDEXED_SIZE","expandNodes","isLeafNode","newBitmap","newNodes","spliceOut","spliceIn","HashArrayMapNode","count","newCount","MIN_HASH_ARRAY_MAP_SIZE","packNodes","HashCollisionNode","mergeIntoNode","ValueNode","keyMatch","_type","_reverse","_stack","mapIteratorFrame","stack","mapIteratorValue","subNode","__prev","prev","root","EMPTY_MAP","newRoot","newSize","idx1","idx2","excluding","packedII","packedNodes","including","expandedNodes","iterables","mergeIntoCollectionWith","existing","nextValue","collection","filter","x","mergeIntoMap","keyPathIter","isNotSet","existingValue","newValue","nextExisting","nextUpdated","canEdit","newArray","newLen","after","List","empty","emptyList","isList","makeList","VNode","list","setSize","_origin","listNodeFor","updateList","splice","insert","_capacity","_level","_tail","values","oldSize","setListBounds","unshift","mergeIntoListWith","iterateList","DONE","maybeList","IS_LIST_SENTINEL","ListPrototype","removeBefore","level","originIndex","removingFirst","newChild","oldChild","editable","editableVNode","removeAfter","sizeIndex","left","right","tailPos","getTailOffset","tail","iterateNodeOrLeaf","iterateLeaf","iterateNode","from","to","origin","capacity","EMPTY_LIST","newTail","updateVNode","nodeHas","lowerNode","newLowerNode","rawIndex","owner","oldOrigin","oldCapacity","newOrigin","newCapacity","newLevel","offsetShift","oldTailOffset","newTailOffset","oldTail","beginIndex","maxSize","emptyOrderedMap","isOrderedMap","_map","_list","updateOrderedMap","newMap","newList","makeOrderedMap","maybeOrderedMap","omap","EMPTY_ORDERED_MAP","flip","ToKeyedSequence","indexed","_iter","_useKeys","valueSeq","reversedSequence","reverseFactory","context","mappedSequence","mapFactory","resolveSize","ToIndexedSequence","ToSetSequence","FromEntriesSequence","validateEntry","indexedIterable","cacheResultThrough","flipFactory","flipSequence","makeSequence","filterFactory","predicate","filterSequence","countByFactory","grouper","groups","groupByFactory","isKeyedIter","coerce","iterableClass","reify","sliceFactory","originalSize","resolvedBegin","resolvedEnd","resolvedSize","sliceSize","sliceSeq","skipped","isSkipping","takeWhileFactory","takeSequence","iterating","skipWhileFactory","skipSequence","skipping","concatFactory","isKeyedIterable","concat","singleton","concatSeq","flatten","reduce","sum","flattenFactory","depth","flatSequence","stopped","flatDeep","currentDepth","flatMapFactory","interposeFactory","separator","interposedSequence","defaultComparator","maxFactory","maxCompare","comp","zipWithFactory","keyIter","zipper","zipSequence","iterators","isDone","steps","some","s","Record","defaultValues","name","hasInitialized","RecordType","setProps","RecordTypePrototype","_name","_defaultValues","RecordPrototype","recordName","defaultVal","_empty","makeRecord","likeRecord","record","getPrototypeOf","names","setProp","bind","emptySet","isSet","add","fromKeys","keySeq","updateSet","union","intersect","originalSet","subtract","OrderedSet","__make","maybeSet","IS_SET_SENTINEL","SetPrototype","__empty","makeSet","EMPTY_SET","emptyOrderedSet","isOrderedSet","maybeOrderedSet","OrderedSetPrototype","makeOrderedSet","EMPTY_ORDERED_SET","Stack","emptyStack","isStack","unshiftAll","head","_head","peek","makeStack","pushAll","maybeStack","IS_STACK_SENTINEL","StackPrototype","EMPTY_STACK","mixin","methods","keyCopier","getOwnPropertySymbols","toJS","__toJS","toJSON","toObject","toOrderedMap","toOrderedSet","toSet","toStack","__toStringMapper","join","returnValue","find","findEntry","sideEffect","joined","isFirst","reducer","initialReduction","reduction","useFirst","reduceRight","reversed","not","butLast","isEmpty","countBy","entriesSequence","entryMapper","filterNot","found","findKey","findLast","findLastEntry","findLastKey","first","flatMap","searchKey","getIn","searchKeyPath","nested","groupBy","hasIn","isSubset","isSuperset","keyOf","keyMapper","last","lastKeyOf","maxBy","neg","defaultNegComparator","minBy","rest","skip","amount","skipLast","skipWhile","skipUntil","take","takeLast","takeWhile","takeUntil","hashIterable","IterablePrototype","quoteString","chain","contains","mapEntries","mapKeys","KeyedIterablePrototype","JSON","stringify","findIndex","removeNum","numArgs","spliced","findLastIndex","interpose","interleave","zipped","interleaved","zip","defaultZipper","zipWith","String","ordered","keyed","hashMerge","murmurHashOfSize"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/immutable/dist/immutable.js"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Immutable = factory());\n}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n      return isIterable(value) ? value : Seq(value);\n    }\n\n\n  createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n      return isKeyed(value) ? value : KeyedSeq(value);\n    }\n\n\n  createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n      return isIndexed(value) ? value : IndexedSeq(value);\n    }\n\n\n  createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n\n\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32âˆ’1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n      (end === undefined || (size !== undefined && end >= size));\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ?\n      defaultIndex :\n      index < 0 ?\n        Math.max(0, size + index) :\n        size === undefined ?\n          index :\n          Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n\n  function Iterator(next) {\n      this.next = next;\n    }\n\n    Iterator.prototype.toString = function() {\n      return '[Iterator]';\n    };\n\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect =\n  Iterator.prototype.toSource = function () { return this.toString(); }\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n      value: value, done: false\n    });\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (\n      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]\n    );\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n    function Seq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n\n    Seq.of = function(/*...values*/) {\n      return Seq(arguments);\n    };\n\n    Seq.prototype.toSeq = function() {\n      return this;\n    };\n\n    Seq.prototype.toString = function() {\n      return this.__toString('Seq {', '}');\n    };\n\n    Seq.prototype.cacheResult = function() {\n      if (!this._cache && this.__iterateUncached) {\n        this._cache = this.entrySeq().toArray();\n        this.size = this._cache.length;\n      }\n      return this;\n    };\n\n    // abstract __iterateUncached(fn, reverse)\n\n    Seq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, true);\n    };\n\n    // abstract __iteratorUncached(type, reverse)\n\n    Seq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, true);\n    };\n\n\n\n  createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n      return value === null || value === undefined ?\n        emptySequence().toKeyedSeq() :\n        isIterable(value) ?\n          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n          keyedSeqFromValue(value);\n    }\n\n    KeyedSeq.prototype.toKeyedSeq = function() {\n      return this;\n    };\n\n\n\n  createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n\n    IndexedSeq.of = function(/*...values*/) {\n      return IndexedSeq(arguments);\n    };\n\n    IndexedSeq.prototype.toIndexedSeq = function() {\n      return this;\n    };\n\n    IndexedSeq.prototype.toString = function() {\n      return this.__toString('Seq [', ']');\n    };\n\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, false);\n    };\n\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, false);\n    };\n\n\n\n  createClass(SetSeq, Seq);\n    function SetSeq(value) {\n      return (\n        value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value\n      ).toSetSeq();\n    }\n\n    SetSeq.of = function(/*...values*/) {\n      return SetSeq(arguments);\n    };\n\n    SetSeq.prototype.toSetSeq = function() {\n      return this;\n    };\n\n\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n\n\n  createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n      this._array = array;\n      this.size = array.length;\n    }\n\n    ArraySeq.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n      );\n    };\n\n\n\n  createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n      var keys = Object.keys(object);\n      this._object = object;\n      this._keys = keys;\n      this.size = keys.length;\n    }\n\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n      if (notSetValue !== undefined && !this.has(key)) {\n        return notSetValue;\n      }\n      return this._object[key];\n    };\n\n    ObjectSeq.prototype.has = function(key) {\n      return this._object.hasOwnProperty(key);\n    };\n\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        if (fn(object[key], key, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, key, object[key]);\n      });\n    };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n      this._iterable = iterable;\n      this.size = iterable.length || iterable.size;\n    }\n\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      var iterations = 0;\n      if (isIterator(iterator)) {\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (fn(step.value, iterations++, this) === false) {\n            break;\n          }\n        }\n      }\n      return iterations;\n    };\n\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      if (!isIterator(iterator)) {\n        return new Iterator(iteratorDone);\n      }\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step : iteratorValue(type, iterations++, step.value);\n      });\n    };\n\n\n\n  createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n      this._iterator = iterator;\n      this._iteratorCache = [];\n    }\n\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      while (iterations < cache.length) {\n        if (fn(cache[iterations], iterations++, this) === false) {\n          return iterations;\n        }\n      }\n      var step;\n      while (!(step = iterator.next()).done) {\n        var val = step.value;\n        cache[iterations] = val;\n        if (fn(val, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      return new Iterator(function()  {\n        if (iterations >= cache.length) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          cache[iterations] = step.value;\n        }\n        return iteratorValue(type, iterations, cache[iterations++]);\n      });\n    };\n\n\n\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq =\n      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n      typeof value === 'object' ? new ObjectSeq(value) :\n      undefined;\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of [k, v] entries, '+\n        'or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) ||\n      (typeof value === 'object' && new ObjectSeq(value));\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values, or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return (\n      isArrayLike(value) ? new ArraySeq(value) :\n      isIterator(value) ? new IteratorSeq(value) :\n      hasIterator(value) ? new IterableSeq(value) :\n      undefined\n    );\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ?\n      fromJSWith(converter, json, '', {'': json}) :\n      fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' &&\n        typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' &&\n        typeof valueB.equals === 'function' &&\n        valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (\n      !isIterable(b) ||\n      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n      isKeyed(a) !== isKeyed(b) ||\n      isIndexed(a) !== isIndexed(b) ||\n      isOrdered(a) !== isOrdered(b)\n    ) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function(v, k)  {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function(v, k)  {\n      if (notAssociative ? !a.has(v) :\n          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n    function Repeat(value, times) {\n      if (!(this instanceof Repeat)) {\n        return new Repeat(value, times);\n      }\n      this._value = value;\n      this.size = times === undefined ? Infinity : Math.max(0, times);\n      if (this.size === 0) {\n        if (EMPTY_REPEAT) {\n          return EMPTY_REPEAT;\n        }\n        EMPTY_REPEAT = this;\n      }\n    }\n\n    Repeat.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Repeat []';\n      }\n      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n    };\n\n    Repeat.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._value : notSetValue;\n    };\n\n    Repeat.prototype.includes = function(searchValue) {\n      return is(this._value, searchValue);\n    };\n\n    Repeat.prototype.slice = function(begin, end) {\n      var size = this.size;\n      return wholeSlice(begin, end, size) ? this :\n        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n\n    Repeat.prototype.reverse = function() {\n      return this;\n    };\n\n    Repeat.prototype.indexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return 0;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return this.size;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.__iterate = function(fn, reverse) {\n      for (var ii = 0; ii < this.size; ii++) {\n        if (fn(this._value, ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n      );\n    };\n\n    Repeat.prototype.equals = function(other) {\n      return other instanceof Repeat ?\n        is(this._value, other._value) :\n        deepEqual(other);\n    };\n\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        return new Range(start, end, step);\n      }\n      invariant(step !== 0, 'Cannot step a Range by 0');\n      start = start || 0;\n      if (end === undefined) {\n        end = Infinity;\n      }\n      step = step === undefined ? 1 : Math.abs(step);\n      if (end < start) {\n        step = -step;\n      }\n      this._start = start;\n      this._end = end;\n      this._step = step;\n      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n      if (this.size === 0) {\n        if (EMPTY_RANGE) {\n          return EMPTY_RANGE;\n        }\n        EMPTY_RANGE = this;\n      }\n    }\n\n    Range.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Range []';\n      }\n      return 'Range [ ' +\n        this._start + '...' + this._end +\n        (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]';\n    };\n\n    Range.prototype.get = function(index, notSetValue) {\n      return this.has(index) ?\n        this._start + wrapIndex(this, index) * this._step :\n        notSetValue;\n    };\n\n    Range.prototype.includes = function(searchValue) {\n      var possibleIndex = (searchValue - this._start) / this._step;\n      return possibleIndex >= 0 &&\n        possibleIndex < this.size &&\n        possibleIndex === Math.floor(possibleIndex);\n    };\n\n    Range.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      begin = resolveBegin(begin, this.size);\n      end = resolveEnd(end, this.size);\n      if (end <= begin) {\n        return new Range(0, 0);\n      }\n      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n\n    Range.prototype.indexOf = function(searchValue) {\n      var offsetValue = searchValue - this._start;\n      if (offsetValue % this._step === 0) {\n        var index = offsetValue / this._step;\n        if (index >= 0 && index < this.size) {\n          return index\n        }\n      }\n      return -1;\n    };\n\n    Range.prototype.lastIndexOf = function(searchValue) {\n      return this.indexOf(searchValue);\n    };\n\n    Range.prototype.__iterate = function(fn, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(value, ii, this) === false) {\n          return ii + 1;\n        }\n        value += reverse ? -step : step;\n      }\n      return ii;\n    };\n\n    Range.prototype.__iterator = function(type, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      var ii = 0;\n      return new Iterator(function()  {\n        var v = value;\n        value += reverse ? -step : step;\n        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n      });\n    };\n\n    Range.prototype.equals = function(other) {\n      return other instanceof Range ?\n        this._start === other._start &&\n        this._end === other._end &&\n        this._step === other._step :\n        deepEqual(this, other);\n    };\n\n\n  var EMPTY_RANGE;\n\n  createClass(Collection, Iterable);\n    function Collection() {\n      throw TypeError('Abstract');\n    }\n\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  var imul =\n    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n    Math.imul :\n    function imul(a, b) {\n      a = a | 0; // int\n      b = b | 0; // int\n      var c = a & 0xffff;\n      var d = b & 0xffff;\n      // Shift by 0 fixes the sign on the high part.\n      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n    };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      if (o !== o || o === Infinity) {\n        return 0;\n      }\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined &&\n               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function() {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = (function() {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }());\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1: // Element\n          return node.uniqueID;\n        case 9: // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(\n      size !== Infinity,\n      'Cannot perform this action with an infinite size.'\n    );\n  }\n\n  createClass(Map, KeyedCollection);\n\n    // @pragma Construction\n\n    function Map(value) {\n      return value === null || value === undefined ? emptyMap() :\n        isMap(value) && !isOrdered(value) ? value :\n        emptyMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);\n      return emptyMap().withMutations(function(map ) {\n        for (var i = 0; i < keyValues.length; i += 2) {\n          if (i + 1 >= keyValues.length) {\n            throw new Error('Missing value for key: ' + keyValues[i]);\n          }\n          map.set(keyValues[i], keyValues[i + 1]);\n        }\n      });\n    };\n\n    Map.prototype.toString = function() {\n      return this.__toString('Map {', '}');\n    };\n\n    // @pragma Access\n\n    Map.prototype.get = function(k, notSetValue) {\n      return this._root ?\n        this._root.get(0, undefined, k, notSetValue) :\n        notSetValue;\n    };\n\n    // @pragma Modification\n\n    Map.prototype.set = function(k, v) {\n      return updateMap(this, k, v);\n    };\n\n    Map.prototype.setIn = function(keyPath, v) {\n      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n    };\n\n    Map.prototype.remove = function(k) {\n      return updateMap(this, k, NOT_SET);\n    };\n\n    Map.prototype.deleteIn = function(keyPath) {\n      return this.updateIn(keyPath, function()  {return NOT_SET});\n    };\n\n    Map.prototype.update = function(k, notSetValue, updater) {\n      return arguments.length === 1 ?\n        k(this) :\n        this.updateIn([k], notSetValue, updater);\n    };\n\n    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n      if (!updater) {\n        updater = notSetValue;\n        notSetValue = undefined;\n      }\n      var updatedValue = updateInDeepMap(\n        this,\n        forceIterator(keyPath),\n        notSetValue,\n        updater\n      );\n      return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n\n    Map.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._root = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyMap();\n    };\n\n    // @pragma Composition\n\n    Map.prototype.merge = function(/*...iters*/) {\n      return mergeIntoMapWith(this, undefined, arguments);\n    };\n\n    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, merger, iters);\n    };\n\n    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.merge === 'function' ?\n          m.merge.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoMapWith(this, deepMerger, arguments);\n    };\n\n    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n    };\n\n    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.mergeDeep === 'function' ?\n          m.mergeDeep.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator));\n    };\n\n    Map.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n\n    // @pragma Mutability\n\n    Map.prototype.withMutations = function(fn) {\n      var mutable = this.asMutable();\n      fn(mutable);\n      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n\n    Map.prototype.asMutable = function() {\n      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n\n    Map.prototype.asImmutable = function() {\n      return this.__ensureOwner();\n    };\n\n    Map.prototype.wasAltered = function() {\n      return this.__altered;\n    };\n\n    Map.prototype.__iterator = function(type, reverse) {\n      return new MapIterator(this, type, reverse);\n    };\n\n    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      this._root && this._root.iterate(function(entry ) {\n        iterations++;\n        return fn(entry[1], entry[0], this$0);\n      }, reverse);\n      return iterations;\n    };\n\n    Map.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n\n  // #pragma Trie Nodes\n\n\n\n    function ArrayMapNode(ownerID, entries) {\n      this.ownerID = ownerID;\n      this.entries = entries;\n    }\n\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && entries.length === 1) {\n        return; // undefined\n      }\n\n      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n        return createNodes(ownerID, entries, key, value);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new ArrayMapNode(ownerID, newEntries);\n    };\n\n\n\n\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n      this.ownerID = ownerID;\n      this.bitmap = bitmap;\n      this.nodes = nodes;\n    }\n\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n      var bitmap = this.bitmap;\n      return (bitmap & bit) === 0 ? notSetValue :\n        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var bit = 1 << keyHashFrag;\n      var bitmap = this.bitmap;\n      var exists = (bitmap & bit) !== 0;\n\n      if (!exists && value === NOT_SET) {\n        return this;\n      }\n\n      var idx = popCount(bitmap & (bit - 1));\n      var nodes = this.nodes;\n      var node = exists ? nodes[idx] : undefined;\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n      if (newNode === node) {\n        return this;\n      }\n\n      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n      }\n\n      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n        return nodes[idx ^ 1];\n      }\n\n      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n        return newNode;\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n      var newNodes = exists ? newNode ?\n        setIn(nodes, idx, newNode, isEditable) :\n        spliceOut(nodes, idx, isEditable) :\n        spliceIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.bitmap = newBitmap;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n\n\n\n\n    function HashArrayMapNode(ownerID, count, nodes) {\n      this.ownerID = ownerID;\n      this.count = count;\n      this.nodes = nodes;\n    }\n\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var node = this.nodes[idx];\n      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var removed = value === NOT_SET;\n      var nodes = this.nodes;\n      var node = nodes[idx];\n\n      if (removed && !node) {\n        return this;\n      }\n\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n      if (newNode === node) {\n        return this;\n      }\n\n      var newCount = this.count;\n      if (!node) {\n        newCount++;\n      } else if (!newNode) {\n        newCount--;\n        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n          return packNodes(ownerID, nodes, newCount, idx);\n        }\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.count = newCount;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n\n\n\n\n    function HashCollisionNode(ownerID, keyHash, entries) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entries = entries;\n    }\n\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n\n      var removed = value === NOT_SET;\n\n      if (keyHash !== this.keyHash) {\n        if (removed) {\n          return this;\n        }\n        SetRef(didAlter);\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n      }\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && len === 2) {\n        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n\n\n\n\n    function ValueNode(ownerID, keyHash, entry) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entry = entry;\n    }\n\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n      var keyMatch = is(key, this.entry[0]);\n      if (keyMatch ? value === this.entry[1] : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n\n      if (removed) {\n        SetRef(didChangeSize);\n        return; // undefined\n      }\n\n      if (keyMatch) {\n        if (ownerID && ownerID === this.ownerID) {\n          this.entry[1] = value;\n          return this;\n        }\n        return new ValueNode(ownerID, this.keyHash, [key, value]);\n      }\n\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n    };\n\n\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate =\n  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  }\n\n  BitmapIndexedNode.prototype.iterate =\n  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  }\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  }\n\n  createClass(MapIterator, Iterator);\n\n    function MapIterator(map, type, reverse) {\n      this._type = type;\n      this._reverse = reverse;\n      this._stack = map._root && mapIteratorFrame(map._root);\n    }\n\n    MapIterator.prototype.next = function() {\n      var type = this._type;\n      var stack = this._stack;\n      while (stack) {\n        var node = stack.node;\n        var index = stack.index++;\n        var maxIndex;\n        if (node.entry) {\n          if (index === 0) {\n            return mapIteratorValue(type, node.entry);\n          }\n        } else if (node.entries) {\n          maxIndex = node.entries.length - 1;\n          if (index <= maxIndex) {\n            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n          }\n        } else {\n          maxIndex = node.nodes.length - 1;\n          if (index <= maxIndex) {\n            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n            if (subNode) {\n              if (subNode.entry) {\n                return mapIteratorValue(type, subNode.entry);\n              }\n              stack = this._stack = mapIteratorFrame(subNode, stack);\n            }\n            continue;\n          }\n        }\n        stack = this._stack = this._stack.__prev;\n      }\n      return iteratorDone();\n    };\n\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ?\n      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ?\n      existing.mergeDeep(value) :\n      is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function(existing, value, key)  {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function(x ) {return x.size !== 0});\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function(collection ) {\n      var mergeIntoMap = merger ?\n        function(value, key)  {\n          collection.update(key, NOT_SET, function(existing )\n            {return existing === NOT_SET ? value : merger(existing, value, key)}\n          );\n        } :\n        function(value, key)  {\n          collection.set(key, value);\n        }\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(\n      isNotSet || (existing && existing.set),\n      'invalid keyPath'\n    );\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(\n      nextExisting,\n      keyPathIter,\n      notSetValue,\n      updater\n    );\n    return nextUpdated === nextExisting ? existing :\n      nextUpdated === NOT_SET ? existing.remove(key) :\n      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - ((x >> 1) & 0x55555555);\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n    // @pragma Construction\n\n    function List(value) {\n      var empty = emptyList();\n      if (value === null || value === undefined) {\n        return empty;\n      }\n      if (isList(value)) {\n        return value;\n      }\n      var iter = IndexedIterable(value);\n      var size = iter.size;\n      if (size === 0) {\n        return empty;\n      }\n      assertNotInfinite(size);\n      if (size > 0 && size < SIZE) {\n        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n      }\n      return empty.withMutations(function(list ) {\n        list.setSize(size);\n        iter.forEach(function(v, i)  {return list.set(i, v)});\n      });\n    }\n\n    List.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    List.prototype.toString = function() {\n      return this.__toString('List [', ']');\n    };\n\n    // @pragma Access\n\n    List.prototype.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      if (index >= 0 && index < this.size) {\n        index += this._origin;\n        var node = listNodeFor(this, index);\n        return node && node.array[index & MASK];\n      }\n      return notSetValue;\n    };\n\n    // @pragma Modification\n\n    List.prototype.set = function(index, value) {\n      return updateList(this, index, value);\n    };\n\n    List.prototype.remove = function(index) {\n      return !this.has(index) ? this :\n        index === 0 ? this.shift() :\n        index === this.size - 1 ? this.pop() :\n        this.splice(index, 1);\n    };\n\n    List.prototype.insert = function(index, value) {\n      return this.splice(index, 0, value);\n    };\n\n    List.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = this._origin = this._capacity = 0;\n        this._level = SHIFT;\n        this._root = this._tail = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyList();\n    };\n\n    List.prototype.push = function(/*...values*/) {\n      var values = arguments;\n      var oldSize = this.size;\n      return this.withMutations(function(list ) {\n        setListBounds(list, 0, oldSize + values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(oldSize + ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.pop = function() {\n      return setListBounds(this, 0, -1);\n    };\n\n    List.prototype.unshift = function(/*...values*/) {\n      var values = arguments;\n      return this.withMutations(function(list ) {\n        setListBounds(list, -values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.shift = function() {\n      return setListBounds(this, 1);\n    };\n\n    // @pragma Composition\n\n    List.prototype.merge = function(/*...iters*/) {\n      return mergeIntoListWith(this, undefined, arguments);\n    };\n\n    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, merger, iters);\n    };\n\n    List.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoListWith(this, deepMerger, arguments);\n    };\n\n    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, deepMergerWith(merger), iters);\n    };\n\n    List.prototype.setSize = function(size) {\n      return setListBounds(this, 0, size);\n    };\n\n    // @pragma Iteration\n\n    List.prototype.slice = function(begin, end) {\n      var size = this.size;\n      if (wholeSlice(begin, end, size)) {\n        return this;\n      }\n      return setListBounds(\n        this,\n        resolveBegin(begin, size),\n        resolveEnd(end, size)\n      );\n    };\n\n    List.prototype.__iterator = function(type, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      return new Iterator(function()  {\n        var value = values();\n        return value === DONE ?\n          iteratorDone() :\n          iteratorValue(type, index++, value);\n      });\n    };\n\n    List.prototype.__iterate = function(fn, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      var value;\n      while ((value = values()) !== DONE) {\n        if (fn(value, index++, this) === false) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    List.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        return this;\n      }\n      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn =\n  ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n\n    function VNode(array, ownerID) {\n      this.array = array;\n      this.ownerID = ownerID;\n    }\n\n    // TODO: seems like these methods are very similar\n\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var originIndex = (index >>> level) & MASK;\n      if (originIndex >= this.array.length) {\n        return new VNode([], ownerID);\n      }\n      var removingFirst = originIndex === 0;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[originIndex];\n        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingFirst) {\n          return this;\n        }\n      }\n      if (removingFirst && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingFirst) {\n        for (var ii = 0; ii < originIndex; ii++) {\n          editable.array[ii] = undefined;\n        }\n      }\n      if (newChild) {\n        editable.array[originIndex] = newChild;\n      }\n      return editable;\n    };\n\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n      if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n        return this;\n      }\n      var sizeIndex = ((index - 1) >>> level) & MASK;\n      if (sizeIndex >= this.array.length) {\n        return this;\n      }\n\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[sizeIndex];\n        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n          return this;\n        }\n      }\n\n      var editable = editableVNode(this, ownerID);\n      editable.array.splice(sizeIndex + 1);\n      if (newChild) {\n        editable.array[sizeIndex] = newChild;\n      }\n      return editable;\n    };\n\n\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ?\n        iterateLeaf(node, offset) :\n        iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : (left - offset) >> level;\n      var to = ((right - offset) >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(\n            array && array[idx], level - SHIFT, offset + (idx << level)\n          );\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function(list ) {\n        index < 0 ?\n          setListBounds(list, index).set(0, value) :\n          setListBounds(list, 0, index + 1).set(index, value)\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = (index >>> level) & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << (list._level + SHIFT)) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[(rawIndex >>> level) & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ?\n      listNodeFor(list, newCapacity - 1) :\n      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = (oldTailOffset >>> level) & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = (newOrigin >>> newLevel) & MASK;\n        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n  }\n\n  createClass(OrderedMap, Map);\n\n    // @pragma Construction\n\n    function OrderedMap(value) {\n      return value === null || value === undefined ? emptyOrderedMap() :\n        isOrderedMap(value) ? value :\n        emptyOrderedMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    OrderedMap.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedMap.prototype.toString = function() {\n      return this.__toString('OrderedMap {', '}');\n    };\n\n    // @pragma Access\n\n    OrderedMap.prototype.get = function(k, notSetValue) {\n      var index = this._map.get(k);\n      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n\n    // @pragma Modification\n\n    OrderedMap.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._map.clear();\n        this._list.clear();\n        return this;\n      }\n      return emptyOrderedMap();\n    };\n\n    OrderedMap.prototype.set = function(k, v) {\n      return updateOrderedMap(this, k, v);\n    };\n\n    OrderedMap.prototype.remove = function(k) {\n      return updateOrderedMap(this, k, NOT_SET);\n    };\n\n    OrderedMap.prototype.wasAltered = function() {\n      return this._map.wasAltered() || this._list.wasAltered();\n    };\n\n    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._list.__iterate(\n        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n        reverse\n      );\n    };\n\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n      return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      var newList = this._list.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        this._list = newList;\n        return this;\n      }\n      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) { // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n      this._iter = indexed;\n      this._useKeys = useKeys;\n      this.size = indexed.size;\n    }\n\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n      return this._iter.get(key, notSetValue);\n    };\n\n    ToKeyedSequence.prototype.has = function(key) {\n      return this._iter.has(key);\n    };\n\n    ToKeyedSequence.prototype.valueSeq = function() {\n      return this._iter.valueSeq();\n    };\n\n    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n      var reversedSequence = reverseFactory(this, true);\n      if (!this._useKeys) {\n        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n      }\n      return reversedSequence;\n    };\n\n    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n      var mappedSequence = mapFactory(this, mapper, context);\n      if (!this._useKeys) {\n        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n      }\n      return mappedSequence;\n    };\n\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var ii;\n      return this._iter.__iterate(\n        this._useKeys ?\n          function(v, k)  {return fn(v, k, this$0)} :\n          ((ii = reverse ? resolveSize(this) : 0),\n            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n        reverse\n      );\n    };\n\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n      if (this._useKeys) {\n        return this._iter.__iterator(type, reverse);\n      }\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var ii = reverse ? resolveSize(this) : 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n      });\n    };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToIndexedSequence.prototype.includes = function(value) {\n      return this._iter.includes(value);\n    };\n\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n    };\n\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, iterations++, step.value, step)\n      });\n    };\n\n\n\n  createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToSetSequence.prototype.has = function(key) {\n      return this._iter.includes(key);\n    };\n\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n    };\n\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, step.value, step.value, step);\n      });\n    };\n\n\n\n  createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n      this._iter = entries;\n      this.size = entries.size;\n    }\n\n    FromEntriesSequence.prototype.entrySeq = function() {\n      return this._iter.toSeq();\n    };\n\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(entry ) {\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return fn(\n            indexedIterable ? entry.get(1) : entry[1],\n            indexedIterable ? entry.get(0) : entry[0],\n            this$0\n          );\n        }\n      }, reverse);\n    };\n\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          // Check if entry exists first so array access doesn't throw for holes\n          // in the parent iteration.\n          if (entry) {\n            validateEntry(entry);\n            var indexedIterable = isIterable(entry);\n            return iteratorValue(\n              type,\n              indexedIterable ? entry.get(0) : entry[0],\n              indexedIterable ? entry.get(1) : entry[1],\n              step\n            );\n          }\n        }\n      });\n    };\n\n\n  ToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function()  {return iterable};\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function()  {return iterable.reverse()};\n      return reversedSequence;\n    };\n    flipSequence.has = function(key ) {return iterable.includes(key)};\n    flipSequence.includes = function(key ) {return iterable.has(key)};\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n    }\n    flipSequence.__iteratorUncached = function(type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function()  {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(\n        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n        reverse\n      );\n    }\n    return flipSequence;\n  }\n\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function(key ) {return iterable.has(key)};\n    mappedSequence.get = function(key, notSetValue)  {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ?\n        notSetValue :\n        mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(\n        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n        reverse\n      );\n    }\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(\n          type,\n          key,\n          mapper.call(context, entry[1], key, iterable),\n          step\n        );\n      });\n    }\n    return mappedSequence;\n  }\n\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function()  {return iterable};\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function()  {return iterable.flip()};\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function(key, notSetValue) \n      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n    reversedSequence.has = function(key )\n      {return iterable.has(useKeys ? key : -1 - key)};\n    reversedSequence.includes = function(value ) {return iterable.includes(value)};\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n    };\n    reversedSequence.__iterator =\n      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n    return reversedSequence;\n  }\n\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function(key ) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function(key, notSetValue)  {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n          v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    }\n    return filterSequence;\n  }\n\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        0,\n        function(a ) {return a + 1}\n      );\n    });\n    return groups.asImmutable();\n  }\n\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n      );\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n  }\n\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      if (end === Infinity) {\n        end = originalSize;\n      } else {\n        end = end | 0;\n      }\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ?\n          iterable.get(index + resolvedBegin, notSetValue) :\n          notSetValue;\n      }\n    }\n\n    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k)  {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n                 iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function(type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    }\n\n    return sliceSeq;\n  }\n\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c) \n        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n      );\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function()  {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function(v ) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ?\n          keyedSeqFromValue(v) :\n          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function(v ) {return v.size !== 0});\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable ||\n          isKeyedIterable && isKeyed(singleton) ||\n          isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(\n      function(sum, seq)  {\n        if (sum !== undefined) {\n          var size = seq.size;\n          if (size !== undefined) {\n            return sum + size;\n          }\n        }\n      },\n      0\n    );\n    return concatSeq;\n  }\n\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function(fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {var this$0 = this;\n        iter.__iterate(function(v, k)  {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    }\n    flatSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    }\n    return flatSequence;\n  }\n\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(\n      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n    ).flatten(true);\n  }\n\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k) \n        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n        fn(v, iterations++, this$0) !== false},\n        reverse\n      );\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function()  {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ?\n          iteratorValue(type, iterations++, separator) :\n          iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(\n      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n    ).toArray();\n    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n      isKeyedIterable ?\n      function(v, i)  { entries[i].length = 2; } :\n      function(v, i)  { entries[i] = v[1]; }\n    );\n    return isKeyedIterable ? KeyedSeq(entries) :\n      isIndexed(iterable) ? IndexedSeq(entries) :\n      SetSeq(entries);\n  }\n\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq()\n        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n  }\n\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function(fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function(type, reverse) {\n      var iterators = iters.map(function(i )\n        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n      );\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function()  {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function(i ) {return i.next()});\n          isDone = steps.some(function(s ) {return s.done});\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(\n          type,\n          iterations++,\n          zipper.apply(null, steps.map(function(s ) {return s.value}))\n        );\n      });\n    };\n    return zipSequence\n  }\n\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable :\n      isIndexed(iterable) ? IndexedIterable :\n      SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create(\n      (\n        isKeyed(iterable) ? KeyedSeq :\n        isIndexed(iterable) ? IndexedSeq :\n        SetSeq\n      ).prototype\n    );\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n    function Record(defaultValues, name) {\n      var hasInitialized;\n\n      var RecordType = function Record(values) {\n        if (values instanceof RecordType) {\n          return values;\n        }\n        if (!(this instanceof RecordType)) {\n          return new RecordType(values);\n        }\n        if (!hasInitialized) {\n          hasInitialized = true;\n          var keys = Object.keys(defaultValues);\n          setProps(RecordTypePrototype, keys);\n          RecordTypePrototype.size = keys.length;\n          RecordTypePrototype._name = name;\n          RecordTypePrototype._keys = keys;\n          RecordTypePrototype._defaultValues = defaultValues;\n        }\n        this._map = Map(values);\n      };\n\n      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n      RecordTypePrototype.constructor = RecordType;\n\n      return RecordType;\n    }\n\n    Record.prototype.toString = function() {\n      return this.__toString(recordName(this) + ' {', '}');\n    };\n\n    // @pragma Access\n\n    Record.prototype.has = function(k) {\n      return this._defaultValues.hasOwnProperty(k);\n    };\n\n    Record.prototype.get = function(k, notSetValue) {\n      if (!this.has(k)) {\n        return notSetValue;\n      }\n      var defaultVal = this._defaultValues[k];\n      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n\n    // @pragma Modification\n\n    Record.prototype.clear = function() {\n      if (this.__ownerID) {\n        this._map && this._map.clear();\n        return this;\n      }\n      var RecordType = this.constructor;\n      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n    };\n\n    Record.prototype.set = function(k, v) {\n      if (!this.has(k)) {\n        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n      }\n      if (this._map && !this._map.has(k)) {\n        var defaultVal = this._defaultValues[k];\n        if (v === defaultVal) {\n          return this;\n        }\n      }\n      var newMap = this._map && this._map.set(k, v);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.remove = function(k) {\n      if (!this.has(k)) {\n        return this;\n      }\n      var newMap = this._map && this._map.remove(k);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n    };\n\n    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n    };\n\n    Record.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map && this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return makeRecord(this, newMap, ownerID);\n    };\n\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn =\n  RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function() {\n        return this.get(name);\n      },\n      set: function(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection);\n\n    // @pragma Construction\n\n    function Set(value) {\n      return value === null || value === undefined ? emptySet() :\n        isSet(value) && !isOrdered(value) ? value :\n        emptySet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    Set.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Set.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    Set.prototype.toString = function() {\n      return this.__toString('Set {', '}');\n    };\n\n    // @pragma Access\n\n    Set.prototype.has = function(value) {\n      return this._map.has(value);\n    };\n\n    // @pragma Modification\n\n    Set.prototype.add = function(value) {\n      return updateSet(this, this._map.set(value, true));\n    };\n\n    Set.prototype.remove = function(value) {\n      return updateSet(this, this._map.remove(value));\n    };\n\n    Set.prototype.clear = function() {\n      return updateSet(this, this._map.clear());\n    };\n\n    // @pragma Composition\n\n    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n      iters = iters.filter(function(x ) {return x.size !== 0});\n      if (iters.length === 0) {\n        return this;\n      }\n      if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n        return this.constructor(iters[0]);\n      }\n      return this.withMutations(function(set ) {\n        for (var ii = 0; ii < iters.length; ii++) {\n          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n        }\n      });\n    };\n\n    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (!iters.every(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (iters.some(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.merge = function() {\n      return this.union.apply(this, arguments);\n    };\n\n    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return this.union.apply(this, iters);\n    };\n\n    Set.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator));\n    };\n\n    Set.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n\n    Set.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n    };\n\n    Set.prototype.__iterator = function(type, reverse) {\n      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n    };\n\n    Set.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return this.__make(newMap, ownerID);\n    };\n\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set :\n      newMap.size === 0 ? set.__empty() :\n      set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n    // @pragma Construction\n\n    function OrderedSet(value) {\n      return value === null || value === undefined ? emptyOrderedSet() :\n        isOrderedSet(value) ? value :\n        emptyOrderedSet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    OrderedSet.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedSet.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    OrderedSet.prototype.toString = function() {\n      return this.__toString('OrderedSet {', '}');\n    };\n\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection);\n\n    // @pragma Construction\n\n    function Stack(value) {\n      return value === null || value === undefined ? emptyStack() :\n        isStack(value) ? value :\n        emptyStack().unshiftAll(value);\n    }\n\n    Stack.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Stack.prototype.toString = function() {\n      return this.__toString('Stack [', ']');\n    };\n\n    // @pragma Access\n\n    Stack.prototype.get = function(index, notSetValue) {\n      var head = this._head;\n      index = wrapIndex(this, index);\n      while (head && index--) {\n        head = head.next;\n      }\n      return head ? head.value : notSetValue;\n    };\n\n    Stack.prototype.peek = function() {\n      return this._head && this._head.value;\n    };\n\n    // @pragma Modification\n\n    Stack.prototype.push = function(/*...values*/) {\n      if (arguments.length === 0) {\n        return this;\n      }\n      var newSize = this.size + arguments.length;\n      var head = this._head;\n      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n        head = {\n          value: arguments[ii],\n          next: head\n        };\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pushAll = function(iter) {\n      iter = IndexedIterable(iter);\n      if (iter.size === 0) {\n        return this;\n      }\n      assertNotInfinite(iter.size);\n      var newSize = this.size;\n      var head = this._head;\n      iter.reverse().forEach(function(value ) {\n        newSize++;\n        head = {\n          value: value,\n          next: head\n        };\n      });\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pop = function() {\n      return this.slice(1);\n    };\n\n    Stack.prototype.unshift = function(/*...values*/) {\n      return this.push.apply(this, arguments);\n    };\n\n    Stack.prototype.unshiftAll = function(iter) {\n      return this.pushAll(iter);\n    };\n\n    Stack.prototype.shift = function() {\n      return this.pop.apply(this, arguments);\n    };\n\n    Stack.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._head = undefined;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyStack();\n    };\n\n    Stack.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      var resolvedBegin = resolveBegin(begin, this.size);\n      var resolvedEnd = resolveEnd(end, this.size);\n      if (resolvedEnd !== this.size) {\n        // super.slice(begin, end);\n        return IndexedCollection.prototype.slice.call(this, begin, end);\n      }\n      var newSize = this.size - resolvedBegin;\n      var head = this._head;\n      while (resolvedBegin--) {\n        head = head.next;\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    // @pragma Mutability\n\n    Stack.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n\n    // @pragma Iteration\n\n    Stack.prototype.__iterate = function(fn, reverse) {\n      if (reverse) {\n        return this.reverse().__iterate(fn);\n      }\n      var iterations = 0;\n      var node = this._head;\n      while (node) {\n        if (fn(node.value, iterations++, this) === false) {\n          break;\n        }\n        node = node.next;\n      }\n      return iterations;\n    };\n\n    Stack.prototype.__iterator = function(type, reverse) {\n      if (reverse) {\n        return this.reverse().__iterator(type);\n      }\n      var iterations = 0;\n      var node = this._head;\n      return new Iterator(function()  {\n        if (node) {\n          var value = node.value;\n          node = node.next;\n          return iteratorValue(type, iterations++, value);\n        }\n        return iteratorDone();\n      });\n    };\n\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols &&\n      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n      return array;\n    },\n\n    toIndexedSeq: function() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n      ).__toJS();\n    },\n\n    toJSON: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n      ).__toJS();\n    },\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function(v, k)  { object[k] = v; });\n      return object;\n    },\n\n    toOrderedMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function() {\n      return isIndexed(this) ? this.toIndexedSeq() :\n        isKeyed(this) ? this.toKeyedSeq() :\n        this.toSetSeq();\n    },\n\n    toStack: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n\n    // ### Common JavaScript methods and properties\n\n    toString: function() {\n      return '[Iterable]';\n    },\n\n    __toString: function(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function() {var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    includes: function(searchValue) {\n      return this.some(function(value ) {return is(value, searchValue)});\n    },\n\n    entries: function() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function(v, k, c)  {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    forEach: function(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function(v ) {\n        isFirst ? (isFirst = false) : (joined += separator);\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function(v, k, c)  {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n\n    // ### More sequential methods\n\n    butLast: function() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n    },\n\n    count: function(predicate, context) {\n      return ensureSize(\n        predicate ? this.toSeq().filter(predicate, context) : this\n      );\n    },\n\n    countBy: function(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n      return entriesSequence;\n    },\n\n    filterNot: function(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findEntry: function(predicate, context, notSetValue) {\n      var found = notSetValue;\n      this.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findKey: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLast: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    findLastEntry: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n    },\n\n    findLastKey: function(predicate, context) {\n      return this.toKeyedSeq().reverse().findKey(predicate, context);\n    },\n\n    first: function() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function(searchKey, notSetValue) {\n      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n    },\n\n    getIn: function(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function(value ) {return iter.includes(value)});\n    },\n\n    isSuperset: function(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n\n    keyOf: function(searchValue) {\n      return this.findKey(function(value ) {return is(value, searchValue)});\n    },\n\n    keySeq: function() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function() {\n      return this.toSeq().reverse().first();\n    },\n\n    lastKeyOf: function(searchValue) {\n      return this.toKeyedSeq().reverse().keyOf(searchValue);\n    },\n\n    max: function(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function() {\n      return this.slice(1);\n    },\n\n    skip: function(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function() {\n      return this.toIndexedSeq();\n    },\n\n\n    // ### Hashable Object\n\n    hashCode: function() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect =\n  IterablePrototype.toSource = function() { return this.toString(); };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function() {\n      return reify(this, flipFactory(this));\n    },\n\n    mapEntries: function(mapper, context) {var this$0 = this;\n      var iterations = 0;\n      return reify(this,\n        this.toSeq().map(\n          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n        ).fromEntrySeq()\n      );\n    },\n\n    mapKeys: function(mapper, context) {var this$0 = this;\n      return reify(this,\n        this.toSeq().flip().map(\n          function(k, v)  {return mapper.call(context, k, v, this$0)}\n        ).flip()\n      );\n    }\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};\n\n\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, false);\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function(searchValue) {\n      var key = this.keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function(searchValue) {\n      var key = this.lastKeyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(\n        this,\n        numArgs === 1 ?\n          spliced :\n          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n      );\n    },\n\n\n    // ### More collection methods\n\n    findLastIndex: function(predicate, context) {\n      var entry = this.findLastEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    first: function() {\n      return this.get(0);\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return (index < 0 || (this.size === Infinity ||\n          (this.size !== undefined && index > this.size))) ?\n        notSetValue :\n        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n    },\n\n    has: function(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ?\n        this.size === Infinity || index < this.size :\n        this.indexOf(index) !== -1\n      );\n    },\n\n    interpose: function(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function(/*...iterables*/) {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    keySeq: function() {\n      return Range(0, this.size);\n    },\n\n    last: function() {\n      return this.get(-1);\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function(/*, ...iterables */) {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function(zipper/*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    includes: function(value) {\n      return this.has(value);\n    },\n\n\n    // ### More sequential methods\n\n    keySeq: function() {\n      return this.valueSeq();\n    }\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.includes;\n  SetIterable.prototype.contains = SetIterable.prototype.includes;\n\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    }\n  }\n\n  function neg(predicate) {\n    return function() {\n      return -predicate.apply(this, arguments);\n    }\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(\n      keyed ?\n        ordered ?\n          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n        ordered ?\n          function(v ) { h = 31 * h + hash(v) | 0; } :\n          function(v ) { h = h + hash(v) | 0; }\n    );\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS\n\n  };\n\n  return Immutable;\n\n}));"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}