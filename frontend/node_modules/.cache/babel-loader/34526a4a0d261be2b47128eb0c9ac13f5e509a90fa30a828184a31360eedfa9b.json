{"ast":null,"code":"/* eslint-disable camelcase */\nimport { ParseResultElement } from '@swagger-api/apidom-core';\nimport { ParserError, Parser } from '@swagger-api/apidom-reference/configuration/empty';\nimport { mediaTypes, OpenApi3_1Element, OpenAPIMediaTypes } from '@swagger-api/apidom-ns-openapi-3-1';\nclass OpenAPIJSON3_1Parser extends Parser {\n  detectionRegExp = /\"openapi\"\\s*:\\s*\"(?<version_json>3\\.1\\.(?:[1-9]\\d*|0))\"/;\n  constructor(options = {}) {\n    super({\n      ...options,\n      name: 'openapi-json-3-1-swagger-client',\n      fileExtensions: ['.json'],\n      mediaTypes: new OpenAPIMediaTypes(...mediaTypes.filterByFormat('generic'), ...mediaTypes.filterByFormat('json'))\n    });\n  }\n  async canParse(file) {\n    const hasSupportedFileExtension = this.fileExtensions.length === 0 ? true : this.fileExtensions.includes(file.extension);\n    const hasSupportedMediaType = this.mediaTypes.includes(file.mediaType);\n    if (!hasSupportedFileExtension) return false;\n    if (hasSupportedMediaType) return true;\n    if (!hasSupportedMediaType) {\n      try {\n        const source = file.toString();\n        JSON.parse(source);\n        return this.detectionRegExp.test(source);\n      } catch (error) {\n        return false;\n      }\n    }\n    return false;\n  }\n  async parse(file) {\n    if (this.sourceMap) {\n      throw new ParserError(\"openapi-json-3-1-swagger-client parser plugin doesn't support sourceMaps option\");\n    }\n    const parseResultElement = new ParseResultElement();\n    const source = file.toString();\n\n    // allow empty files\n    if (this.allowEmpty && source.trim() === '') {\n      return parseResultElement;\n    }\n    try {\n      const pojo = JSON.parse(source);\n      const element = OpenApi3_1Element.refract(pojo, this.refractorOpts);\n      element.classes.push('result');\n      parseResultElement.push(element);\n      return parseResultElement;\n    } catch (error) {\n      throw new ParserError(`Error parsing \"${file.uri}\"`, {\n        cause: error\n      });\n    }\n  }\n}\nexport default OpenAPIJSON3_1Parser;\n/* eslint-enable camelcase */","map":{"version":3,"names":["ParseResultElement","ParserError","Parser","mediaTypes","OpenApi3_1Element","OpenAPIMediaTypes","OpenAPIJSON3_1Parser","detectionRegExp","constructor","options","name","fileExtensions","filterByFormat","canParse","file","hasSupportedFileExtension","length","includes","extension","hasSupportedMediaType","mediaType","source","toString","JSON","parse","test","error","sourceMap","parseResultElement","allowEmpty","trim","pojo","element","refract","refractorOpts","classes","push","uri","cause"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/swagger-client/es/resolver/apidom/reference/parse/parsers/openapi-json-3-1/index.js"],"sourcesContent":["/* eslint-disable camelcase */\nimport { ParseResultElement } from '@swagger-api/apidom-core';\nimport { ParserError, Parser } from '@swagger-api/apidom-reference/configuration/empty';\nimport { mediaTypes, OpenApi3_1Element, OpenAPIMediaTypes } from '@swagger-api/apidom-ns-openapi-3-1';\nclass OpenAPIJSON3_1Parser extends Parser {\n  detectionRegExp = /\"openapi\"\\s*:\\s*\"(?<version_json>3\\.1\\.(?:[1-9]\\d*|0))\"/;\n  constructor(options = {}) {\n    super({\n      ...options,\n      name: 'openapi-json-3-1-swagger-client',\n      fileExtensions: ['.json'],\n      mediaTypes: new OpenAPIMediaTypes(...mediaTypes.filterByFormat('generic'), ...mediaTypes.filterByFormat('json'))\n    });\n  }\n  async canParse(file) {\n    const hasSupportedFileExtension = this.fileExtensions.length === 0 ? true : this.fileExtensions.includes(file.extension);\n    const hasSupportedMediaType = this.mediaTypes.includes(file.mediaType);\n    if (!hasSupportedFileExtension) return false;\n    if (hasSupportedMediaType) return true;\n    if (!hasSupportedMediaType) {\n      try {\n        const source = file.toString();\n        JSON.parse(source);\n        return this.detectionRegExp.test(source);\n      } catch (error) {\n        return false;\n      }\n    }\n    return false;\n  }\n  async parse(file) {\n    if (this.sourceMap) {\n      throw new ParserError(\"openapi-json-3-1-swagger-client parser plugin doesn't support sourceMaps option\");\n    }\n    const parseResultElement = new ParseResultElement();\n    const source = file.toString();\n\n    // allow empty files\n    if (this.allowEmpty && source.trim() === '') {\n      return parseResultElement;\n    }\n    try {\n      const pojo = JSON.parse(source);\n      const element = OpenApi3_1Element.refract(pojo, this.refractorOpts);\n      element.classes.push('result');\n      parseResultElement.push(element);\n      return parseResultElement;\n    } catch (error) {\n      throw new ParserError(`Error parsing \"${file.uri}\"`, {\n        cause: error\n      });\n    }\n  }\n}\nexport default OpenAPIJSON3_1Parser;\n/* eslint-enable camelcase */"],"mappings":"AAAA;AACA,SAASA,kBAAkB,QAAQ,0BAA0B;AAC7D,SAASC,WAAW,EAAEC,MAAM,QAAQ,mDAAmD;AACvF,SAASC,UAAU,EAAEC,iBAAiB,EAAEC,iBAAiB,QAAQ,oCAAoC;AACrG,MAAMC,oBAAoB,SAASJ,MAAM,CAAC;EACxCK,eAAe,GAAG,yDAAyD;EAC3EC,WAAWA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;IACxB,KAAK,CAAC;MACJ,GAAGA,OAAO;MACVC,IAAI,EAAE,iCAAiC;MACvCC,cAAc,EAAE,CAAC,OAAO,CAAC;MACzBR,UAAU,EAAE,IAAIE,iBAAiB,CAAC,GAAGF,UAAU,CAACS,cAAc,CAAC,SAAS,CAAC,EAAE,GAAGT,UAAU,CAACS,cAAc,CAAC,MAAM,CAAC;IACjH,CAAC,CAAC;EACJ;EACA,MAAMC,QAAQA,CAACC,IAAI,EAAE;IACnB,MAAMC,yBAAyB,GAAG,IAAI,CAACJ,cAAc,CAACK,MAAM,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,CAACL,cAAc,CAACM,QAAQ,CAACH,IAAI,CAACI,SAAS,CAAC;IACxH,MAAMC,qBAAqB,GAAG,IAAI,CAAChB,UAAU,CAACc,QAAQ,CAACH,IAAI,CAACM,SAAS,CAAC;IACtE,IAAI,CAACL,yBAAyB,EAAE,OAAO,KAAK;IAC5C,IAAII,qBAAqB,EAAE,OAAO,IAAI;IACtC,IAAI,CAACA,qBAAqB,EAAE;MAC1B,IAAI;QACF,MAAME,MAAM,GAAGP,IAAI,CAACQ,QAAQ,CAAC,CAAC;QAC9BC,IAAI,CAACC,KAAK,CAACH,MAAM,CAAC;QAClB,OAAO,IAAI,CAACd,eAAe,CAACkB,IAAI,CAACJ,MAAM,CAAC;MAC1C,CAAC,CAAC,OAAOK,KAAK,EAAE;QACd,OAAO,KAAK;MACd;IACF;IACA,OAAO,KAAK;EACd;EACA,MAAMF,KAAKA,CAACV,IAAI,EAAE;IAChB,IAAI,IAAI,CAACa,SAAS,EAAE;MAClB,MAAM,IAAI1B,WAAW,CAAC,iFAAiF,CAAC;IAC1G;IACA,MAAM2B,kBAAkB,GAAG,IAAI5B,kBAAkB,CAAC,CAAC;IACnD,MAAMqB,MAAM,GAAGP,IAAI,CAACQ,QAAQ,CAAC,CAAC;;IAE9B;IACA,IAAI,IAAI,CAACO,UAAU,IAAIR,MAAM,CAACS,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC3C,OAAOF,kBAAkB;IAC3B;IACA,IAAI;MACF,MAAMG,IAAI,GAAGR,IAAI,CAACC,KAAK,CAACH,MAAM,CAAC;MAC/B,MAAMW,OAAO,GAAG5B,iBAAiB,CAAC6B,OAAO,CAACF,IAAI,EAAE,IAAI,CAACG,aAAa,CAAC;MACnEF,OAAO,CAACG,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MAC9BR,kBAAkB,CAACQ,IAAI,CAACJ,OAAO,CAAC;MAChC,OAAOJ,kBAAkB;IAC3B,CAAC,CAAC,OAAOF,KAAK,EAAE;MACd,MAAM,IAAIzB,WAAW,CAAC,kBAAkBa,IAAI,CAACuB,GAAG,GAAG,EAAE;QACnDC,KAAK,EAAEZ;MACT,CAAC,CAAC;IACJ;EACF;AACF;AACA,eAAepB,oBAAoB;AACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}