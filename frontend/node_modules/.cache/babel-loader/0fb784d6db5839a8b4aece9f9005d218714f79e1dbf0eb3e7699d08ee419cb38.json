{"ast":null,"code":"import { isNil, curryN, curry, apply } from 'ramda';\nimport defaultWhen from './defaultWhen.js';\nimport mapIndexed from './mapIndexed.js';\n\n/**\n * Returns a function which is called with the given arguments. If any of the given arguments are null or undefined,\n * the corresponding default value for that argument is used instead.\n *\n * @func fnull\n * @memberOf RA\n * @category Function\n * @sig (a ... -> b) -> [c] -> a ... | c -> b\n * @param {Function} function to be executed\n * @param {Array} defaults default arguments\n * @return {Function} will apply provided arguments or default ones\n * @example\n *\n * const addDefaults = RA.fnull((a, b) => a + b, [4, 5])\n *\n * addDefaults(1, 2); // => 3\n * addDefaults(null, 2); // => 6\n * addDefaults(2, null); // => 7\n * addDefaults(undefined, undefined); // => 9\n */\n\nvar fnull = curry(function (fn, defaults) {\n  return curryN(fn.length, function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var argsWithDefaults = mapIndexed(function (val, idx) {\n      return defaultWhen(isNil, defaults[idx], val);\n    }, args);\n    return apply(fn, argsWithDefaults);\n  });\n});\nexport default fnull;","map":{"version":3,"names":["isNil","curryN","curry","apply","defaultWhen","mapIndexed","fnull","fn","defaults","length","_len","arguments","args","Array","_key","argsWithDefaults","val","idx"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/fnull.js"],"sourcesContent":["import { isNil, curryN, curry, apply } from 'ramda';\nimport defaultWhen from './defaultWhen.js';\nimport mapIndexed from './mapIndexed.js';\n\n/**\n * Returns a function which is called with the given arguments. If any of the given arguments are null or undefined,\n * the corresponding default value for that argument is used instead.\n *\n * @func fnull\n * @memberOf RA\n * @category Function\n * @sig (a ... -> b) -> [c] -> a ... | c -> b\n * @param {Function} function to be executed\n * @param {Array} defaults default arguments\n * @return {Function} will apply provided arguments or default ones\n * @example\n *\n * const addDefaults = RA.fnull((a, b) => a + b, [4, 5])\n *\n * addDefaults(1, 2); // => 3\n * addDefaults(null, 2); // => 6\n * addDefaults(2, null); // => 7\n * addDefaults(undefined, undefined); // => 9\n */\n\nvar fnull = curry(function (fn, defaults) {\n  return curryN(fn.length, function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var argsWithDefaults = mapIndexed(function (val, idx) {\n      return defaultWhen(isNil, defaults[idx], val);\n    }, args);\n    return apply(fn, argsWithDefaults);\n  });\n});\nexport default fnull;"],"mappings":"AAAA,SAASA,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,QAAQ,OAAO;AACnD,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,UAAU,MAAM,iBAAiB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,KAAK,GAAGJ,KAAK,CAAC,UAAUK,EAAE,EAAEC,QAAQ,EAAE;EACxC,OAAOP,MAAM,CAACM,EAAE,CAACE,MAAM,EAAE,YAAY;IACnC,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACF,MAAM,EAAEG,IAAI,GAAG,IAAIC,KAAK,CAACH,IAAI,CAAC,EAAEI,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGJ,IAAI,EAAEI,IAAI,EAAE,EAAE;MACvFF,IAAI,CAACE,IAAI,CAAC,GAAGH,SAAS,CAACG,IAAI,CAAC;IAC9B;IACA,IAAIC,gBAAgB,GAAGV,UAAU,CAAC,UAAUW,GAAG,EAAEC,GAAG,EAAE;MACpD,OAAOb,WAAW,CAACJ,KAAK,EAAEQ,QAAQ,CAACS,GAAG,CAAC,EAAED,GAAG,CAAC;IAC/C,CAAC,EAAEJ,IAAI,CAAC;IACR,OAAOT,KAAK,CAACI,EAAE,EAAEQ,gBAAgB,CAAC;EACpC,CAAC,CAAC;AACJ,CAAC,CAAC;AACF,eAAeT,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}