{"ast":null,"code":"import { pathSatisfies } from 'ramda';\nimport isFunction from './isFunction.js';\n\n/**\n * Checks if input value is a `thenable`.\n * `thenable` is an object or function that defines a `then` method.\n *\n * @func isThenable\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.1.0|v2.1.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isPromise|isPromise}\n * @example\n *\n * RA.isThenable(null); // => false\n * RA.isThenable(undefined); // => false\n * RA.isThenable([]); // => false\n * RA.isThenable(Promise.resolve()); // => true\n * RA.isThenable(Promise.reject()); // => true\n * RA.isThenable({ then: () => 1 }); // => true\n */\nvar isThenable = pathSatisfies(isFunction, ['then']);\nexport default isThenable;","map":{"version":3,"names":["pathSatisfies","isFunction","isThenable"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/isThenable.js"],"sourcesContent":["import { pathSatisfies } from 'ramda';\nimport isFunction from './isFunction.js';\n\n/**\n * Checks if input value is a `thenable`.\n * `thenable` is an object or function that defines a `then` method.\n *\n * @func isThenable\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.1.0|v2.1.0}\n * @category Type\n * @sig * -> Boolean\n * @param {*} val The value to test\n * @return {boolean}\n * @see {@link RA.isPromise|isPromise}\n * @example\n *\n * RA.isThenable(null); // => false\n * RA.isThenable(undefined); // => false\n * RA.isThenable([]); // => false\n * RA.isThenable(Promise.resolve()); // => true\n * RA.isThenable(Promise.reject()); // => true\n * RA.isThenable({ then: () => 1 }); // => true\n */\nvar isThenable = pathSatisfies(isFunction, ['then']);\nexport default isThenable;"],"mappings":"AAAA,SAASA,aAAa,QAAQ,OAAO;AACrC,OAAOC,UAAU,MAAM,iBAAiB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,UAAU,GAAGF,aAAa,CAACC,UAAU,EAAE,CAAC,MAAM,CAAC,CAAC;AACpD,eAAeC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}