{"ast":null,"code":"import { bind, curryN } from 'ramda';\n\n/**\n * Returns the largest integer less than or equal to a given number.\n *\n * Note: floor(null) returns integer 0 and do not give a NaN error.\n *\n * @func floor\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.15.0|v2.15.0}\n * @category Math\n * @sig Number -> Number\n * @param {number} number The number to floor\n * @return {number} A number representing the largest integer less than or equal to the specified number\n * @example\n *\n * RA.floor(45.95); //=> 45\n * RA.floor(45.05); //=> 45\n * RA.floor(4); //=> 4\n * RA.floor(-45.05); //=> -46\n * RA.floor(-45.95); //=> -46\n * RA.floor(null); //=> 0\n */\n\nvar floor = curryN(1, bind(Math.floor, Math));\nexport default floor;","map":{"version":3,"names":["bind","curryN","floor","Math"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda-adjunct/es/floor.js"],"sourcesContent":["import { bind, curryN } from 'ramda';\n\n/**\n * Returns the largest integer less than or equal to a given number.\n *\n * Note: floor(null) returns integer 0 and do not give a NaN error.\n *\n * @func floor\n * @memberOf RA\n * @since {@link https://char0n.github.io/ramda-adjunct/2.15.0|v2.15.0}\n * @category Math\n * @sig Number -> Number\n * @param {number} number The number to floor\n * @return {number} A number representing the largest integer less than or equal to the specified number\n * @example\n *\n * RA.floor(45.95); //=> 45\n * RA.floor(45.05); //=> 45\n * RA.floor(4); //=> 4\n * RA.floor(-45.05); //=> -46\n * RA.floor(-45.95); //=> -46\n * RA.floor(null); //=> 0\n */\n\nvar floor = curryN(1, bind(Math.floor, Math));\nexport default floor;"],"mappings":"AAAA,SAASA,IAAI,EAAEC,MAAM,QAAQ,OAAO;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,KAAK,GAAGD,MAAM,CAAC,CAAC,EAAED,IAAI,CAACG,IAAI,CAACD,KAAK,EAAEC,IAAI,CAAC,CAAC;AAC7C,eAAeD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}