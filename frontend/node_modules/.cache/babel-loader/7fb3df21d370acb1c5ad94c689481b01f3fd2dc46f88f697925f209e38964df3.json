{"ast":null,"code":"import _curry2 from \"./internal/_curry2.js\";\nimport ap from \"./ap.js\";\nimport map from \"./map.js\";\nimport prepend from \"./prepend.js\";\nimport reduceRight from \"./reduceRight.js\";\nimport identity from \"./internal/_identity.js\";\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `\"fantasy-land/traverse\"` or the `traverse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig fantasy-land/of :: TypeRep f => f ~> a -> f a\n * @sig (Applicative f, Traversable t) => TypeRep f -> t (f a) -> f (t a)\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Object|Function} TypeRepresentative with an `of` or `fantasy-land/of` method\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of(Array), Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of(Array), Nothing());       //=> [Nothing()]\n */\nvar sequence = /*#__PURE__*/_curry2(function sequence(F, traversable) {\n  var of = typeof F['fantasy-land/of'] === 'function' ? F['fantasy-land/of'] : typeof F.of === 'function' ? F.of : F;\n  var TypeRep = {\n    'fantasy-land/of': of\n  };\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](TypeRep, identity) : typeof traversable.traverse === 'function' ? traversable.traverse(TypeRep, identity) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\nexport default sequence;","map":{"version":3,"names":["_curry2","ap","map","prepend","reduceRight","identity","sequence","F","traversable","of","TypeRep","traverse","x","acc"],"sources":["/home/mikezvz/Documents/GitHub/InsuranceCalculator/frontend/node_modules/ramda/es/sequence.js"],"sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\nimport ap from \"./ap.js\";\nimport map from \"./map.js\";\nimport prepend from \"./prepend.js\";\nimport reduceRight from \"./reduceRight.js\";\nimport identity from \"./internal/_identity.js\";\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `\"fantasy-land/traverse\"` or the `traverse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig fantasy-land/of :: TypeRep f => f ~> a -> f a\n * @sig (Applicative f, Traversable t) => TypeRep f -> t (f a) -> f (t a)\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Object|Function} TypeRepresentative with an `of` or `fantasy-land/of` method\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of(Array), Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of(Array), Nothing());       //=> [Nothing()]\n */\nvar sequence = /*#__PURE__*/_curry2(function sequence(F, traversable) {\n  var of = typeof F['fantasy-land/of'] === 'function' ? F['fantasy-land/of'] : typeof F.of === 'function' ? F.of : F;\n  var TypeRep = {\n    'fantasy-land/of': of\n  };\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](TypeRep, identity) : typeof traversable.traverse === 'function' ? traversable.traverse(TypeRep, identity) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\nexport default sequence;"],"mappings":"AAAA,OAAOA,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,EAAE,MAAM,SAAS;AACxB,OAAOC,GAAG,MAAM,UAAU;AAC1B,OAAOC,OAAO,MAAM,cAAc;AAClC,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,QAAQ,MAAM,yBAAyB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,QAAQ,GAAG,aAAaN,OAAO,CAAC,SAASM,QAAQA,CAACC,CAAC,EAAEC,WAAW,EAAE;EACpE,IAAIC,EAAE,GAAG,OAAOF,CAAC,CAAC,iBAAiB,CAAC,KAAK,UAAU,GAAGA,CAAC,CAAC,iBAAiB,CAAC,GAAG,OAAOA,CAAC,CAACE,EAAE,KAAK,UAAU,GAAGF,CAAC,CAACE,EAAE,GAAGF,CAAC;EAClH,IAAIG,OAAO,GAAG;IACZ,iBAAiB,EAAED;EACrB,CAAC;EACD,OAAO,OAAOD,WAAW,CAAC,uBAAuB,CAAC,KAAK,UAAU,GAAGA,WAAW,CAAC,uBAAuB,CAAC,CAACE,OAAO,EAAEL,QAAQ,CAAC,GAAG,OAAOG,WAAW,CAACG,QAAQ,KAAK,UAAU,GAAGH,WAAW,CAACG,QAAQ,CAACD,OAAO,EAAEL,QAAQ,CAAC,GAAGD,WAAW,CAAC,UAAUQ,CAAC,EAAEC,GAAG,EAAE;IACjP,OAAOZ,EAAE,CAACC,GAAG,CAACC,OAAO,EAAES,CAAC,CAAC,EAAEC,GAAG,CAAC;EACjC,CAAC,EAAEJ,EAAE,CAAC,EAAE,CAAC,EAAED,WAAW,CAAC;AACzB,CAAC,CAAC;AACF,eAAeF,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}